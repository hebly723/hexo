{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":0},{"_id":"source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":0},{"_id":"source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":0},{"_id":"source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":0},{"_id":"source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":0},{"_id":"source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":0},{"_id":"source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":0},{"_id":"source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":0},{"_id":"source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":0},{"_id":"source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":0},{"_id":"source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":0},{"_id":"source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":0},{"_id":"source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":0},{"_id":"source/images/mybatis-structure.jpg","path":"images/mybatis-structure.jpg","modified":1,"renderable":0},{"_id":"source/images/avatar.png","path":"images/avatar.png","modified":1,"renderable":0},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"source/404.md","hash":"99a5c08c42cfb89ccf28fb2dda02e34695684561","modified":1476027119955},{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1475937896606},{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1478261558176},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1478261558184},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1478261558184},{"_id":"themes/landscape/README.md","hash":"c7e83cfe8f2c724fc9cac32bd71bb5faf9ceeddb","modified":1478261558180},{"_id":"themes/landscape/_config.yml","hash":"fb8c98a0f6ff9f962637f329c22699721854cd73","modified":1478261558176},{"_id":"themes/landscape/package.json","hash":"85358dc34311c6662e841584e206a4679183943f","modified":1478261558176},{"_id":"source/_posts/.生态文明概论笔记.md.swp","hash":"d02572450193ab8b3ecc807d0d0398051210cd65","modified":1476187267480},{"_id":"source/_posts/.修改一对一的数据表成一对多的数据表.md.swp","hash":"b1a2e413203dc8431b35e06e75307cb157423598","modified":1476184078464},{"_id":"source/_posts/MarkDown标签练习.md","hash":"99457eb95cc86b7658a67ec733f262894a0840d7","modified":1478529217769},{"_id":"source/_posts/My-New-post.md","hash":"c880dbf32e1735c8a352a42e76b018b3a7b710b5","modified":1476070367423},{"_id":"source/_posts/game-design-study.md","hash":"3c1b7ccee10d230d93c86552fed13e61ff3e6db6","modified":1477453171519},{"_id":"source/_posts/githubNoPassWord.md","hash":"642960678e6bae08b53f83cde5ba664c75fd9f3c","modified":1478530810045},{"_id":"source/_posts/hello-world.md","hash":"7f8ab90a6bf71a015a2a089eaf9a226bd7fac0ba","modified":1478485317554},{"_id":"source/_posts/hitnetworks.md","hash":"30adc29c151dc6d50ab4340ee4fc480b4c2ae72d","modified":1478530331585},{"_id":"source/_posts/parseInt.md","hash":"04d385845bb0c94cbfa7bbb05fd024162b938be8","modified":1478484893670},{"_id":"source/_posts/修改一对一的数据表成一对多的数据表.md","hash":"370bd24e1450bb5e530c1da3f53581e6f610e57c","modified":1476183172660},{"_id":"source/_posts/mybatis.md","hash":"55b17c82ffb085b5f517db74faf48d1cede96a73","modified":1478484815774},{"_id":"source/_posts/生态文明概论笔记.md","hash":"1be3a922cd28f0f8efe626a38b5bd09cb1bda9d8","modified":1478485200702},{"_id":"source/_posts/编译原理学习（一）.md","hash":"731564b8995b421a264376886e57416fc826372f","modified":1476193214952},{"_id":"source/_posts/读后感——增长的极限.md","hash":"82c3daf778ae29f8ec98d573c7a76c8551471e21","modified":1478485243786},{"_id":"source/_posts/软件体系与设计.md","hash":"99aa020b69c1f62e23b0b8c599f4f239de088878","modified":1476180451725},{"_id":"source/about/index.md","hash":"fb1ab59bfc70d0b02d6722719b49728331a42f6a","modified":1476071611139},{"_id":"source/categories/index.md","hash":"730342f2015549930a9e16d925459d2216594a1c","modified":1476069793227},{"_id":"source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1476068524859},{"_id":"source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1476068524859},{"_id":"source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1476068524859},{"_id":"source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1476068524859},{"_id":"source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1476068524859},{"_id":"source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1476068524859},{"_id":"source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1476068524859},{"_id":"source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1476068524859},{"_id":"source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1476068524859},{"_id":"source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1476068524859},{"_id":"source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1476068524859},{"_id":"source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1476068524859},{"_id":"source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1476068524859},{"_id":"source/tags/index.md","hash":"b9f4897e380f3fba5ea7956434813bac6761b4e5","modified":1476069130219},{"_id":"source/images/mybatis-structure.jpg","hash":"6925490774207c9133e94b0cca4a1fae20717702","modified":1478259585873},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1478261558180},{"_id":"themes/landscape/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1478261558184},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1478261558180},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1478261558180},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1478261558184},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1478261558180},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1478261558180},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1478261558184},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1478261558184},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1478261558184},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1478261558184},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1478261558184},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1478261558184},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1478261558180},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1478261558184},{"_id":"source/images/avatar.png","hash":"e16e89509e766fc4efc59f5941966680b7e02e1c","modified":1475942535394},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"82a30f81c0e8ba4a8af17acd6cc99e93834e4d5e","modified":1478261558184},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1478261558184},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"931aaaffa0910a48199388ede576184ff15793ee","modified":1478261558184},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1478261558184},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1478261558184},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1478261558184},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"4fe8853e864d192701c03e5cd3a5390287b90612","modified":1478261558184},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"c21ca56f419d01a9f49c27b6be9f4a98402b2aa3","modified":1478261558184},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1478261558184},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1478261558184},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1478261558184},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1478261558184},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1478261558184},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1478261558184},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1478261558184},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1478261558180},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1478261558180},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1478261558180},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1478261558180},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1478261558180},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1478261558180},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1478261558180},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1478261558180},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1478261558180},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1478261558180},{"_id":"themes/landscape/source/css/_variables.styl","hash":"5e37a6571caf87149af83ac1cc0cdef99f117350","modified":1478261558176},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1478261558180},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1478261558180},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1478261558184},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1478261558184},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1478261558184},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1478261558184},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1478261558184},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1478261558184},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1478261558180},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1478261558180},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1478261558180},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1478261558180},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1478261558180},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1478261558180},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1478261558176},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1478261558176},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1478261558176},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1478261558176},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1478261558176},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1478261558176},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1478261558176},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1478261558176},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1478261558176},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1478261558176},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1478261558180},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1478261558180},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1478261558180},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1478261558180},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1478261558180},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1478261558180},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1478261558176},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"d8aed862f72036b67f304ab27902127ad3508ca0","modified":1478314371258},{"_id":"public/404.html","hash":"e01f2bb0e1e840389fce7619b938c71fdccb0a05","modified":1478617837547},{"_id":"public/about/index.html","hash":"b219bbde5cc1a3637ed951c5ab5cf406a71e603a","modified":1478617837547},{"_id":"public/tags/index.html","hash":"75925d0116fb17be29448c84a18a9d32d25307e0","modified":1478617837548},{"_id":"public/categories/index.html","hash":"7796f8c985a0621ae0d7e0c3b5302be5e2499398","modified":1478617837548},{"_id":"public/2016/11/07/githubNoPassWord/index.html","hash":"c1697c6e1c54617321dfe086a49b162ca5f14150","modified":1478617837548},{"_id":"public/2016/11/07/hitnetworks/index.html","hash":"93c5e0efb42a0279a0a454467e3a84c53c9fd2b4","modified":1478617837548},{"_id":"public/2016/11/07/hello-world/index.html","hash":"2ee32b5aae35a64bde5b118f7ec48a0a0fff2bb1","modified":1478617837548},{"_id":"public/2016/10/14/game-design-study/index.html","hash":"a213c8dbf3f4c234d7355535851538ef29a94aac","modified":1478617837549},{"_id":"public/2016/10/11/编译原理学习（一）/index.html","hash":"c51a0051d33e70a57f8e6117c3a71d4ae9f2b262","modified":1478617837549},{"_id":"public/2016/10/11/parseInt/index.html","hash":"1281e53d4161b0914a9ea3a6dd70b02a340dc2fa","modified":1478617837549},{"_id":"public/2016/10/09/MarkDown标签练习/index.html","hash":"326eeb994423548a0acd3712930fcf77b43ce8ab","modified":1478617837549},{"_id":"public/2016/10/09/生态文明概论笔记/index.html","hash":"1b1a2feba7b145d3524476bf63535d2e8f3482df","modified":1478617837549},{"_id":"public/2016/10/08/My-New-post/index.html","hash":"05939488a8b083372f8fd05fabd36e0747c2c254","modified":1478617837549},{"_id":"public/archives/index.html","hash":"02ad7dbba7fc691ea693f870848da24eae68e840","modified":1478617837549},{"_id":"public/archives/page/2/index.html","hash":"2fc66c80ab87c2632870f67de82325d836192b52","modified":1478617837549},{"_id":"public/archives/2016/index.html","hash":"28e2449ff534d663603820e043a04df129ddfead","modified":1478617837549},{"_id":"public/archives/2016/page/2/index.html","hash":"c503792a4c9a6264c5e97c8cd34488e7a42e3b4e","modified":1478617837550},{"_id":"public/archives/2016/10/index.html","hash":"517ea41ce4b5d19124ce31c1a10fab6ad3b56b8a","modified":1478617837551},{"_id":"public/archives/2016/11/index.html","hash":"62faf11d35104c2f635be7ac9f4f06ceee7c5f10","modified":1478617837551},{"_id":"public/categories/笔记/index.html","hash":"dbc9bbc9c78af68831ec73abb967e30c3c78349b","modified":1478617837551},{"_id":"public/categories/说明书/index.html","hash":"36577f239b43df923ed89b395d9f1874f22197e6","modified":1478617837551},{"_id":"public/categories/笔记/练习/index.html","hash":"ad2b8f214b8a9a7291b268056a01de949918c3ae","modified":1478617837551},{"_id":"public/categories/笔记/心得/index.html","hash":"c8b9cd42dbac5371cf509294d9c84eb98d77fbe3","modified":1478617837551},{"_id":"public/categories/笔记/追课/index.html","hash":"386c69678981928322791857a8cc43a36e066cb0","modified":1478617837551},{"_id":"public/categories/笔记/过程记录/index.html","hash":"7d009b7296c535a365a057acec04e3a0d956faed","modified":1478617837551},{"_id":"public/categories/笔记/摘录/index.html","hash":"919af66aa700ff1cf0584fc33405a92e3030501f","modified":1478617837552},{"_id":"public/categories/笔记/课堂记录/index.html","hash":"296f8b67442549ffd645e3f3896e975b47898441","modified":1478617837552},{"_id":"public/categories/作业/index.html","hash":"b9588445681d3a2d7dab93663a9cf1422de0c242","modified":1478617837552},{"_id":"public/page/2/index.html","hash":"68fe696088bd548dda2eb8c57c2e64ba1aca1876","modified":1478617837552},{"_id":"public/tags/Hexo/index.html","hash":"dece10682168eb4b71616d97f1827e7bf0f31cc7","modified":1478617837552},{"_id":"public/tags/草稿/index.html","hash":"ddfc63e1a3a22388743ae9ef93bec97ba9c77377","modified":1478617837552},{"_id":"public/tags/游戏/index.html","hash":"d18a9517f684e5bf79b845ba2e62ff192f3a7fd4","modified":1478617837552},{"_id":"public/tags/生活/index.html","hash":"c4c6ab3213d5baada8205ba2243f3b93f599c147","modified":1478617837552},{"_id":"public/tags/linux/index.html","hash":"0b05bc9d1b38b819da64dc544ae045a8e994669a","modified":1478617837552},{"_id":"public/tags/git/index.html","hash":"3151c721500382c13f57e3292585c330747910d2","modified":1478617837552},{"_id":"public/tags/Java/index.html","hash":"fbb85937939b01c1e8bc9168be4c39a5a33cbf47","modified":1478617837552},{"_id":"public/tags/类型转换/index.html","hash":"6624866d6def875724fdd3cdb3121458e82f3caa","modified":1478617837552},{"_id":"public/tags/整数/index.html","hash":"2189d0ddd057de6f7fcd18e089864ee82152859e","modified":1478617837552},{"_id":"public/tags/字符串/index.html","hash":"9376606be8b1b960dbe89ddbb5e3131e714551d8","modified":1478617837552},{"_id":"public/tags/计算机网络/index.html","hash":"b28c35092ccff0e203a14f751fc718b47d9beaad","modified":1478617837553},{"_id":"public/tags/数据库/index.html","hash":"d862703c9454f7371a52bd757ab3bab271052898","modified":1478617837553},{"_id":"public/tags/mysql/index.html","hash":"ed37cec13bc76db6916f7fe824af4a486b79e242","modified":1478617837553},{"_id":"public/tags/mybatis/index.html","hash":"72276df280e73c96248afb4380e032872fb902f2","modified":1478617837553},{"_id":"public/tags/人文社科/index.html","hash":"81c628f13242c5d4378e42c0d78a7aa7230cef15","modified":1478617837553},{"_id":"public/tags/底层/index.html","hash":"1512bac80cf0d9ad3b4616ecc36243ba2dc64bb9","modified":1478617837553},{"_id":"public/tags/编译原理/index.html","hash":"7bc9fefc0b60eae745b8d628bf7b5b3efd81a7bf","modified":1478617837553},{"_id":"public/tags/软件体系与设计/index.html","hash":"1a2ea1da54843641f4300918d5f3ed4e02f22134","modified":1478617837553},{"_id":"public/tags/复习/index.html","hash":"daba72c65e0ff9fb94a6b425b13945be8ec38310","modified":1478617837553},{"_id":"public/tags/读书笔记/index.html","hash":"f2376bdc0718a95d0c502b523e2871dd5875782f","modified":1478617837553},{"_id":"public/2016/11/04/mybatis/index.html","hash":"1af74d05c3e5b054f4d6b6dd4993b93ca1413fd6","modified":1478617837553},{"_id":"public/2016/10/12/读后感——增长的极限/index.html","hash":"b82b7827845905d45aaf894b6fbadfacf971b63e","modified":1478617837553},{"_id":"public/2016/10/10/软件体系与设计/index.html","hash":"4a81bf8c682e762282c743c3807c50057749050f","modified":1478617837553},{"_id":"public/2016/10/09/修改一对一的数据表成一对多的数据表/index.html","hash":"bab447e328697e06ebfb8513bac7897977855540","modified":1478617837553},{"_id":"public/index.html","hash":"b752a3d681c8aecbdbf6740f6a436eea623643bf","modified":1478617837553},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1478617837563},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1478617837563},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1478617837563},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1478617837563},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1478617837563},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1478617837563},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1478617837563},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1478617837564},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1478617837564},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1478617837564},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1478617837564},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1478617837564},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1478617837564},{"_id":"public/images/mybatis-structure.jpg","hash":"6925490774207c9133e94b0cca4a1fae20717702","modified":1478617837564},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1478617837564},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1478617837564},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1478617837564},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1478617837564},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1478617837564},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1478617837564},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1478617837564},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1478617837564},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1478617837564},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1478617837564},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1478617838262},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1478617838268},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1478617838268},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1478617838268},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1478617838268},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1478617838268},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1478617838268},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1478617838268},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1478617838268},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1478617838268},{"_id":"public/css/style.css","hash":"fffb3966bf36057a325498aba9ce3a2ea7bd79e1","modified":1478617838268},{"_id":"public/images/avatar.png","hash":"e16e89509e766fc4efc59f5941966680b7e02e1c","modified":1478617838268},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1478617838274},{"_id":"public/css/images/banner.jpg","hash":"d8aed862f72036b67f304ab27902127ad3508ca0","modified":1478617838274}],"Category":[{"name":"笔记","_id":"civ9mvscp0005az99rgh9rxpd"},{"name":"说明书","_id":"civ9mvsdf000naz997e3r4dys"},{"name":"练习","parent":"civ9mvscp0005az99rgh9rxpd","_id":"civ9mvsdp000raz99vvjcxzx3"},{"name":"心得","parent":"civ9mvscp0005az99rgh9rxpd","_id":"civ9mvsdx0011az990wt6p37f"},{"name":"追课","parent":"civ9mvscp0005az99rgh9rxpd","_id":"civ9mvsdy0017az99ia4e7lh5"},{"name":"过程记录","parent":"civ9mvscp0005az99rgh9rxpd","_id":"civ9mvse3001baz993o6sx1tr"},{"name":"摘录","parent":"civ9mvscp0005az99rgh9rxpd","_id":"civ9mvse5001faz99nfxt7hhw"},{"name":"课堂记录","parent":"civ9mvscp0005az99rgh9rxpd","_id":"civ9mvsed001oaz99m523mhme"},{"name":"作业","_id":"civ9mvsek001zaz99fpt2zwqq"}],"Data":[],"Page":[{"title":"404","date":"2016-10-09T15:31:59.991Z","tags":null,"_content":"{% blockquote %}\n还是好神奇\n{% endblockquote %}\n","source":"404.md","raw":"---\ntitle: 404\ndate: \ntags:\n---\n{% blockquote %}\n还是好神奇\n{% endblockquote %}\n","updated":"2016-10-09T15:31:59.955Z","path":"404.html","comments":1,"layout":"page","_id":"civ9mvsbj0000az995qz9g9e9","content":"<blockquote><p>还是好神奇</p>\n</blockquote>\n","excerpt":"","more":"<blockquote><p>还是好神奇</p>\n</blockquote>\n"},{"title":"about","date":"2016-10-09T14:59:07.000Z","type":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2016-10-09 22:59:07\ntype: \"about\"\n---\n","updated":"2016-10-10T03:53:31.139Z","path":"about/index.html","comments":1,"layout":"page","_id":"civ9mvscg0002az99h1hitz2j","content":"","excerpt":"","more":""},{"title":"tags","date":"2016-10-09T14:59:35.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-10-09 22:59:35\ntype: \"tags\"\ncomments: false\n---\n","updated":"2016-10-10T03:12:10.219Z","path":"tags/index.html","layout":"page","_id":"civ9mvscn0004az998ghpzezu","content":"","excerpt":"","more":""},{"title":"categories","date":"2016-10-09T14:58:00.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-10-09 22:58:00\ntype: \"categories\"\n---\n","updated":"2016-10-10T03:23:13.227Z","path":"categories/index.html","comments":1,"layout":"page","_id":"civ9mvscu0008az992o6xuey0","content":"","excerpt":"","more":""}],"Post":[{"title":"MarkDown标签练习","date":"2016-10-09T12:58:05.000Z","_content":"# 语法\n<!-- more -->\n```\n{% blockquote [author[, source]] [link] [source_link_title] %}\ncontent\n{% endblockquote %}\n```\n## 无修饰例子（官方）\n```\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.\n{% endblockquote %}\n```\n## 运行效果\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.\n{% endblockquote %}\n## 例子（自写）\n{% blockquote %}\n据说这是一个块。\n那么让我们来看看\n{% endblockquote %}\n## 书名（官方）\n```\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n```\n##运行效果\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n## 引用推特例子\n```\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n```\n## 运行效果\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n## 网页转载例子\n```\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n```\n## 运行效果\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n","source":"_posts/MarkDown标签练习.md","raw":"---\ntitle: MarkDown标签练习\ndate: 2016-10-09 20:58:05\ntags: Hexo\ncategories: \n - 笔记\n - 练习\n---\n# 语法\n<!-- more -->\n```\n{% blockquote [author[, source]] [link] [source_link_title] %}\ncontent\n{% endblockquote %}\n```\n## 无修饰例子（官方）\n```\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.\n{% endblockquote %}\n```\n## 运行效果\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.\n{% endblockquote %}\n## 例子（自写）\n{% blockquote %}\n据说这是一个块。\n那么让我们来看看\n{% endblockquote %}\n## 书名（官方）\n```\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n```\n##运行效果\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n## 引用推特例子\n```\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n```\n## 运行效果\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n## 网页转载例子\n```\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n```\n## 运行效果\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n","slug":"MarkDown标签练习","published":1,"updated":"2016-11-07T14:33:37.769Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civ9mvscc0001az99r7ow6snp","content":"<h1 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h1><a id=\"more\"></a>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;</div><div class=\"line\">content</div><div class=\"line\">&#123;% endblockquote %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"无修饰例子（官方）\"><a href=\"#无修饰例子（官方）\" class=\"headerlink\" title=\"无修饰例子（官方）\"></a>无修饰例子（官方）</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% blockquote %&#125;</div><div class=\"line\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</div><div class=\"line\">&#123;% endblockquote %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"运行效果\"><a href=\"#运行效果\" class=\"headerlink\" title=\"运行效果\"></a>运行效果</h2><blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p>\n</blockquote>\n<h2 id=\"例子（自写）\"><a href=\"#例子（自写）\" class=\"headerlink\" title=\"例子（自写）\"></a>例子（自写）</h2><blockquote><p>据说这是一个块。<br>那么让我们来看看</p>\n</blockquote>\n<h2 id=\"书名（官方）\"><a href=\"#书名（官方）\" class=\"headerlink\" title=\"书名（官方）\"></a>书名（官方）</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% blockquote David Levithan, Wide Awake %&#125;</div><div class=\"line\">Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</div><div class=\"line\">&#123;% endblockquote %&#125;</div></pre></td></tr></table></figure>\n<p>##运行效果<br><blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>\n<footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote></p>\n<h2 id=\"引用推特例子\"><a href=\"#引用推特例子\" class=\"headerlink\" title=\"引用推特例子\"></a>引用推特例子</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %&#125;</div><div class=\"line\">NEW: DevDocs now comes with syntax highlighting. http://devdocs.io</div><div class=\"line\">&#123;% endblockquote %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"运行效果-1\"><a href=\"#运行效果-1\" class=\"headerlink\" title=\"运行效果\"></a>运行效果</h2><blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href=\"http://devdocs.io\" target=\"_blank\" rel=\"external\">http://devdocs.io</a></p>\n<footer><strong>@DevDocs</strong><cite><a href=\"https://twitter.com/devdocs/status/356095192085962752\" target=\"_blank\" rel=\"external\">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote>\n<h2 id=\"网页转载例子\"><a href=\"#网页转载例子\" class=\"headerlink\" title=\"网页转载例子\"></a>网页转载例子</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %&#125;</div><div class=\"line\">Every interaction is both precious and an opportunity to delight.</div><div class=\"line\">&#123;% endblockquote %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"运行效果-2\"><a href=\"#运行效果-2\" class=\"headerlink\" title=\"运行效果\"></a>运行效果</h2><blockquote><p>Every interaction is both precious and an opportunity to delight.</p>\n<footer><strong>Seth Godin</strong><cite><a href=\"http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html\" target=\"_blank\" rel=\"external\">Welcome to Island Marketing</a></cite></footer></blockquote>\n","excerpt":"<h1 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h1>","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;</div><div class=\"line\">content</div><div class=\"line\">&#123;% endblockquote %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"无修饰例子（官方）\"><a href=\"#无修饰例子（官方）\" class=\"headerlink\" title=\"无修饰例子（官方）\"></a>无修饰例子（官方）</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% blockquote %&#125;</div><div class=\"line\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</div><div class=\"line\">&#123;% endblockquote %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"运行效果\"><a href=\"#运行效果\" class=\"headerlink\" title=\"运行效果\"></a>运行效果</h2><blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p>\n</blockquote>\n<h2 id=\"例子（自写）\"><a href=\"#例子（自写）\" class=\"headerlink\" title=\"例子（自写）\"></a>例子（自写）</h2><blockquote><p>据说这是一个块。<br>那么让我们来看看</p>\n</blockquote>\n<h2 id=\"书名（官方）\"><a href=\"#书名（官方）\" class=\"headerlink\" title=\"书名（官方）\"></a>书名（官方）</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% blockquote David Levithan, Wide Awake %&#125;</div><div class=\"line\">Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</div><div class=\"line\">&#123;% endblockquote %&#125;</div></pre></td></tr></table></figure>\n<p>##运行效果<br><blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>\n<footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote></p>\n<h2 id=\"引用推特例子\"><a href=\"#引用推特例子\" class=\"headerlink\" title=\"引用推特例子\"></a>引用推特例子</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %&#125;</div><div class=\"line\">NEW: DevDocs now comes with syntax highlighting. http://devdocs.io</div><div class=\"line\">&#123;% endblockquote %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"运行效果-1\"><a href=\"#运行效果-1\" class=\"headerlink\" title=\"运行效果\"></a>运行效果</h2><blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href=\"http://devdocs.io\">http://devdocs.io</a></p>\n<footer><strong>@DevDocs</strong><cite><a href=\"https://twitter.com/devdocs/status/356095192085962752\">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote>\n<h2 id=\"网页转载例子\"><a href=\"#网页转载例子\" class=\"headerlink\" title=\"网页转载例子\"></a>网页转载例子</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %&#125;</div><div class=\"line\">Every interaction is both precious and an opportunity to delight.</div><div class=\"line\">&#123;% endblockquote %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"运行效果-2\"><a href=\"#运行效果-2\" class=\"headerlink\" title=\"运行效果\"></a>运行效果</h2><blockquote><p>Every interaction is both precious and an opportunity to delight.</p>\n<footer><strong>Seth Godin</strong><cite><a href=\"http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html\">Welcome to Island Marketing</a></cite></footer></blockquote>"},{"title":"My New post","date":"2016-10-08T15:06:08.000Z","_content":"usr/local/bin\n<!-- more -->\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n","source":"_posts/My-New-post.md","raw":"---\ntitle: My New post\ndate: 2016-10-08 23:06:08\ntags: 草稿\ncategories: 笔记\n---\nusr/local/bin\n<!-- more -->\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n","slug":"My-New-post","published":1,"updated":"2016-10-10T03:32:47.423Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civ9mvsci0003az990c554zi2","content":"<p>usr/local/bin<br><a id=\"more\"></a><br><blockquote><p>Every interaction is both precious and an opportunity to delight.</p>\n<footer><strong>Seth Godin</strong><cite><a href=\"http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html\" target=\"_blank\" rel=\"external\">Welcome to Island Marketing</a></cite></footer></blockquote></p>\n","excerpt":"<p>usr/local/bin<br>","more":"<br><blockquote><p>Every interaction is both precious and an opportunity to delight.</p>\n<footer><strong>Seth Godin</strong><cite><a href=\"http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html\">Welcome to Island Marketing</a></cite></footer></blockquote></p>"},{"title":"game design study","date":"2016-10-14T15:26:40.000Z","_content":"书中摘录\n\n<!-- more -->\n# 先去做喜欢的那些事\n{% blockquote Scott Rogers, Level up!The Guide To Great Video Game Design %}\n有时候你得使劲设计一个不太让你兴奋的游戏功能。如果这让你困扰不堪，那么就先略过这部分，调到让你开心的部分做起，比如花点时间琢磨Boss战，从而摆脱界面设计带来的枯燥感。但是，我推荐的这条技巧仅仅是个权宜之计，因为它导致的后果可能很严重！事实上，游戏的开发是受限于日程表、截止期和预算的。如果你不能按时完成预定的工作，一直跑去做自己喜欢的部分来回避脏活、累活，那么整个游戏、整个团队甚至整个公司都有可能因此蒙受巨大的损失。千万别拖拖拉拉，懂的管理自己的时间非常重要。要多一点责任心。\n{% endblockquote %}\n# 做游戏就像做辣酱\n{% blockquote Scott Rogers, Level up!The Guide To Great Video Game Design %}\n和做辣酱相似，首先你得有个菜谱，菜谱其实就是游戏开发里的文档。选对菜谱非常重要，因为你要熬的是辣酱，不是炖汤、炒菜或者别的什么，写好游戏文档也一样。游戏文档不仅需要描述游戏是什么，还要包括游戏的做法，这点与菜谱也属不谋而合。做辣酱时要严格按照菜谱要求来做，但也要随机应变，做些小改动，特别是在有些部分和预想的不一样时。然后，和做辣酱一样，游戏开发中也得不时地尝尝自己的半成品，然后对内容做些调整；游戏中有的重复内容会让人觉得“太腻”了，这时候你就需要让他具有鲜明的独特性。\n下一步就是准备配料了。就像做辣酱需要准备各种配料一样，游戏开发也需要不同的人员与工具来完成设计，另外，做游戏也需要一些合适的硬件设备，就像做辣酱的时候你需要锅碗瓢盆一样。不过，有时候你手头可能缺一些所需的配料，正如你的团队有时人手或者资源不够，这时候你就必须利用这些有限的资源来些“即兴表演”，临时发挥一下了。其实问题也不大，我听说那些牛仔光用篝火和小罐子就能做出美味的辣酱。\n{% endblockquote %}\n","source":"_posts/game-design-study.md","raw":"---\ntitle: game design study\ndate: 2016-10-14 23:26:40\ntags:\n - 游戏\n - 生活\ncategories:\n - 笔记\n - 摘录\n---\n书中摘录\n\n<!-- more -->\n# 先去做喜欢的那些事\n{% blockquote Scott Rogers, Level up!The Guide To Great Video Game Design %}\n有时候你得使劲设计一个不太让你兴奋的游戏功能。如果这让你困扰不堪，那么就先略过这部分，调到让你开心的部分做起，比如花点时间琢磨Boss战，从而摆脱界面设计带来的枯燥感。但是，我推荐的这条技巧仅仅是个权宜之计，因为它导致的后果可能很严重！事实上，游戏的开发是受限于日程表、截止期和预算的。如果你不能按时完成预定的工作，一直跑去做自己喜欢的部分来回避脏活、累活，那么整个游戏、整个团队甚至整个公司都有可能因此蒙受巨大的损失。千万别拖拖拉拉，懂的管理自己的时间非常重要。要多一点责任心。\n{% endblockquote %}\n# 做游戏就像做辣酱\n{% blockquote Scott Rogers, Level up!The Guide To Great Video Game Design %}\n和做辣酱相似，首先你得有个菜谱，菜谱其实就是游戏开发里的文档。选对菜谱非常重要，因为你要熬的是辣酱，不是炖汤、炒菜或者别的什么，写好游戏文档也一样。游戏文档不仅需要描述游戏是什么，还要包括游戏的做法，这点与菜谱也属不谋而合。做辣酱时要严格按照菜谱要求来做，但也要随机应变，做些小改动，特别是在有些部分和预想的不一样时。然后，和做辣酱一样，游戏开发中也得不时地尝尝自己的半成品，然后对内容做些调整；游戏中有的重复内容会让人觉得“太腻”了，这时候你就需要让他具有鲜明的独特性。\n下一步就是准备配料了。就像做辣酱需要准备各种配料一样，游戏开发也需要不同的人员与工具来完成设计，另外，做游戏也需要一些合适的硬件设备，就像做辣酱的时候你需要锅碗瓢盆一样。不过，有时候你手头可能缺一些所需的配料，正如你的团队有时人手或者资源不够，这时候你就必须利用这些有限的资源来些“即兴表演”，临时发挥一下了。其实问题也不大，我听说那些牛仔光用篝火和小罐子就能做出美味的辣酱。\n{% endblockquote %}\n","slug":"game-design-study","published":1,"updated":"2016-10-26T03:39:31.519Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civ9mvscs0007az99h3cp82oc","content":"<p>书中摘录</p>\n<a id=\"more\"></a>\n<h1 id=\"先去做喜欢的那些事\"><a href=\"#先去做喜欢的那些事\" class=\"headerlink\" title=\"先去做喜欢的那些事\"></a>先去做喜欢的那些事</h1><blockquote><p>有时候你得使劲设计一个不太让你兴奋的游戏功能。如果这让你困扰不堪，那么就先略过这部分，调到让你开心的部分做起，比如花点时间琢磨Boss战，从而摆脱界面设计带来的枯燥感。但是，我推荐的这条技巧仅仅是个权宜之计，因为它导致的后果可能很严重！事实上，游戏的开发是受限于日程表、截止期和预算的。如果你不能按时完成预定的工作，一直跑去做自己喜欢的部分来回避脏活、累活，那么整个游戏、整个团队甚至整个公司都有可能因此蒙受巨大的损失。千万别拖拖拉拉，懂的管理自己的时间非常重要。要多一点责任心。</p>\n<footer><strong>Scott Rogers</strong><cite>Level up!The Guide To Great Video Game Design</cite></footer></blockquote>\n<h1 id=\"做游戏就像做辣酱\"><a href=\"#做游戏就像做辣酱\" class=\"headerlink\" title=\"做游戏就像做辣酱\"></a>做游戏就像做辣酱</h1><blockquote><p>和做辣酱相似，首先你得有个菜谱，菜谱其实就是游戏开发里的文档。选对菜谱非常重要，因为你要熬的是辣酱，不是炖汤、炒菜或者别的什么，写好游戏文档也一样。游戏文档不仅需要描述游戏是什么，还要包括游戏的做法，这点与菜谱也属不谋而合。做辣酱时要严格按照菜谱要求来做，但也要随机应变，做些小改动，特别是在有些部分和预想的不一样时。然后，和做辣酱一样，游戏开发中也得不时地尝尝自己的半成品，然后对内容做些调整；游戏中有的重复内容会让人觉得“太腻”了，这时候你就需要让他具有鲜明的独特性。<br>下一步就是准备配料了。就像做辣酱需要准备各种配料一样，游戏开发也需要不同的人员与工具来完成设计，另外，做游戏也需要一些合适的硬件设备，就像做辣酱的时候你需要锅碗瓢盆一样。不过，有时候你手头可能缺一些所需的配料，正如你的团队有时人手或者资源不够，这时候你就必须利用这些有限的资源来些“即兴表演”，临时发挥一下了。其实问题也不大，我听说那些牛仔光用篝火和小罐子就能做出美味的辣酱。</p>\n<footer><strong>Scott Rogers</strong><cite>Level up!The Guide To Great Video Game Design</cite></footer></blockquote>\n","excerpt":"<p>书中摘录</p>","more":"<h1 id=\"先去做喜欢的那些事\"><a href=\"#先去做喜欢的那些事\" class=\"headerlink\" title=\"先去做喜欢的那些事\"></a>先去做喜欢的那些事</h1><blockquote><p>有时候你得使劲设计一个不太让你兴奋的游戏功能。如果这让你困扰不堪，那么就先略过这部分，调到让你开心的部分做起，比如花点时间琢磨Boss战，从而摆脱界面设计带来的枯燥感。但是，我推荐的这条技巧仅仅是个权宜之计，因为它导致的后果可能很严重！事实上，游戏的开发是受限于日程表、截止期和预算的。如果你不能按时完成预定的工作，一直跑去做自己喜欢的部分来回避脏活、累活，那么整个游戏、整个团队甚至整个公司都有可能因此蒙受巨大的损失。千万别拖拖拉拉，懂的管理自己的时间非常重要。要多一点责任心。</p>\n<footer><strong>Scott Rogers</strong><cite>Level up!The Guide To Great Video Game Design</cite></footer></blockquote>\n<h1 id=\"做游戏就像做辣酱\"><a href=\"#做游戏就像做辣酱\" class=\"headerlink\" title=\"做游戏就像做辣酱\"></a>做游戏就像做辣酱</h1><blockquote><p>和做辣酱相似，首先你得有个菜谱，菜谱其实就是游戏开发里的文档。选对菜谱非常重要，因为你要熬的是辣酱，不是炖汤、炒菜或者别的什么，写好游戏文档也一样。游戏文档不仅需要描述游戏是什么，还要包括游戏的做法，这点与菜谱也属不谋而合。做辣酱时要严格按照菜谱要求来做，但也要随机应变，做些小改动，特别是在有些部分和预想的不一样时。然后，和做辣酱一样，游戏开发中也得不时地尝尝自己的半成品，然后对内容做些调整；游戏中有的重复内容会让人觉得“太腻”了，这时候你就需要让他具有鲜明的独特性。<br>下一步就是准备配料了。就像做辣酱需要准备各种配料一样，游戏开发也需要不同的人员与工具来完成设计，另外，做游戏也需要一些合适的硬件设备，就像做辣酱的时候你需要锅碗瓢盆一样。不过，有时候你手头可能缺一些所需的配料，正如你的团队有时人手或者资源不够，这时候你就必须利用这些有限的资源来些“即兴表演”，临时发挥一下了。其实问题也不大，我听说那些牛仔光用篝火和小罐子就能做出美味的辣酱。</p>\n<footer><strong>Scott Rogers</strong><cite>Level up!The Guide To Great Video Game Design</cite></footer></blockquote>"},{"title":"linux上的github免去输入账号密码","date":"2016-11-07T14:32:57.000Z","_content":"\n一直输入用户名密码很烦吧\n\n<!-- more -->\n\n # 进入当前用户目录下\n\n```bash\ncd ~\n```\n\n # 新建文件\n\n```bash\nvim .git-credentials\n```\n在其中写入下列信息\n```\nhttps://{username}:{password}@github.com\n```\n其中的{username}替换为github上用户名,{password}替换为密码\n\n # 保存退出\n \n # 执行命令\n\n```bash\ngit config --global credential.helper store\n```\n执行完后\n\n/home/用户名/.gitconfig 会新增一项\n```\n[credential]\n        helper = store\n```\n\n然后git push 跟git pull就无需输入账号密码了\n\n原网址:http://blog.sina.com.cn/s/blog_96e3da700102weuv.html\n","source":"_posts/githubNoPassWord.md","raw":"---\ntitle: linux上的github免去输入账号密码\ndate: 2016-11-07 22:32:57\ntags:\n - linux\n - git\ncategories:\n - 说明书\n---\n\n一直输入用户名密码很烦吧\n\n<!-- more -->\n\n # 进入当前用户目录下\n\n```bash\ncd ~\n```\n\n # 新建文件\n\n```bash\nvim .git-credentials\n```\n在其中写入下列信息\n```\nhttps://{username}:{password}@github.com\n```\n其中的{username}替换为github上用户名,{password}替换为密码\n\n # 保存退出\n \n # 执行命令\n\n```bash\ngit config --global credential.helper store\n```\n执行完后\n\n/home/用户名/.gitconfig 会新增一项\n```\n[credential]\n        helper = store\n```\n\n然后git push 跟git pull就无需输入账号密码了\n\n原网址:http://blog.sina.com.cn/s/blog_96e3da700102weuv.html\n","slug":"githubNoPassWord","published":1,"updated":"2016-11-07T15:00:10.045Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civ9mvscw0009az99p4gepy2q","content":"<p>一直输入用户名密码很烦吧</p>\n<a id=\"more\"></a>\n<h1 id=\"进入当前用户目录下\"><a href=\"#进入当前用户目录下\" class=\"headerlink\" title=\"进入当前用户目录下\"></a>进入当前用户目录下</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> ~</div></pre></td></tr></table></figure>\n<h1 id=\"新建文件\"><a href=\"#新建文件\" class=\"headerlink\" title=\"新建文件\"></a>新建文件</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim .git-credentials</div></pre></td></tr></table></figure>\n<p>在其中写入下列信息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">https://&#123;username&#125;:&#123;password&#125;@github.com</div></pre></td></tr></table></figure></p>\n<p>其中的{username}替换为github上用户名,{password}替换为密码</p>\n<h1 id=\"保存退出\"><a href=\"#保存退出\" class=\"headerlink\" title=\"保存退出\"></a>保存退出</h1><h1 id=\"执行命令\"><a href=\"#执行命令\" class=\"headerlink\" title=\"执行命令\"></a>执行命令</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --global credential.helper store</div></pre></td></tr></table></figure>\n<p>执行完后</p>\n<p>/home/用户名/.gitconfig 会新增一项<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[credential]</div><div class=\"line\">        helper = store</div></pre></td></tr></table></figure></p>\n<p>然后git push 跟git pull就无需输入账号密码了</p>\n<p>原网址:<a href=\"http://blog.sina.com.cn/s/blog_96e3da700102weuv.html\" target=\"_blank\" rel=\"external\">http://blog.sina.com.cn/s/blog_96e3da700102weuv.html</a></p>\n","excerpt":"<p>一直输入用户名密码很烦吧</p>","more":"<h1 id=\"进入当前用户目录下\"><a href=\"#进入当前用户目录下\" class=\"headerlink\" title=\"进入当前用户目录下\"></a>进入当前用户目录下</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> ~</div></pre></td></tr></table></figure>\n<h1 id=\"新建文件\"><a href=\"#新建文件\" class=\"headerlink\" title=\"新建文件\"></a>新建文件</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim .git-credentials</div></pre></td></tr></table></figure>\n<p>在其中写入下列信息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">https://&#123;username&#125;:&#123;password&#125;@github.com</div></pre></td></tr></table></figure></p>\n<p>其中的{username}替换为github上用户名,{password}替换为密码</p>\n<h1 id=\"保存退出\"><a href=\"#保存退出\" class=\"headerlink\" title=\"保存退出\"></a>保存退出</h1><h1 id=\"执行命令\"><a href=\"#执行命令\" class=\"headerlink\" title=\"执行命令\"></a>执行命令</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --global credential.helper store</div></pre></td></tr></table></figure>\n<p>执行完后</p>\n<p>/home/用户名/.gitconfig 会新增一项<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[credential]</div><div class=\"line\">        helper = store</div></pre></td></tr></table></figure></p>\n<p>然后git push 跟git pull就无需输入账号密码了</p>\n<p>原网址:<a href=\"http://blog.sina.com.cn/s/blog_96e3da700102weuv.html\">http://blog.sina.com.cn/s/blog_96e3da700102weuv.html</a></p>"},{"title":"Hello World","_content":"\n以下是说明书部分\n\n<!-- more -->\n\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ntags: Hexo\ncategories: 说明书\n---\n\n以下是说明书部分\n\n<!-- more -->\n\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2016-11-07T02:21:57.610Z","updated":"2016-11-07T02:21:57.554Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civ9mvscy000aaz99gz90uzhq","content":"<p>以下是说明书部分</p>\n<a id=\"more\"></a>\n<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"<p>以下是说明书部分</p>","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>"},{"title":"Integer中的parseInt","date":"2016-10-11T12:42:24.000Z","_content":"Java自带了Integer工具类。\n\n<!-- more -->\n\nInteger类中，有一个方法parseInt，用于字符串和数字之间的转换\n\n例子\n\n```java\nString words = \"12\";\nint k = Integer.parseInt(words);\n```\n转换能成功完成\n但是如果这样\n```java\nString words = \" 12 \";\nint k = Integer.parseInt(words);\n```\n失败，因为数字两边有空格\n可以用Java String类的trim方法消掉两边的字符串\n```java\nString words = \" 12 \";\nint k = Integer.parseInt(words.trim());\n```\n转换能成功完成\n即便现在不是String类型，比如Map中存储字符串，作为参数传递时失去了类型，String强转之后仍然能够使用同样的方法将其变成整数\n```java\nString ws =(String) words;\nint k = Integer.parseInt(ws.trim());\n```\n","source":"_posts/parseInt.md","raw":"---\ntitle: Integer中的parseInt\ndate: 2016-10-11 20:42:24\ntags: \n - Java\n - 类型转换\n - 整数\n - 字符串\n\ncategories: \n - 笔记\n - 心得\n---\nJava自带了Integer工具类。\n\n<!-- more -->\n\nInteger类中，有一个方法parseInt，用于字符串和数字之间的转换\n\n例子\n\n```java\nString words = \"12\";\nint k = Integer.parseInt(words);\n```\n转换能成功完成\n但是如果这样\n```java\nString words = \" 12 \";\nint k = Integer.parseInt(words);\n```\n失败，因为数字两边有空格\n可以用Java String类的trim方法消掉两边的字符串\n```java\nString words = \" 12 \";\nint k = Integer.parseInt(words.trim());\n```\n转换能成功完成\n即便现在不是String类型，比如Map中存储字符串，作为参数传递时失去了类型，String强转之后仍然能够使用同样的方法将其变成整数\n```java\nString ws =(String) words;\nint k = Integer.parseInt(ws.trim());\n```\n","slug":"parseInt","published":1,"updated":"2016-11-07T02:14:53.670Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civ9mvsd2000eaz99ogz83azy","content":"<p>Java自带了Integer工具类。</p>\n<a id=\"more\"></a>\n<p>Integer类中，有一个方法parseInt，用于字符串和数字之间的转换</p>\n<p>例子</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">String words = <span class=\"string\">\"12\"</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> k = Integer.parseInt(words);</div></pre></td></tr></table></figure>\n<p>转换能成功完成<br>但是如果这样<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">String words = <span class=\"string\">\" 12 \"</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> k = Integer.parseInt(words);</div></pre></td></tr></table></figure></p>\n<p>失败，因为数字两边有空格<br>可以用Java String类的trim方法消掉两边的字符串<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">String words = <span class=\"string\">\" 12 \"</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> k = Integer.parseInt(words.trim());</div></pre></td></tr></table></figure></p>\n<p>转换能成功完成<br>即便现在不是String类型，比如Map中存储字符串，作为参数传递时失去了类型，String强转之后仍然能够使用同样的方法将其变成整数<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">String ws =(String) words;</div><div class=\"line\"><span class=\"keyword\">int</span> k = Integer.parseInt(ws.trim());</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>Java自带了Integer工具类。</p>","more":"<p>Integer类中，有一个方法parseInt，用于字符串和数字之间的转换</p>\n<p>例子</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">String words = <span class=\"string\">\"12\"</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> k = Integer.parseInt(words);</div></pre></td></tr></table></figure>\n<p>转换能成功完成<br>但是如果这样<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">String words = <span class=\"string\">\" 12 \"</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> k = Integer.parseInt(words);</div></pre></td></tr></table></figure></p>\n<p>失败，因为数字两边有空格<br>可以用Java String类的trim方法消掉两边的字符串<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">String words = <span class=\"string\">\" 12 \"</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> k = Integer.parseInt(words.trim());</div></pre></td></tr></table></figure></p>\n<p>转换能成功完成<br>即便现在不是String类型，比如Map中存储字符串，作为参数传递时失去了类型，String强转之后仍然能够使用同样的方法将其变成整数<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">String ws =(String) words;</div><div class=\"line\"><span class=\"keyword\">int</span> k = Integer.parseInt(ws.trim());</div></pre></td></tr></table></figure></p>"},{"title":"可靠数据传输","date":"2016-11-07T08:38:23.000Z","_content":"\n # ARQ（自动重传请求协议）Auto Repeat reQuest\n\n<!-- more --> \n\n 需要另外三种协议来处理存在的比特差错\n\n \n\n ## 差错检测\n\n \n\n 需要一种机制使接收方检测何时出现了比特差错\n\n \n\n ## 接收方反馈\n\n \n\n发送方要了解接收方情况（即分组是否被正确接收）的唯一途径就是让接收方提供明确的反馈信息给发送方。口述信息中回答的肯定确认(ACK:positive acknowledge )和否定确认(NAK:negative acknowledge)就是这种反馈的例子。类似地，我们的rdt2.0的协议将从接受方向发送方回送ACK与NAK分组。理论上，这些分组只需要一个比特长度，如用0表示NCK，用1表示ACK。\n\n \n\n ## 重传\n\n \n\n 接收方收到有差错的分组时，发送方将重传该分组\n\n \n\n rdt2.0的发送方有两个状态。\n\n \n\n  - 发送方协议等待上层的数据，当rdt_send(data)事件发生时，发送方将产生一个包含待发送数据的分组(sndpkt)，计算出分组检验(3.3.2)，然后经由udt_send(pkt)操作发送该分组\n\n  - 发送方协议等待接收方的ACK或NAK分组。\n\n  如果收到一个ACK分组，则发送方知道最近传输的分组已被正确接收，因此协议返回到等待上层数据的状态；如果收到一个NAK分组，该协议重传最后一个分组并等待接收方返回的响应重传分组的ACK或NAK。当发送方在wait-for-ACK-or-NAK状态时，它不能从上层获得更多的数据；这就是说，rdt_send()事件不可能出现；仅当接收到ACK并离开该状态时接收方才能获取新数据。因此，发送方不会发送一块新数据，直到发送方确信接收方已正确接收当前分组为止。由于这种行为，类似于rdt2.0的协议被称为停等协议。\n\n  rdt2.0的接收方有一个状态。\n\n  - 当分组到达时，接收方要么回答一个ACK，要么回答一个NAK，取决于收到的分组是否受损\n \n # 缺陷\n \n 没有考虑到ACK或者NAK本身受损的可能性,必须检测差错,但更重要的是如果ACK或者NAK分组受损,发送方不知道接收方是否正确接收了上一块发送的数据\n\n 解决办法:\n\n{% blockquote %}\n在数据分组中添加一个新字段,让发送方对其数据分组编号,即将发送的数据分组的序号(sequence number)放在该字段.于是,接收方只需检查序号即可确定收到的分组是否是一次重传.\n前提:信道不丢失分组\n{% endblockquote %}\n\n显然,对于停等协议这种简单情况,1比特序号就足够了,因为它可让接收方知道发送方在重传前一个发送分组(接收到的分组序号与最近收到的分组序号相同),还是一个新分组(序号变化了,用模二运算\"前向\"移动)\n","source":"_posts/hitnetworks.md","raw":"---\ntitle: 可靠数据传输\ndate: 2016-11-07 16:38:23\ntags:\n - 计算机网络\ncategories:\n - 笔记\n - 追课\n---\n\n # ARQ（自动重传请求协议）Auto Repeat reQuest\n\n<!-- more --> \n\n 需要另外三种协议来处理存在的比特差错\n\n \n\n ## 差错检测\n\n \n\n 需要一种机制使接收方检测何时出现了比特差错\n\n \n\n ## 接收方反馈\n\n \n\n发送方要了解接收方情况（即分组是否被正确接收）的唯一途径就是让接收方提供明确的反馈信息给发送方。口述信息中回答的肯定确认(ACK:positive acknowledge )和否定确认(NAK:negative acknowledge)就是这种反馈的例子。类似地，我们的rdt2.0的协议将从接受方向发送方回送ACK与NAK分组。理论上，这些分组只需要一个比特长度，如用0表示NCK，用1表示ACK。\n\n \n\n ## 重传\n\n \n\n 接收方收到有差错的分组时，发送方将重传该分组\n\n \n\n rdt2.0的发送方有两个状态。\n\n \n\n  - 发送方协议等待上层的数据，当rdt_send(data)事件发生时，发送方将产生一个包含待发送数据的分组(sndpkt)，计算出分组检验(3.3.2)，然后经由udt_send(pkt)操作发送该分组\n\n  - 发送方协议等待接收方的ACK或NAK分组。\n\n  如果收到一个ACK分组，则发送方知道最近传输的分组已被正确接收，因此协议返回到等待上层数据的状态；如果收到一个NAK分组，该协议重传最后一个分组并等待接收方返回的响应重传分组的ACK或NAK。当发送方在wait-for-ACK-or-NAK状态时，它不能从上层获得更多的数据；这就是说，rdt_send()事件不可能出现；仅当接收到ACK并离开该状态时接收方才能获取新数据。因此，发送方不会发送一块新数据，直到发送方确信接收方已正确接收当前分组为止。由于这种行为，类似于rdt2.0的协议被称为停等协议。\n\n  rdt2.0的接收方有一个状态。\n\n  - 当分组到达时，接收方要么回答一个ACK，要么回答一个NAK，取决于收到的分组是否受损\n \n # 缺陷\n \n 没有考虑到ACK或者NAK本身受损的可能性,必须检测差错,但更重要的是如果ACK或者NAK分组受损,发送方不知道接收方是否正确接收了上一块发送的数据\n\n 解决办法:\n\n{% blockquote %}\n在数据分组中添加一个新字段,让发送方对其数据分组编号,即将发送的数据分组的序号(sequence number)放在该字段.于是,接收方只需检查序号即可确定收到的分组是否是一次重传.\n前提:信道不丢失分组\n{% endblockquote %}\n\n显然,对于停等协议这种简单情况,1比特序号就足够了,因为它可让接收方知道发送方在重传前一个发送分组(接收到的分组序号与最近收到的分组序号相同),还是一个新分组(序号变化了,用模二运算\"前向\"移动)\n","slug":"hitnetworks","published":1,"updated":"2016-11-07T14:52:11.585Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civ9mvsd5000gaz99pyyl6ad9","content":"<h1 id=\"ARQ（自动重传请求协议）Auto-Repeat-reQuest\"><a href=\"#ARQ（自动重传请求协议）Auto-Repeat-reQuest\" class=\"headerlink\" title=\"ARQ（自动重传请求协议）Auto Repeat reQuest\"></a>ARQ（自动重传请求协议）Auto Repeat reQuest</h1><a id=\"more\"></a> \n<p> 需要另外三种协议来处理存在的比特差错</p>\n<h2 id=\"差错检测\"><a href=\"#差错检测\" class=\"headerlink\" title=\"差错检测\"></a>差错检测</h2><p> 需要一种机制使接收方检测何时出现了比特差错</p>\n<h2 id=\"接收方反馈\"><a href=\"#接收方反馈\" class=\"headerlink\" title=\"接收方反馈\"></a>接收方反馈</h2><p>发送方要了解接收方情况（即分组是否被正确接收）的唯一途径就是让接收方提供明确的反馈信息给发送方。口述信息中回答的肯定确认(ACK:positive acknowledge )和否定确认(NAK:negative acknowledge)就是这种反馈的例子。类似地，我们的rdt2.0的协议将从接受方向发送方回送ACK与NAK分组。理论上，这些分组只需要一个比特长度，如用0表示NCK，用1表示ACK。</p>\n<h2 id=\"重传\"><a href=\"#重传\" class=\"headerlink\" title=\"重传\"></a>重传</h2><p> 接收方收到有差错的分组时，发送方将重传该分组</p>\n<p> rdt2.0的发送方有两个状态。</p>\n<ul>\n<li><p>发送方协议等待上层的数据，当rdt_send(data)事件发生时，发送方将产生一个包含待发送数据的分组(sndpkt)，计算出分组检验(3.3.2)，然后经由udt_send(pkt)操作发送该分组</p>\n</li>\n<li><p>发送方协议等待接收方的ACK或NAK分组。</p>\n<p>如果收到一个ACK分组，则发送方知道最近传输的分组已被正确接收，因此协议返回到等待上层数据的状态；如果收到一个NAK分组，该协议重传最后一个分组并等待接收方返回的响应重传分组的ACK或NAK。当发送方在wait-for-ACK-or-NAK状态时，它不能从上层获得更多的数据；这就是说，rdt_send()事件不可能出现；仅当接收到ACK并离开该状态时接收方才能获取新数据。因此，发送方不会发送一块新数据，直到发送方确信接收方已正确接收当前分组为止。由于这种行为，类似于rdt2.0的协议被称为停等协议。</p>\n<p>rdt2.0的接收方有一个状态。</p>\n</li>\n<li><p>当分组到达时，接收方要么回答一个ACK，要么回答一个NAK，取决于收到的分组是否受损</p>\n<h1 id=\"缺陷\"><a href=\"#缺陷\" class=\"headerlink\" title=\"缺陷\"></a>缺陷</h1><p>没有考虑到ACK或者NAK本身受损的可能性,必须检测差错,但更重要的是如果ACK或者NAK分组受损,发送方不知道接收方是否正确接收了上一块发送的数据</p>\n<p>解决办法:</p>\n</li>\n</ul>\n<blockquote><p>在数据分组中添加一个新字段,让发送方对其数据分组编号,即将发送的数据分组的序号(sequence number)放在该字段.于是,接收方只需检查序号即可确定收到的分组是否是一次重传.<br>前提:信道不丢失分组</p>\n</blockquote>\n<p>显然,对于停等协议这种简单情况,1比特序号就足够了,因为它可让接收方知道发送方在重传前一个发送分组(接收到的分组序号与最近收到的分组序号相同),还是一个新分组(序号变化了,用模二运算”前向”移动)</p>\n","excerpt":"<h1 id=\"ARQ（自动重传请求协议）Auto-Repeat-reQuest\"><a href=\"#ARQ（自动重传请求协议）Auto-Repeat-reQuest\" class=\"headerlink\" title=\"ARQ（自动重传请求协议）Auto Repeat reQuest\"></a>ARQ（自动重传请求协议）Auto Repeat reQuest</h1>","more":"<p> 需要另外三种协议来处理存在的比特差错</p>\n<h2 id=\"差错检测\"><a href=\"#差错检测\" class=\"headerlink\" title=\"差错检测\"></a>差错检测</h2><p> 需要一种机制使接收方检测何时出现了比特差错</p>\n<h2 id=\"接收方反馈\"><a href=\"#接收方反馈\" class=\"headerlink\" title=\"接收方反馈\"></a>接收方反馈</h2><p>发送方要了解接收方情况（即分组是否被正确接收）的唯一途径就是让接收方提供明确的反馈信息给发送方。口述信息中回答的肯定确认(ACK:positive acknowledge )和否定确认(NAK:negative acknowledge)就是这种反馈的例子。类似地，我们的rdt2.0的协议将从接受方向发送方回送ACK与NAK分组。理论上，这些分组只需要一个比特长度，如用0表示NCK，用1表示ACK。</p>\n<h2 id=\"重传\"><a href=\"#重传\" class=\"headerlink\" title=\"重传\"></a>重传</h2><p> 接收方收到有差错的分组时，发送方将重传该分组</p>\n<p> rdt2.0的发送方有两个状态。</p>\n<ul>\n<li><p>发送方协议等待上层的数据，当rdt_send(data)事件发生时，发送方将产生一个包含待发送数据的分组(sndpkt)，计算出分组检验(3.3.2)，然后经由udt_send(pkt)操作发送该分组</p>\n</li>\n<li><p>发送方协议等待接收方的ACK或NAK分组。</p>\n<p>如果收到一个ACK分组，则发送方知道最近传输的分组已被正确接收，因此协议返回到等待上层数据的状态；如果收到一个NAK分组，该协议重传最后一个分组并等待接收方返回的响应重传分组的ACK或NAK。当发送方在wait-for-ACK-or-NAK状态时，它不能从上层获得更多的数据；这就是说，rdt_send()事件不可能出现；仅当接收到ACK并离开该状态时接收方才能获取新数据。因此，发送方不会发送一块新数据，直到发送方确信接收方已正确接收当前分组为止。由于这种行为，类似于rdt2.0的协议被称为停等协议。</p>\n<p>rdt2.0的接收方有一个状态。</p>\n</li>\n<li><p>当分组到达时，接收方要么回答一个ACK，要么回答一个NAK，取决于收到的分组是否受损</p>\n<h1 id=\"缺陷\"><a href=\"#缺陷\" class=\"headerlink\" title=\"缺陷\"></a>缺陷</h1><p>没有考虑到ACK或者NAK本身受损的可能性,必须检测差错,但更重要的是如果ACK或者NAK分组受损,发送方不知道接收方是否正确接收了上一块发送的数据</p>\n<p>解决办法:</p>\n</li>\n</ul>\n<blockquote><p>在数据分组中添加一个新字段,让发送方对其数据分组编号,即将发送的数据分组的序号(sequence number)放在该字段.于是,接收方只需检查序号即可确定收到的分组是否是一次重传.<br>前提:信道不丢失分组</p>\n</blockquote>\n<p>显然,对于停等协议这种简单情况,1比特序号就足够了,因为它可让接收方知道发送方在重传前一个发送分组(接收到的分组序号与最近收到的分组序号相同),还是一个新分组(序号变化了,用模二运算”前向”移动)</p>"},{"title":"修改一对一的数据表成一对多的数据表","date":"2016-10-09T02:46:48.000Z","_content":"需求是领导发任务给协理员，让协理员创办活动，因此在数据库中，有任务与活动两个表\n\n<!-- more -->\n\n# 原表\n\n## task\n\n| 字段名\t|概念\t\t |\n| :------------ |:---------------|\n| TAS_ID\t| 任务ID         |  \n| TAS_CRE_ID\t| 任务创建人ID   |  \n| TAS_CRE_NAME\t| 任务创建人名   |  \n| TAS_CRE_DATE\t| 任务创建日期   |  \n| TAS_DUE_DATE\t| 任务截止日期   |  \n| TAS_DUE_ID\t| 任务下发人员ID |  \n| TAS_DUE_NAME\t| 任务下发人员名 |  \n| TAS_TITLE\t| 任务标题       |  \n| TAS_DESC\t| 任务概述       |  \n| TAS_DOC_ID\t| 任务文件ID     |  \n| TAS_DOC1_NAME\t| 任务文件一名   |  \n| TAS_DOC2_NAME\t| 任务文件二名   |  \n| TAS_DOC3_NAME\t| 任务文件三名   |  \n| TAS_FDOC1_NAME| 任务提交文件一 |  \n| TAS_FDOC2_NAME| 任务提交文件二 |  \n| TAS_FDOC3_NAME| 任务提交文件三 |  \n| TAS_STATUS\t| 任务状态       |  \n\n## activity\n\n| 字段名\t\t|概念\t\t |\n| :-------------------- |:---------------|\n| AC_ID\t\t\t| 活动ID         |  \n| AC_TYPE\t\t| 活动类型       |  \n| AC_ACADEMY\t\t| 活动所在学院   |  \n| AC_TAS_ID\t\t| 活动对应任务ID |  \n| AC_CRE_ID\t\t| 活动对应协理员 |  \n| AC_CRE_NAME\t\t| 协理员名       |  \n| AC_CRE_DATE\t\t| 活动创建时间   |  \n| AC_DUE_DATE\t\t| 活动截止时间   |  \n| AC_SIG_DUE_DATE\t| 报名截止时间   |  \n| AC_TITLE\t\t| 活动名         |  \n| AC_DESC\t\t| 活动概述       |  \n| AC_DOC_ID\t\t| 活动文件ID     |  \n| AC_DOC1_NAME\t\t| 活动文件一名   |  \n| AC_DOC2_NAME\t\t| 活动文件二名   |  \n| AC_DOC3_NAME\t\t| 活动文件三名   |  \n| AC_SIG_NUM\t\t| 活动报名人数   |  \n| AC_STATUS\t\t| 活动状态       | \n\n很多字段都冗余了，先简化一下\n\n# 第一次修改\n\n## task\n\n| 字段名\t|概念\t\t |\n| :------------ |:---------------|\n| TAS_ID\t| 任务ID         |  \n| TAS_CRE_ID\t| 任务创建人ID   |  \n| TAS_CRE_DATE\t| 任务创建日期   |  \n| TAS_DUE_DATE\t| 任务截止日期   |  \n| TAS_DUE_ID\t| 任务下发人员ID |  \n| TAS_TITLE\t| 任务标题       |  \n| TAS_DESC\t| 任务概述       |  \n| TAS_DOC_ID\t| 任务文件ID     |  \n| TAS_DOC1_NAME\t| 任务文件一名   |  \n| TAS_DOC2_NAME\t| 任务文件二名   |  \n| TAS_DOC3_NAME\t| 任务文件三名   |  \n| TAS_FDOC1_NAME| 任务提交文件一 |  \n| TAS_FDOC2_NAME| 任务提交文件二 |  \n| TAS_FDOC3_NAME| 任务提交文件三 |  \n| TAS_STATUS\t| 任务状态       |  \n\n## activity\n\n| 字段名\t\t|概念\t\t |\n| :-------------------- |:---------------|\n| AC_ID\t\t\t| 活动ID         |  \n| AC_TYPE\t\t| 活动类型       |  \n| AC_ACADEMY\t\t| 活动所在学院   |  \n| AC_TAS_ID\t\t| 活动对应任务ID |  \n| AC_CRE_ID\t\t| 活动对应协理员 |  \n| AC_CRE_DATE\t\t| 活动创建时间   |  \n| AC_DUE_DATE\t\t| 活动截止时间   |  \n| AC_SIG_DUE_DATE\t| 报名截止时间   |  \n| AC_TITLE\t\t| 活动名         |  \n| AC_DESC\t\t| 活动概述       |  \n| AC_DOC_ID\t\t| 活动文件ID     |  \n| AC_DOC1_NAME\t\t| 活动文件一名   |  \n| AC_DOC2_NAME\t\t| 活动文件二名   |  \n| AC_DOC3_NAME\t\t| 活动文件三名   |  \n| AC_SIG_NUM\t\t| 活动报名人数   |  \n| AC_STATUS\t\t| 活动状态       |\n\n## 删除的字段\n\n* 任务创建人名\n* 任务下发人员名\n* 协理员名 \n\n好，现在没有什么多余的字段了，来试试一对多吧\n\n# 一对多的思考\n\n## 需求\n\n一级用户创建活动，二级只负责转发以及处理报名，报名完之后上传文件，处理活动的二级用户人数不限（区分学位、年级、学院），所以来总结一下吧\n\n* 活动在任务之前\n* 任务对应人与活动\n* 任务对应学位年级学院三个属性\n* 每个二级完成活动规定的任务之后都要上传文件（最多三个）\n\n从需求可以大致推知表格的样貌\n\n## 建表思路\n\n由上，具体到表\n\n* 一个活动对应多个任务\n* 一个任务对应一个协理员\n* 一个任务由协理员ID、活动ID两个字段唯一识别\n* 一个任务由学位年级学院活动ID四个字段唯一识别\n* 一个活动由活动ID唯一识别\n* 一个活动对应一个一级成员\n\n根据这些点，就可以着手第二次修改了  \n\n# 第二次修改\n\n## task\n\n| 字段名\t|概念\t\t |\n| :------------ |:---------------|\n| TAS_ID\t| 任务ID         |  \n| TAS_CRE_ID\t| 任务创建人ID   |  \n| TAS_CRE_DATE\t| 任务创建日期   |  \n| TAS_DUE_ID\t| 任务下发人员ID |  \n| TAS_DUE_DATE\t| 任务截止日期   |\n| TAS_ACADEMY\t| 任务对应学院\t |\n| TAS_DEGREE\t| 任务对应学位\t |\n| TAS_GRADE\t| 任务对应年段\t |\n| TAS_AC_ID\t| 任务对应活动ID |\n| TAS_TITLE\t| 任务标题       |  \n| TAS_DESC\t| 任务概述       |  \n| TAS_DOC_ID\t| 任务文件ID     |  \n| TAS_DOC1_NAME\t| 任务文件一名   |  \n| TAS_DOC2_NAME\t| 任务文件二名   |  \n| TAS_DOC3_NAME\t| 任务文件三名   |  \n| TAS_FDOC1_NAME| 任务提交文件一 |  \n| TAS_FDOC2_NAME| 任务提交文件二 |  \n| TAS_FDOC3_NAME| 任务提交文件三 |  \n| TAS_STATUS\t| 任务状态       |  \n\n## activity\n\n| 字段名\t\t|概念\t\t |\n| :-------------------- |:---------------|\n| AC_ID\t\t\t| 活动ID         |  \n| AC_TYPE\t\t| 活动类型       |  \n| AC_CRE_ID\t\t| 活动对应创建人 |\n| AC_CRE_DATE\t\t| 活动创建时间   |  \n| AC_DUE_DATE\t\t| 活动截止时间   |  \n| AC_SIG_DUE_DATE\t| 报名截止时间   |  \n| AC_TITLE\t\t| 活动名         |  \n| AC_DESC\t\t| 活动概述       |  \n| AC_DOC_ID\t\t| 活动文件ID     |  \n| AC_DOC1_NAME\t\t| 活动文件一名   |  \n| AC_DOC2_NAME\t\t| 活动文件二名   |  \n| AC_DOC3_NAME\t\t| 活动文件三名   |  \n| AC_SIG_NUM\t\t| 活动报名人数   |  \n| AC_STATUS\t\t| 活动状态       | \n\n## 删除的字段\n\n* 活动所在学院\n* 活动对应任务ID\n\n## 增加的字段\n\n* 任务对应学院\n* 任务对应学位\n* 任务对应年段\n* 任务对应活动ID\n\n## 修改的字段\n\n* 活动对应创建人（原是协理员现在是一级管理员）\n\n增删之后发现两个表有重复的东西，出现了冗余问题，再改一下吧\n\n# 第三次修改\n\n## task\n\n| 字段名\t|概念\t\t |\n| :------------ |:---------------|\n| TAS_ID\t| 任务ID         |  \n| TAS_CRE_DATE\t| 任务创建日期   |  \n| TAS_DUE_ID\t| 任务下发人员ID |  \n| TAS_DUE_DATE\t| 任务截止日期   |\n| TAS_ACADEMY\t| 任务对应学院\t |\n| TAS_DEGREE\t| 任务对应学位\t |\n| TAS_GRADE\t| 任务对应年段\t |\n| TAS_AC_ID\t| 任务对应活动ID |\n| TAS_DOC_ID\t| 任务文件ID     |  \n| TAS_DOC1_NAME\t| 任务文件一名   |  \n| TAS_DOC2_NAME\t| 任务文件二名   |  \n| TAS_DOC3_NAME\t| 任务文件三名   |  \n| TAS_FDOC1_NAME| 任务提交文件一 |  \n| TAS_FDOC2_NAME| 任务提交文件二 |  \n| TAS_FDOC3_NAME| 任务提交文件三 |  \n| TAS_STATUS\t| 任务状态       |  \n\n## activity\n\n| 字段名\t\t|概念\t\t |\n| :-------------------- |:---------------|\n| AC_ID\t\t\t| 活动ID         |  \n| AC_TYPE\t\t| 活动类型       |  \n| AC_CRE_ID\t\t| 活动对应创建人 |\n| AC_CRE_DATE\t\t| 活动创建时间   |  \n| AC_DUE_DATE\t\t| 活动截止时间   |  \n| AC_SIG_DUE_DATE\t| 报名截止时间   |  \n| AC_TITLE\t\t| 活动名         |  \n| AC_DESC\t\t| 活动概述       |  \n| AC_DOC_ID\t\t| 活动文件ID     |  \n| AC_DOC1_NAME\t\t| 活动文件一名   |  \n| AC_DOC2_NAME\t\t| 活动文件二名   |  \n| AC_DOC3_NAME\t\t| 活动文件三名   |  \n| AC_SIG_NUM\t\t| 活动报名人数   |  \n| AC_STATUS\t\t| 活动状态       | \n\n## 删除的字段\n\n* 任务标题\n* 任务概述\n* 任务创建人ID\n\n这样，修改完后的表格就完成了\n\n# 汇总修改\n\n## 删除字段\n\n* 任务创建人名\n* 任务下发人员名\n* 协理员名\n* 活动所在学院\n* 活动对应任务ID\n* 任务标题\n* 任务概述\n* 任务创建人ID\n\n## 增加字段\n\n* 任务对应学院\n* 任务对应学位\n* 任务对应年段\n* 任务对应活动ID\n\n## 修改的字段\n\n* 活动对应创建人（原是协理员现在是一级管理员）\n","source":"_posts/修改一对一的数据表成一对多的数据表.md","raw":"---\ntitle: 修改一对一的数据表成一对多的数据表\ndate: 2016-10-09 10:46:48\ntags: 数据库\ncategories: \n - 笔记\n - 过程记录\n---\n需求是领导发任务给协理员，让协理员创办活动，因此在数据库中，有任务与活动两个表\n\n<!-- more -->\n\n# 原表\n\n## task\n\n| 字段名\t|概念\t\t |\n| :------------ |:---------------|\n| TAS_ID\t| 任务ID         |  \n| TAS_CRE_ID\t| 任务创建人ID   |  \n| TAS_CRE_NAME\t| 任务创建人名   |  \n| TAS_CRE_DATE\t| 任务创建日期   |  \n| TAS_DUE_DATE\t| 任务截止日期   |  \n| TAS_DUE_ID\t| 任务下发人员ID |  \n| TAS_DUE_NAME\t| 任务下发人员名 |  \n| TAS_TITLE\t| 任务标题       |  \n| TAS_DESC\t| 任务概述       |  \n| TAS_DOC_ID\t| 任务文件ID     |  \n| TAS_DOC1_NAME\t| 任务文件一名   |  \n| TAS_DOC2_NAME\t| 任务文件二名   |  \n| TAS_DOC3_NAME\t| 任务文件三名   |  \n| TAS_FDOC1_NAME| 任务提交文件一 |  \n| TAS_FDOC2_NAME| 任务提交文件二 |  \n| TAS_FDOC3_NAME| 任务提交文件三 |  \n| TAS_STATUS\t| 任务状态       |  \n\n## activity\n\n| 字段名\t\t|概念\t\t |\n| :-------------------- |:---------------|\n| AC_ID\t\t\t| 活动ID         |  \n| AC_TYPE\t\t| 活动类型       |  \n| AC_ACADEMY\t\t| 活动所在学院   |  \n| AC_TAS_ID\t\t| 活动对应任务ID |  \n| AC_CRE_ID\t\t| 活动对应协理员 |  \n| AC_CRE_NAME\t\t| 协理员名       |  \n| AC_CRE_DATE\t\t| 活动创建时间   |  \n| AC_DUE_DATE\t\t| 活动截止时间   |  \n| AC_SIG_DUE_DATE\t| 报名截止时间   |  \n| AC_TITLE\t\t| 活动名         |  \n| AC_DESC\t\t| 活动概述       |  \n| AC_DOC_ID\t\t| 活动文件ID     |  \n| AC_DOC1_NAME\t\t| 活动文件一名   |  \n| AC_DOC2_NAME\t\t| 活动文件二名   |  \n| AC_DOC3_NAME\t\t| 活动文件三名   |  \n| AC_SIG_NUM\t\t| 活动报名人数   |  \n| AC_STATUS\t\t| 活动状态       | \n\n很多字段都冗余了，先简化一下\n\n# 第一次修改\n\n## task\n\n| 字段名\t|概念\t\t |\n| :------------ |:---------------|\n| TAS_ID\t| 任务ID         |  \n| TAS_CRE_ID\t| 任务创建人ID   |  \n| TAS_CRE_DATE\t| 任务创建日期   |  \n| TAS_DUE_DATE\t| 任务截止日期   |  \n| TAS_DUE_ID\t| 任务下发人员ID |  \n| TAS_TITLE\t| 任务标题       |  \n| TAS_DESC\t| 任务概述       |  \n| TAS_DOC_ID\t| 任务文件ID     |  \n| TAS_DOC1_NAME\t| 任务文件一名   |  \n| TAS_DOC2_NAME\t| 任务文件二名   |  \n| TAS_DOC3_NAME\t| 任务文件三名   |  \n| TAS_FDOC1_NAME| 任务提交文件一 |  \n| TAS_FDOC2_NAME| 任务提交文件二 |  \n| TAS_FDOC3_NAME| 任务提交文件三 |  \n| TAS_STATUS\t| 任务状态       |  \n\n## activity\n\n| 字段名\t\t|概念\t\t |\n| :-------------------- |:---------------|\n| AC_ID\t\t\t| 活动ID         |  \n| AC_TYPE\t\t| 活动类型       |  \n| AC_ACADEMY\t\t| 活动所在学院   |  \n| AC_TAS_ID\t\t| 活动对应任务ID |  \n| AC_CRE_ID\t\t| 活动对应协理员 |  \n| AC_CRE_DATE\t\t| 活动创建时间   |  \n| AC_DUE_DATE\t\t| 活动截止时间   |  \n| AC_SIG_DUE_DATE\t| 报名截止时间   |  \n| AC_TITLE\t\t| 活动名         |  \n| AC_DESC\t\t| 活动概述       |  \n| AC_DOC_ID\t\t| 活动文件ID     |  \n| AC_DOC1_NAME\t\t| 活动文件一名   |  \n| AC_DOC2_NAME\t\t| 活动文件二名   |  \n| AC_DOC3_NAME\t\t| 活动文件三名   |  \n| AC_SIG_NUM\t\t| 活动报名人数   |  \n| AC_STATUS\t\t| 活动状态       |\n\n## 删除的字段\n\n* 任务创建人名\n* 任务下发人员名\n* 协理员名 \n\n好，现在没有什么多余的字段了，来试试一对多吧\n\n# 一对多的思考\n\n## 需求\n\n一级用户创建活动，二级只负责转发以及处理报名，报名完之后上传文件，处理活动的二级用户人数不限（区分学位、年级、学院），所以来总结一下吧\n\n* 活动在任务之前\n* 任务对应人与活动\n* 任务对应学位年级学院三个属性\n* 每个二级完成活动规定的任务之后都要上传文件（最多三个）\n\n从需求可以大致推知表格的样貌\n\n## 建表思路\n\n由上，具体到表\n\n* 一个活动对应多个任务\n* 一个任务对应一个协理员\n* 一个任务由协理员ID、活动ID两个字段唯一识别\n* 一个任务由学位年级学院活动ID四个字段唯一识别\n* 一个活动由活动ID唯一识别\n* 一个活动对应一个一级成员\n\n根据这些点，就可以着手第二次修改了  \n\n# 第二次修改\n\n## task\n\n| 字段名\t|概念\t\t |\n| :------------ |:---------------|\n| TAS_ID\t| 任务ID         |  \n| TAS_CRE_ID\t| 任务创建人ID   |  \n| TAS_CRE_DATE\t| 任务创建日期   |  \n| TAS_DUE_ID\t| 任务下发人员ID |  \n| TAS_DUE_DATE\t| 任务截止日期   |\n| TAS_ACADEMY\t| 任务对应学院\t |\n| TAS_DEGREE\t| 任务对应学位\t |\n| TAS_GRADE\t| 任务对应年段\t |\n| TAS_AC_ID\t| 任务对应活动ID |\n| TAS_TITLE\t| 任务标题       |  \n| TAS_DESC\t| 任务概述       |  \n| TAS_DOC_ID\t| 任务文件ID     |  \n| TAS_DOC1_NAME\t| 任务文件一名   |  \n| TAS_DOC2_NAME\t| 任务文件二名   |  \n| TAS_DOC3_NAME\t| 任务文件三名   |  \n| TAS_FDOC1_NAME| 任务提交文件一 |  \n| TAS_FDOC2_NAME| 任务提交文件二 |  \n| TAS_FDOC3_NAME| 任务提交文件三 |  \n| TAS_STATUS\t| 任务状态       |  \n\n## activity\n\n| 字段名\t\t|概念\t\t |\n| :-------------------- |:---------------|\n| AC_ID\t\t\t| 活动ID         |  \n| AC_TYPE\t\t| 活动类型       |  \n| AC_CRE_ID\t\t| 活动对应创建人 |\n| AC_CRE_DATE\t\t| 活动创建时间   |  \n| AC_DUE_DATE\t\t| 活动截止时间   |  \n| AC_SIG_DUE_DATE\t| 报名截止时间   |  \n| AC_TITLE\t\t| 活动名         |  \n| AC_DESC\t\t| 活动概述       |  \n| AC_DOC_ID\t\t| 活动文件ID     |  \n| AC_DOC1_NAME\t\t| 活动文件一名   |  \n| AC_DOC2_NAME\t\t| 活动文件二名   |  \n| AC_DOC3_NAME\t\t| 活动文件三名   |  \n| AC_SIG_NUM\t\t| 活动报名人数   |  \n| AC_STATUS\t\t| 活动状态       | \n\n## 删除的字段\n\n* 活动所在学院\n* 活动对应任务ID\n\n## 增加的字段\n\n* 任务对应学院\n* 任务对应学位\n* 任务对应年段\n* 任务对应活动ID\n\n## 修改的字段\n\n* 活动对应创建人（原是协理员现在是一级管理员）\n\n增删之后发现两个表有重复的东西，出现了冗余问题，再改一下吧\n\n# 第三次修改\n\n## task\n\n| 字段名\t|概念\t\t |\n| :------------ |:---------------|\n| TAS_ID\t| 任务ID         |  \n| TAS_CRE_DATE\t| 任务创建日期   |  \n| TAS_DUE_ID\t| 任务下发人员ID |  \n| TAS_DUE_DATE\t| 任务截止日期   |\n| TAS_ACADEMY\t| 任务对应学院\t |\n| TAS_DEGREE\t| 任务对应学位\t |\n| TAS_GRADE\t| 任务对应年段\t |\n| TAS_AC_ID\t| 任务对应活动ID |\n| TAS_DOC_ID\t| 任务文件ID     |  \n| TAS_DOC1_NAME\t| 任务文件一名   |  \n| TAS_DOC2_NAME\t| 任务文件二名   |  \n| TAS_DOC3_NAME\t| 任务文件三名   |  \n| TAS_FDOC1_NAME| 任务提交文件一 |  \n| TAS_FDOC2_NAME| 任务提交文件二 |  \n| TAS_FDOC3_NAME| 任务提交文件三 |  \n| TAS_STATUS\t| 任务状态       |  \n\n## activity\n\n| 字段名\t\t|概念\t\t |\n| :-------------------- |:---------------|\n| AC_ID\t\t\t| 活动ID         |  \n| AC_TYPE\t\t| 活动类型       |  \n| AC_CRE_ID\t\t| 活动对应创建人 |\n| AC_CRE_DATE\t\t| 活动创建时间   |  \n| AC_DUE_DATE\t\t| 活动截止时间   |  \n| AC_SIG_DUE_DATE\t| 报名截止时间   |  \n| AC_TITLE\t\t| 活动名         |  \n| AC_DESC\t\t| 活动概述       |  \n| AC_DOC_ID\t\t| 活动文件ID     |  \n| AC_DOC1_NAME\t\t| 活动文件一名   |  \n| AC_DOC2_NAME\t\t| 活动文件二名   |  \n| AC_DOC3_NAME\t\t| 活动文件三名   |  \n| AC_SIG_NUM\t\t| 活动报名人数   |  \n| AC_STATUS\t\t| 活动状态       | \n\n## 删除的字段\n\n* 任务标题\n* 任务概述\n* 任务创建人ID\n\n这样，修改完后的表格就完成了\n\n# 汇总修改\n\n## 删除字段\n\n* 任务创建人名\n* 任务下发人员名\n* 协理员名\n* 活动所在学院\n* 活动对应任务ID\n* 任务标题\n* 任务概述\n* 任务创建人ID\n\n## 增加字段\n\n* 任务对应学院\n* 任务对应学位\n* 任务对应年段\n* 任务对应活动ID\n\n## 修改的字段\n\n* 活动对应创建人（原是协理员现在是一级管理员）\n","slug":"修改一对一的数据表成一对多的数据表","published":1,"updated":"2016-10-11T10:52:52.660Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civ9mvsdb000jaz99pjlxda6c","content":"<p>需求是领导发任务给协理员，让协理员创办活动，因此在数据库中，有任务与活动两个表</p>\n<a id=\"more\"></a>\n<h1 id=\"原表\"><a href=\"#原表\" class=\"headerlink\" title=\"原表\"></a>原表</h1><h2 id=\"task\"><a href=\"#task\" class=\"headerlink\" title=\"task\"></a>task</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">字段名</th>\n<th style=\"text-align:left\">概念</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">TAS_ID</td>\n<td style=\"text-align:left\">任务ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_CRE_ID</td>\n<td style=\"text-align:left\">任务创建人ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_CRE_NAME</td>\n<td style=\"text-align:left\">任务创建人名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_CRE_DATE</td>\n<td style=\"text-align:left\">任务创建日期</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DUE_DATE</td>\n<td style=\"text-align:left\">任务截止日期</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DUE_ID</td>\n<td style=\"text-align:left\">任务下发人员ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DUE_NAME</td>\n<td style=\"text-align:left\">任务下发人员名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_TITLE</td>\n<td style=\"text-align:left\">任务标题</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DESC</td>\n<td style=\"text-align:left\">任务概述</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC_ID</td>\n<td style=\"text-align:left\">任务文件ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC1_NAME</td>\n<td style=\"text-align:left\">任务文件一名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC2_NAME</td>\n<td style=\"text-align:left\">任务文件二名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC3_NAME</td>\n<td style=\"text-align:left\">任务文件三名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_FDOC1_NAME</td>\n<td style=\"text-align:left\">任务提交文件一</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_FDOC2_NAME</td>\n<td style=\"text-align:left\">任务提交文件二</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_FDOC3_NAME</td>\n<td style=\"text-align:left\">任务提交文件三</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_STATUS</td>\n<td style=\"text-align:left\">任务状态</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"activity\"><a href=\"#activity\" class=\"headerlink\" title=\"activity\"></a>activity</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">字段名</th>\n<th style=\"text-align:left\">概念</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">AC_ID</td>\n<td style=\"text-align:left\">活动ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_TYPE</td>\n<td style=\"text-align:left\">活动类型</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_ACADEMY</td>\n<td style=\"text-align:left\">活动所在学院</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_TAS_ID</td>\n<td style=\"text-align:left\">活动对应任务ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_CRE_ID</td>\n<td style=\"text-align:left\">活动对应协理员</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_CRE_NAME</td>\n<td style=\"text-align:left\">协理员名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_CRE_DATE</td>\n<td style=\"text-align:left\">活动创建时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DUE_DATE</td>\n<td style=\"text-align:left\">活动截止时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_SIG_DUE_DATE</td>\n<td style=\"text-align:left\">报名截止时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_TITLE</td>\n<td style=\"text-align:left\">活动名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DESC</td>\n<td style=\"text-align:left\">活动概述</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC_ID</td>\n<td style=\"text-align:left\">活动文件ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC1_NAME</td>\n<td style=\"text-align:left\">活动文件一名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC2_NAME</td>\n<td style=\"text-align:left\">活动文件二名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC3_NAME</td>\n<td style=\"text-align:left\">活动文件三名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_SIG_NUM</td>\n<td style=\"text-align:left\">活动报名人数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_STATUS</td>\n<td style=\"text-align:left\">活动状态</td>\n</tr>\n</tbody>\n</table>\n<p>很多字段都冗余了，先简化一下</p>\n<h1 id=\"第一次修改\"><a href=\"#第一次修改\" class=\"headerlink\" title=\"第一次修改\"></a>第一次修改</h1><h2 id=\"task-1\"><a href=\"#task-1\" class=\"headerlink\" title=\"task\"></a>task</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">字段名</th>\n<th style=\"text-align:left\">概念</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">TAS_ID</td>\n<td style=\"text-align:left\">任务ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_CRE_ID</td>\n<td style=\"text-align:left\">任务创建人ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_CRE_DATE</td>\n<td style=\"text-align:left\">任务创建日期</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DUE_DATE</td>\n<td style=\"text-align:left\">任务截止日期</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DUE_ID</td>\n<td style=\"text-align:left\">任务下发人员ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_TITLE</td>\n<td style=\"text-align:left\">任务标题</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DESC</td>\n<td style=\"text-align:left\">任务概述</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC_ID</td>\n<td style=\"text-align:left\">任务文件ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC1_NAME</td>\n<td style=\"text-align:left\">任务文件一名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC2_NAME</td>\n<td style=\"text-align:left\">任务文件二名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC3_NAME</td>\n<td style=\"text-align:left\">任务文件三名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_FDOC1_NAME</td>\n<td style=\"text-align:left\">任务提交文件一</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_FDOC2_NAME</td>\n<td style=\"text-align:left\">任务提交文件二</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_FDOC3_NAME</td>\n<td style=\"text-align:left\">任务提交文件三</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_STATUS</td>\n<td style=\"text-align:left\">任务状态</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"activity-1\"><a href=\"#activity-1\" class=\"headerlink\" title=\"activity\"></a>activity</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">字段名</th>\n<th style=\"text-align:left\">概念</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">AC_ID</td>\n<td style=\"text-align:left\">活动ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_TYPE</td>\n<td style=\"text-align:left\">活动类型</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_ACADEMY</td>\n<td style=\"text-align:left\">活动所在学院</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_TAS_ID</td>\n<td style=\"text-align:left\">活动对应任务ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_CRE_ID</td>\n<td style=\"text-align:left\">活动对应协理员</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_CRE_DATE</td>\n<td style=\"text-align:left\">活动创建时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DUE_DATE</td>\n<td style=\"text-align:left\">活动截止时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_SIG_DUE_DATE</td>\n<td style=\"text-align:left\">报名截止时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_TITLE</td>\n<td style=\"text-align:left\">活动名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DESC</td>\n<td style=\"text-align:left\">活动概述</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC_ID</td>\n<td style=\"text-align:left\">活动文件ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC1_NAME</td>\n<td style=\"text-align:left\">活动文件一名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC2_NAME</td>\n<td style=\"text-align:left\">活动文件二名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC3_NAME</td>\n<td style=\"text-align:left\">活动文件三名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_SIG_NUM</td>\n<td style=\"text-align:left\">活动报名人数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_STATUS</td>\n<td style=\"text-align:left\">活动状态</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"删除的字段\"><a href=\"#删除的字段\" class=\"headerlink\" title=\"删除的字段\"></a>删除的字段</h2><ul>\n<li>任务创建人名</li>\n<li>任务下发人员名</li>\n<li>协理员名 </li>\n</ul>\n<p>好，现在没有什么多余的字段了，来试试一对多吧</p>\n<h1 id=\"一对多的思考\"><a href=\"#一对多的思考\" class=\"headerlink\" title=\"一对多的思考\"></a>一对多的思考</h1><h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><p>一级用户创建活动，二级只负责转发以及处理报名，报名完之后上传文件，处理活动的二级用户人数不限（区分学位、年级、学院），所以来总结一下吧</p>\n<ul>\n<li>活动在任务之前</li>\n<li>任务对应人与活动</li>\n<li>任务对应学位年级学院三个属性</li>\n<li>每个二级完成活动规定的任务之后都要上传文件（最多三个）</li>\n</ul>\n<p>从需求可以大致推知表格的样貌</p>\n<h2 id=\"建表思路\"><a href=\"#建表思路\" class=\"headerlink\" title=\"建表思路\"></a>建表思路</h2><p>由上，具体到表</p>\n<ul>\n<li>一个活动对应多个任务</li>\n<li>一个任务对应一个协理员</li>\n<li>一个任务由协理员ID、活动ID两个字段唯一识别</li>\n<li>一个任务由学位年级学院活动ID四个字段唯一识别</li>\n<li>一个活动由活动ID唯一识别</li>\n<li>一个活动对应一个一级成员</li>\n</ul>\n<p>根据这些点，就可以着手第二次修改了  </p>\n<h1 id=\"第二次修改\"><a href=\"#第二次修改\" class=\"headerlink\" title=\"第二次修改\"></a>第二次修改</h1><h2 id=\"task-2\"><a href=\"#task-2\" class=\"headerlink\" title=\"task\"></a>task</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">字段名</th>\n<th style=\"text-align:left\">概念</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">TAS_ID</td>\n<td style=\"text-align:left\">任务ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_CRE_ID</td>\n<td style=\"text-align:left\">任务创建人ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_CRE_DATE</td>\n<td style=\"text-align:left\">任务创建日期</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DUE_ID</td>\n<td style=\"text-align:left\">任务下发人员ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DUE_DATE</td>\n<td style=\"text-align:left\">任务截止日期</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_ACADEMY</td>\n<td style=\"text-align:left\">任务对应学院</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DEGREE</td>\n<td style=\"text-align:left\">任务对应学位</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_GRADE</td>\n<td style=\"text-align:left\">任务对应年段</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_AC_ID</td>\n<td style=\"text-align:left\">任务对应活动ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_TITLE</td>\n<td style=\"text-align:left\">任务标题</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DESC</td>\n<td style=\"text-align:left\">任务概述</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC_ID</td>\n<td style=\"text-align:left\">任务文件ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC1_NAME</td>\n<td style=\"text-align:left\">任务文件一名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC2_NAME</td>\n<td style=\"text-align:left\">任务文件二名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC3_NAME</td>\n<td style=\"text-align:left\">任务文件三名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_FDOC1_NAME</td>\n<td style=\"text-align:left\">任务提交文件一</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_FDOC2_NAME</td>\n<td style=\"text-align:left\">任务提交文件二</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_FDOC3_NAME</td>\n<td style=\"text-align:left\">任务提交文件三</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_STATUS</td>\n<td style=\"text-align:left\">任务状态</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"activity-2\"><a href=\"#activity-2\" class=\"headerlink\" title=\"activity\"></a>activity</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">字段名</th>\n<th style=\"text-align:left\">概念</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">AC_ID</td>\n<td style=\"text-align:left\">活动ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_TYPE</td>\n<td style=\"text-align:left\">活动类型</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_CRE_ID</td>\n<td style=\"text-align:left\">活动对应创建人</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_CRE_DATE</td>\n<td style=\"text-align:left\">活动创建时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DUE_DATE</td>\n<td style=\"text-align:left\">活动截止时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_SIG_DUE_DATE</td>\n<td style=\"text-align:left\">报名截止时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_TITLE</td>\n<td style=\"text-align:left\">活动名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DESC</td>\n<td style=\"text-align:left\">活动概述</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC_ID</td>\n<td style=\"text-align:left\">活动文件ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC1_NAME</td>\n<td style=\"text-align:left\">活动文件一名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC2_NAME</td>\n<td style=\"text-align:left\">活动文件二名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC3_NAME</td>\n<td style=\"text-align:left\">活动文件三名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_SIG_NUM</td>\n<td style=\"text-align:left\">活动报名人数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_STATUS</td>\n<td style=\"text-align:left\">活动状态</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"删除的字段-1\"><a href=\"#删除的字段-1\" class=\"headerlink\" title=\"删除的字段\"></a>删除的字段</h2><ul>\n<li>活动所在学院</li>\n<li>活动对应任务ID</li>\n</ul>\n<h2 id=\"增加的字段\"><a href=\"#增加的字段\" class=\"headerlink\" title=\"增加的字段\"></a>增加的字段</h2><ul>\n<li>任务对应学院</li>\n<li>任务对应学位</li>\n<li>任务对应年段</li>\n<li>任务对应活动ID</li>\n</ul>\n<h2 id=\"修改的字段\"><a href=\"#修改的字段\" class=\"headerlink\" title=\"修改的字段\"></a>修改的字段</h2><ul>\n<li>活动对应创建人（原是协理员现在是一级管理员）</li>\n</ul>\n<p>增删之后发现两个表有重复的东西，出现了冗余问题，再改一下吧</p>\n<h1 id=\"第三次修改\"><a href=\"#第三次修改\" class=\"headerlink\" title=\"第三次修改\"></a>第三次修改</h1><h2 id=\"task-3\"><a href=\"#task-3\" class=\"headerlink\" title=\"task\"></a>task</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">字段名</th>\n<th style=\"text-align:left\">概念</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">TAS_ID</td>\n<td style=\"text-align:left\">任务ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_CRE_DATE</td>\n<td style=\"text-align:left\">任务创建日期</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DUE_ID</td>\n<td style=\"text-align:left\">任务下发人员ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DUE_DATE</td>\n<td style=\"text-align:left\">任务截止日期</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_ACADEMY</td>\n<td style=\"text-align:left\">任务对应学院</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DEGREE</td>\n<td style=\"text-align:left\">任务对应学位</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_GRADE</td>\n<td style=\"text-align:left\">任务对应年段</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_AC_ID</td>\n<td style=\"text-align:left\">任务对应活动ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC_ID</td>\n<td style=\"text-align:left\">任务文件ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC1_NAME</td>\n<td style=\"text-align:left\">任务文件一名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC2_NAME</td>\n<td style=\"text-align:left\">任务文件二名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC3_NAME</td>\n<td style=\"text-align:left\">任务文件三名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_FDOC1_NAME</td>\n<td style=\"text-align:left\">任务提交文件一</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_FDOC2_NAME</td>\n<td style=\"text-align:left\">任务提交文件二</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_FDOC3_NAME</td>\n<td style=\"text-align:left\">任务提交文件三</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_STATUS</td>\n<td style=\"text-align:left\">任务状态</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"activity-3\"><a href=\"#activity-3\" class=\"headerlink\" title=\"activity\"></a>activity</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">字段名</th>\n<th style=\"text-align:left\">概念</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">AC_ID</td>\n<td style=\"text-align:left\">活动ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_TYPE</td>\n<td style=\"text-align:left\">活动类型</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_CRE_ID</td>\n<td style=\"text-align:left\">活动对应创建人</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_CRE_DATE</td>\n<td style=\"text-align:left\">活动创建时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DUE_DATE</td>\n<td style=\"text-align:left\">活动截止时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_SIG_DUE_DATE</td>\n<td style=\"text-align:left\">报名截止时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_TITLE</td>\n<td style=\"text-align:left\">活动名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DESC</td>\n<td style=\"text-align:left\">活动概述</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC_ID</td>\n<td style=\"text-align:left\">活动文件ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC1_NAME</td>\n<td style=\"text-align:left\">活动文件一名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC2_NAME</td>\n<td style=\"text-align:left\">活动文件二名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC3_NAME</td>\n<td style=\"text-align:left\">活动文件三名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_SIG_NUM</td>\n<td style=\"text-align:left\">活动报名人数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_STATUS</td>\n<td style=\"text-align:left\">活动状态</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"删除的字段-2\"><a href=\"#删除的字段-2\" class=\"headerlink\" title=\"删除的字段\"></a>删除的字段</h2><ul>\n<li>任务标题</li>\n<li>任务概述</li>\n<li>任务创建人ID</li>\n</ul>\n<p>这样，修改完后的表格就完成了</p>\n<h1 id=\"汇总修改\"><a href=\"#汇总修改\" class=\"headerlink\" title=\"汇总修改\"></a>汇总修改</h1><h2 id=\"删除字段\"><a href=\"#删除字段\" class=\"headerlink\" title=\"删除字段\"></a>删除字段</h2><ul>\n<li>任务创建人名</li>\n<li>任务下发人员名</li>\n<li>协理员名</li>\n<li>活动所在学院</li>\n<li>活动对应任务ID</li>\n<li>任务标题</li>\n<li>任务概述</li>\n<li>任务创建人ID</li>\n</ul>\n<h2 id=\"增加字段\"><a href=\"#增加字段\" class=\"headerlink\" title=\"增加字段\"></a>增加字段</h2><ul>\n<li>任务对应学院</li>\n<li>任务对应学位</li>\n<li>任务对应年段</li>\n<li>任务对应活动ID</li>\n</ul>\n<h2 id=\"修改的字段-1\"><a href=\"#修改的字段-1\" class=\"headerlink\" title=\"修改的字段\"></a>修改的字段</h2><ul>\n<li>活动对应创建人（原是协理员现在是一级管理员）</li>\n</ul>\n","excerpt":"<p>需求是领导发任务给协理员，让协理员创办活动，因此在数据库中，有任务与活动两个表</p>","more":"<h1 id=\"原表\"><a href=\"#原表\" class=\"headerlink\" title=\"原表\"></a>原表</h1><h2 id=\"task\"><a href=\"#task\" class=\"headerlink\" title=\"task\"></a>task</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">字段名</th>\n<th style=\"text-align:left\">概念</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">TAS_ID</td>\n<td style=\"text-align:left\">任务ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_CRE_ID</td>\n<td style=\"text-align:left\">任务创建人ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_CRE_NAME</td>\n<td style=\"text-align:left\">任务创建人名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_CRE_DATE</td>\n<td style=\"text-align:left\">任务创建日期</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DUE_DATE</td>\n<td style=\"text-align:left\">任务截止日期</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DUE_ID</td>\n<td style=\"text-align:left\">任务下发人员ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DUE_NAME</td>\n<td style=\"text-align:left\">任务下发人员名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_TITLE</td>\n<td style=\"text-align:left\">任务标题</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DESC</td>\n<td style=\"text-align:left\">任务概述</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC_ID</td>\n<td style=\"text-align:left\">任务文件ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC1_NAME</td>\n<td style=\"text-align:left\">任务文件一名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC2_NAME</td>\n<td style=\"text-align:left\">任务文件二名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC3_NAME</td>\n<td style=\"text-align:left\">任务文件三名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_FDOC1_NAME</td>\n<td style=\"text-align:left\">任务提交文件一</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_FDOC2_NAME</td>\n<td style=\"text-align:left\">任务提交文件二</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_FDOC3_NAME</td>\n<td style=\"text-align:left\">任务提交文件三</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_STATUS</td>\n<td style=\"text-align:left\">任务状态</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"activity\"><a href=\"#activity\" class=\"headerlink\" title=\"activity\"></a>activity</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">字段名</th>\n<th style=\"text-align:left\">概念</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">AC_ID</td>\n<td style=\"text-align:left\">活动ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_TYPE</td>\n<td style=\"text-align:left\">活动类型</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_ACADEMY</td>\n<td style=\"text-align:left\">活动所在学院</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_TAS_ID</td>\n<td style=\"text-align:left\">活动对应任务ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_CRE_ID</td>\n<td style=\"text-align:left\">活动对应协理员</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_CRE_NAME</td>\n<td style=\"text-align:left\">协理员名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_CRE_DATE</td>\n<td style=\"text-align:left\">活动创建时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DUE_DATE</td>\n<td style=\"text-align:left\">活动截止时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_SIG_DUE_DATE</td>\n<td style=\"text-align:left\">报名截止时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_TITLE</td>\n<td style=\"text-align:left\">活动名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DESC</td>\n<td style=\"text-align:left\">活动概述</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC_ID</td>\n<td style=\"text-align:left\">活动文件ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC1_NAME</td>\n<td style=\"text-align:left\">活动文件一名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC2_NAME</td>\n<td style=\"text-align:left\">活动文件二名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC3_NAME</td>\n<td style=\"text-align:left\">活动文件三名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_SIG_NUM</td>\n<td style=\"text-align:left\">活动报名人数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_STATUS</td>\n<td style=\"text-align:left\">活动状态</td>\n</tr>\n</tbody>\n</table>\n<p>很多字段都冗余了，先简化一下</p>\n<h1 id=\"第一次修改\"><a href=\"#第一次修改\" class=\"headerlink\" title=\"第一次修改\"></a>第一次修改</h1><h2 id=\"task-1\"><a href=\"#task-1\" class=\"headerlink\" title=\"task\"></a>task</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">字段名</th>\n<th style=\"text-align:left\">概念</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">TAS_ID</td>\n<td style=\"text-align:left\">任务ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_CRE_ID</td>\n<td style=\"text-align:left\">任务创建人ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_CRE_DATE</td>\n<td style=\"text-align:left\">任务创建日期</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DUE_DATE</td>\n<td style=\"text-align:left\">任务截止日期</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DUE_ID</td>\n<td style=\"text-align:left\">任务下发人员ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_TITLE</td>\n<td style=\"text-align:left\">任务标题</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DESC</td>\n<td style=\"text-align:left\">任务概述</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC_ID</td>\n<td style=\"text-align:left\">任务文件ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC1_NAME</td>\n<td style=\"text-align:left\">任务文件一名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC2_NAME</td>\n<td style=\"text-align:left\">任务文件二名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC3_NAME</td>\n<td style=\"text-align:left\">任务文件三名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_FDOC1_NAME</td>\n<td style=\"text-align:left\">任务提交文件一</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_FDOC2_NAME</td>\n<td style=\"text-align:left\">任务提交文件二</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_FDOC3_NAME</td>\n<td style=\"text-align:left\">任务提交文件三</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_STATUS</td>\n<td style=\"text-align:left\">任务状态</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"activity-1\"><a href=\"#activity-1\" class=\"headerlink\" title=\"activity\"></a>activity</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">字段名</th>\n<th style=\"text-align:left\">概念</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">AC_ID</td>\n<td style=\"text-align:left\">活动ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_TYPE</td>\n<td style=\"text-align:left\">活动类型</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_ACADEMY</td>\n<td style=\"text-align:left\">活动所在学院</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_TAS_ID</td>\n<td style=\"text-align:left\">活动对应任务ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_CRE_ID</td>\n<td style=\"text-align:left\">活动对应协理员</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_CRE_DATE</td>\n<td style=\"text-align:left\">活动创建时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DUE_DATE</td>\n<td style=\"text-align:left\">活动截止时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_SIG_DUE_DATE</td>\n<td style=\"text-align:left\">报名截止时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_TITLE</td>\n<td style=\"text-align:left\">活动名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DESC</td>\n<td style=\"text-align:left\">活动概述</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC_ID</td>\n<td style=\"text-align:left\">活动文件ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC1_NAME</td>\n<td style=\"text-align:left\">活动文件一名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC2_NAME</td>\n<td style=\"text-align:left\">活动文件二名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC3_NAME</td>\n<td style=\"text-align:left\">活动文件三名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_SIG_NUM</td>\n<td style=\"text-align:left\">活动报名人数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_STATUS</td>\n<td style=\"text-align:left\">活动状态</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"删除的字段\"><a href=\"#删除的字段\" class=\"headerlink\" title=\"删除的字段\"></a>删除的字段</h2><ul>\n<li>任务创建人名</li>\n<li>任务下发人员名</li>\n<li>协理员名 </li>\n</ul>\n<p>好，现在没有什么多余的字段了，来试试一对多吧</p>\n<h1 id=\"一对多的思考\"><a href=\"#一对多的思考\" class=\"headerlink\" title=\"一对多的思考\"></a>一对多的思考</h1><h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><p>一级用户创建活动，二级只负责转发以及处理报名，报名完之后上传文件，处理活动的二级用户人数不限（区分学位、年级、学院），所以来总结一下吧</p>\n<ul>\n<li>活动在任务之前</li>\n<li>任务对应人与活动</li>\n<li>任务对应学位年级学院三个属性</li>\n<li>每个二级完成活动规定的任务之后都要上传文件（最多三个）</li>\n</ul>\n<p>从需求可以大致推知表格的样貌</p>\n<h2 id=\"建表思路\"><a href=\"#建表思路\" class=\"headerlink\" title=\"建表思路\"></a>建表思路</h2><p>由上，具体到表</p>\n<ul>\n<li>一个活动对应多个任务</li>\n<li>一个任务对应一个协理员</li>\n<li>一个任务由协理员ID、活动ID两个字段唯一识别</li>\n<li>一个任务由学位年级学院活动ID四个字段唯一识别</li>\n<li>一个活动由活动ID唯一识别</li>\n<li>一个活动对应一个一级成员</li>\n</ul>\n<p>根据这些点，就可以着手第二次修改了  </p>\n<h1 id=\"第二次修改\"><a href=\"#第二次修改\" class=\"headerlink\" title=\"第二次修改\"></a>第二次修改</h1><h2 id=\"task-2\"><a href=\"#task-2\" class=\"headerlink\" title=\"task\"></a>task</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">字段名</th>\n<th style=\"text-align:left\">概念</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">TAS_ID</td>\n<td style=\"text-align:left\">任务ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_CRE_ID</td>\n<td style=\"text-align:left\">任务创建人ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_CRE_DATE</td>\n<td style=\"text-align:left\">任务创建日期</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DUE_ID</td>\n<td style=\"text-align:left\">任务下发人员ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DUE_DATE</td>\n<td style=\"text-align:left\">任务截止日期</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_ACADEMY</td>\n<td style=\"text-align:left\">任务对应学院</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DEGREE</td>\n<td style=\"text-align:left\">任务对应学位</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_GRADE</td>\n<td style=\"text-align:left\">任务对应年段</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_AC_ID</td>\n<td style=\"text-align:left\">任务对应活动ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_TITLE</td>\n<td style=\"text-align:left\">任务标题</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DESC</td>\n<td style=\"text-align:left\">任务概述</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC_ID</td>\n<td style=\"text-align:left\">任务文件ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC1_NAME</td>\n<td style=\"text-align:left\">任务文件一名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC2_NAME</td>\n<td style=\"text-align:left\">任务文件二名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC3_NAME</td>\n<td style=\"text-align:left\">任务文件三名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_FDOC1_NAME</td>\n<td style=\"text-align:left\">任务提交文件一</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_FDOC2_NAME</td>\n<td style=\"text-align:left\">任务提交文件二</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_FDOC3_NAME</td>\n<td style=\"text-align:left\">任务提交文件三</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_STATUS</td>\n<td style=\"text-align:left\">任务状态</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"activity-2\"><a href=\"#activity-2\" class=\"headerlink\" title=\"activity\"></a>activity</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">字段名</th>\n<th style=\"text-align:left\">概念</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">AC_ID</td>\n<td style=\"text-align:left\">活动ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_TYPE</td>\n<td style=\"text-align:left\">活动类型</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_CRE_ID</td>\n<td style=\"text-align:left\">活动对应创建人</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_CRE_DATE</td>\n<td style=\"text-align:left\">活动创建时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DUE_DATE</td>\n<td style=\"text-align:left\">活动截止时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_SIG_DUE_DATE</td>\n<td style=\"text-align:left\">报名截止时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_TITLE</td>\n<td style=\"text-align:left\">活动名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DESC</td>\n<td style=\"text-align:left\">活动概述</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC_ID</td>\n<td style=\"text-align:left\">活动文件ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC1_NAME</td>\n<td style=\"text-align:left\">活动文件一名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC2_NAME</td>\n<td style=\"text-align:left\">活动文件二名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC3_NAME</td>\n<td style=\"text-align:left\">活动文件三名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_SIG_NUM</td>\n<td style=\"text-align:left\">活动报名人数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_STATUS</td>\n<td style=\"text-align:left\">活动状态</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"删除的字段-1\"><a href=\"#删除的字段-1\" class=\"headerlink\" title=\"删除的字段\"></a>删除的字段</h2><ul>\n<li>活动所在学院</li>\n<li>活动对应任务ID</li>\n</ul>\n<h2 id=\"增加的字段\"><a href=\"#增加的字段\" class=\"headerlink\" title=\"增加的字段\"></a>增加的字段</h2><ul>\n<li>任务对应学院</li>\n<li>任务对应学位</li>\n<li>任务对应年段</li>\n<li>任务对应活动ID</li>\n</ul>\n<h2 id=\"修改的字段\"><a href=\"#修改的字段\" class=\"headerlink\" title=\"修改的字段\"></a>修改的字段</h2><ul>\n<li>活动对应创建人（原是协理员现在是一级管理员）</li>\n</ul>\n<p>增删之后发现两个表有重复的东西，出现了冗余问题，再改一下吧</p>\n<h1 id=\"第三次修改\"><a href=\"#第三次修改\" class=\"headerlink\" title=\"第三次修改\"></a>第三次修改</h1><h2 id=\"task-3\"><a href=\"#task-3\" class=\"headerlink\" title=\"task\"></a>task</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">字段名</th>\n<th style=\"text-align:left\">概念</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">TAS_ID</td>\n<td style=\"text-align:left\">任务ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_CRE_DATE</td>\n<td style=\"text-align:left\">任务创建日期</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DUE_ID</td>\n<td style=\"text-align:left\">任务下发人员ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DUE_DATE</td>\n<td style=\"text-align:left\">任务截止日期</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_ACADEMY</td>\n<td style=\"text-align:left\">任务对应学院</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DEGREE</td>\n<td style=\"text-align:left\">任务对应学位</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_GRADE</td>\n<td style=\"text-align:left\">任务对应年段</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_AC_ID</td>\n<td style=\"text-align:left\">任务对应活动ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC_ID</td>\n<td style=\"text-align:left\">任务文件ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC1_NAME</td>\n<td style=\"text-align:left\">任务文件一名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC2_NAME</td>\n<td style=\"text-align:left\">任务文件二名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_DOC3_NAME</td>\n<td style=\"text-align:left\">任务文件三名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_FDOC1_NAME</td>\n<td style=\"text-align:left\">任务提交文件一</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_FDOC2_NAME</td>\n<td style=\"text-align:left\">任务提交文件二</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_FDOC3_NAME</td>\n<td style=\"text-align:left\">任务提交文件三</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TAS_STATUS</td>\n<td style=\"text-align:left\">任务状态</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"activity-3\"><a href=\"#activity-3\" class=\"headerlink\" title=\"activity\"></a>activity</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">字段名</th>\n<th style=\"text-align:left\">概念</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">AC_ID</td>\n<td style=\"text-align:left\">活动ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_TYPE</td>\n<td style=\"text-align:left\">活动类型</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_CRE_ID</td>\n<td style=\"text-align:left\">活动对应创建人</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_CRE_DATE</td>\n<td style=\"text-align:left\">活动创建时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DUE_DATE</td>\n<td style=\"text-align:left\">活动截止时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_SIG_DUE_DATE</td>\n<td style=\"text-align:left\">报名截止时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_TITLE</td>\n<td style=\"text-align:left\">活动名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DESC</td>\n<td style=\"text-align:left\">活动概述</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC_ID</td>\n<td style=\"text-align:left\">活动文件ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC1_NAME</td>\n<td style=\"text-align:left\">活动文件一名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC2_NAME</td>\n<td style=\"text-align:left\">活动文件二名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_DOC3_NAME</td>\n<td style=\"text-align:left\">活动文件三名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_SIG_NUM</td>\n<td style=\"text-align:left\">活动报名人数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AC_STATUS</td>\n<td style=\"text-align:left\">活动状态</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"删除的字段-2\"><a href=\"#删除的字段-2\" class=\"headerlink\" title=\"删除的字段\"></a>删除的字段</h2><ul>\n<li>任务标题</li>\n<li>任务概述</li>\n<li>任务创建人ID</li>\n</ul>\n<p>这样，修改完后的表格就完成了</p>\n<h1 id=\"汇总修改\"><a href=\"#汇总修改\" class=\"headerlink\" title=\"汇总修改\"></a>汇总修改</h1><h2 id=\"删除字段\"><a href=\"#删除字段\" class=\"headerlink\" title=\"删除字段\"></a>删除字段</h2><ul>\n<li>任务创建人名</li>\n<li>任务下发人员名</li>\n<li>协理员名</li>\n<li>活动所在学院</li>\n<li>活动对应任务ID</li>\n<li>任务标题</li>\n<li>任务概述</li>\n<li>任务创建人ID</li>\n</ul>\n<h2 id=\"增加字段\"><a href=\"#增加字段\" class=\"headerlink\" title=\"增加字段\"></a>增加字段</h2><ul>\n<li>任务对应学院</li>\n<li>任务对应学位</li>\n<li>任务对应年段</li>\n<li>任务对应活动ID</li>\n</ul>\n<h2 id=\"修改的字段-1\"><a href=\"#修改的字段-1\" class=\"headerlink\" title=\"修改的字段\"></a>修改的字段</h2><ul>\n<li>活动对应创建人（原是协理员现在是一级管理员）</li>\n</ul>"},{"title":"一小时快速上手mybatis(Mapper代理开发,mysql数据库)","date":"2016-11-04T11:35:14.000Z","_content":"\nmybatis 东西确实多,但是如果只讲常用的,那就不多了\n\n<!-- more -->\n\n# MyBatis介绍\n\nMyBatis 本是apache的一个开源项目iBatis, 2010年这个项目由apache software foundation 迁移到了google code，并且改名为MyBatis，实质上Mybatis对ibatis进行一些改进。 \nMyBatis是一个优秀的持久层框架，它对jdbc的操作数据库的过程进行封装，使开发者只需要关注 SQL 本身，而不需要花费精力去处理例如注册驱动、创建connection、创建statement、手动设置参数、结果集检索等jdbc繁杂的过程代码。\nMybatis通过xml或注解的方式将要执行的各种statement（statement、preparedStatemnt、CallableStatement）配置起来，并通过java对象和statement中的sql进行映射生成最终执行的sql语句，最后由mybatis框架执行sql并将结果映射成java对象并返回。\n\n# Mybatis架构\n\n![mybatis架构](http://ww1.sinaimg.cn/mw690/005SWPzyjw1f9gephyn2cj30mw0d3q5v.jpg)\n\n* mybatis配置\nSqlMapConfig.xml，此文件作为mybatis的全局配置文件，配置了mybatis的运行环境等信息。\nmapper.xml文件即sql映射文件，文件中配置了操作数据库的sql语句。此文件需要在SqlMapConfig.xml中加载。\n\n* 通过mybatis环境等配置信息构造SqlSessionFactory即会话工厂\n* 由会话工厂创建sqlSession即会话，操作数据库需要通过sqlSession进行。\n* mybatis底层自定义了Executor执行器接口操作数据库，Executor接口有两个实现，一个是基本执行器、一个是缓存执行器。\n* Mapped Statement也是mybatis一个底层封装对象，它包装了mybatis配置信息及sql映射信息等。mapper.xml文件中一个sql对应一个Mapped Statement对象，sql的id即是Mapped statement的id。\n* Mapped Statement对sql执行输入参数进行定义，包括HashMap、基本类型、pojo，Executor通过Mapped Statement在执行sql前将输入的java对象映射至sql中，输入参数映射就是jdbc编程中对preparedStatement设置参数。\n* Mapped Statement对sql执行输出结果进行定义，包括HashMap、基本类型、pojo，Executor通过Mapped Statement在执行sql后将输出结果映射至java对象中，输出结果映射过程相当于jdbc编程中对结果的解析处理过程。\n\n# Mybatis下载\n\nmybaits的代码由github.com管理，地址：https://github.com/mybatis/mybatis-3/releases\n![mybatis包结构](http://ww4.sinaimg.cn/mw690/005SWPzyjw1f9gf47l6mjj304o05wt8p.jpg)\nmybatis-3.2.7.jar----mybatis的核心包\nlib----mybatis的依赖包\nmybatis-3.2.7.pdf----mybatis使用手册\n\n# Mybatis 项目搭建\n\n## 导入包\n\n使用eclipse/myeclipse创建java工程,使用最新的jdk\n加入mybatis核心包,依赖包,数据驱动包\n![mybatis依赖包](http://ww1.sinaimg.cn/mw690/005SWPzyjw1f9gfg636dnj3088074jsc.jpg)\n\n## 目标的样子\n\n![mybatis项目最终结构(参考)](http://ww4.sinaimg.cn/mw690/005SWPzyjw1f9gfmhmqw2j309108i3zo.jpg)\n\n## 创建log4j.propertie,在里面加入下面的内容\n\n```properties\n# Global logging configuration\nlog4j.rootLogger=DEBUG, stdout\n# Console output...\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n\n```\n第二行的不同状态会导致控制台的不同输出结果\ndebug ：显示输出信息,报错信息,调试信息\ninfo ：显示(输出信息)\n所以如果设置为info的话,即便出错也不会知道,一般为开发完成的项目设置\n\n## 创建SqlMapConfig.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE configuration\nPUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n\"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n\t<!-- 和spring整合后 environments配置将废除-->\n\t<environments default=\"development\">\n\t\t<environment id=\"development\">\n\t\t<!-- 使用jdbc事务管理-->\n\t\t\t<transactionManager type=\"JDBC\" />\n\t\t<!-- 数据库连接池-->\n\t\t\t<dataSource type=\"POOLED\">\n\t\t\t\t<property name=\"driver\" value=\"com.mysql.jdbc.Driver\" />\n\t\t\t\t<property name=\"url\" value=\"jdbc:mysql://localhost:3306/world?characterEncoding=utf-8\" />\n\t\t\t\t<property name=\"username\" value=\"root\" />\n\t\t\t\t<property name=\"password\" value=\"123\" />\n\t\t\t</dataSource>\n\t\t</environment>\n\t</environments>\n\t\n</configuration>\n```\n\n但是将数据库信息写死在代码里不是个明智的选择,所以我们可以将它放在文件里,更易于修改\n\n## 创建db.properties\n\n```properties\njdbc.driver=com.mysql.jdbc.Driver\njdbc.url=jdbc:mysql://localhost:3306/mybatis\njdbc.username=root\njdbc.password=mysql\n```\n\n![db.properties](http://ww1.sinaimg.cn/mw690/005SWPzyjw1f9gh2ok2ccj30jf070wfo.jpg)\n\n这样在SqlMapConfig.xml中就可以这样引用\n\n\n```xml\n<properties resource=\"db.properties\"/>\n\t<environments default=\"development\">\n\t\t<environment id=\"development\">\n\t\t\t<transactionManager type=\"JDBC\"/>\n\t\t\t<dataSource type=\"POOLED\">\n\t\t\t\t<property name=\"driver\" value=\"${jdbc.driver}\"/>\n\t\t\t\t<property name=\"url\" value=\"${jdbc.url}\"/>\n\t\t\t\t<property name=\"username\" value=\"${jdbc.username}\"/>\n\t\t\t\t<property name=\"password\" value=\"${jdbc.password}\"/>\n\t\t\t</dataSource>\n\t\t</environment>\n\t</environments>\n```\n\n信息变化的时候改文件就行了\n\n## po类\n\nPo类作为mybatis进行sql映射使用，po类通常与数据库表对应，User.java如下：\n\n```java\npackage cn.itcast.mybatis.po;\n\npublic class City {\n\t//属性名要和数据库表的字段对应\n\tprivate int ID;\n\tprivate String Name;\n\tprivate String CountryCode;\n\tprivate String District;\n\tprivate int Population;\n\tget...\n\tset...\n}\n\n```\n\n## 编写核心程序\n\n### mapper动态代理方式\n\nMapper接口开发方法只需要程序员编写Mapper接口（相当于Dao接口），由Mybatis框架根据接口定义创建接口的动态代理对象，代理对象的方法体同上边Dao接口实现类方法。\nMapper接口开发需要遵循以下规范：\n1、 Mapper.xml文件中的namespace与mapper接口的类路径相同。\n2、 Mapper接口方法名和Mapper.xml中定义的每个statement的id相同 \n3、 Mapper接口方法的输入参数类型和mapper.xml中定义的每个sql 的parameterType的类型相同\n4、 Mapper接口方法的输出参数类型和mapper.xml中定义的每个sql的resultType的类型相同 \n\n### 映射文件\n\nsqlmap目录下创建sql映射文件city.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \n\"-//mybatis.org//DTD Mapper 3.0//EN\" \n\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"test\">\n</mapper>\n```\nnamespace ：命名空间，用于隔离sql语句,以及标识mapper。\n\n### 建立mapper.xml\n\n![mapper.xml的位置](http://ww1.sinaimg.cn/mw690/005SWPzyjw1f9h38tw21sj307y01u3yl.jpg)\n\n#### 目标的样子\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \n\"-//mybatis.org//DTD Mapper 3.0//EN\" \n\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"cn.itcast.mybatis.mapper.CityMapper\">\n<sql id=\"query_user_where\">\n\t\t<if test=\"value!=null\">\n\t\t\t\t\tand Name like '%${value}%'\n\t\t</if>\n\t</sql>\n<select id=\"findCityById\" parameterType=\"int\" \n\tresultType=\"City\" >\n\t\tselect * from city where ID = #{id }\n\t</select>\n<select id=\"findCityByName\" parameterType=\"java.lang.String\" \n\tresultType=\"City\"> \t\n\t\tselect * from city \n\t\t<where> \n\t\t\t<include refid=\"query_user_where\"></include>\n\t\t</where> \n\t</select>\n<select id=\"findCityByHashMap\" parameterType=\"hashmap\" resultType=\"City\">\n\t\tselect * from city where ID = #{ID} and Name like '%${Name}%'\n\t</select>\n<insert id=\"insertCity\" parameterType=\"City\" >\n<selectKey keyProperty=\"ID\" order=\"AFTER\" resultType=\"java.lang.Integer\">\n\t\t\tSELECT LAST_INSERT_ID()\n\t\t</selectKey>\n\t\tinsert into city(Name, CountryCode, District, Population) \n\t\tvalue(#{Name}, #{CountryCode}, #{District}, #{Population})\n\t</insert>\n<delete id=\"deleteCity\" parameterType=\"java.lang.Integer\">\n\t\tdelete from city where ID = #{id}\n\t</delete>\n<update id=\"updateCity\" parameterType=\"City\">\n\t\tupdate city set Name=#{Name}, CountryCode=#{CountryCode},\n\t\t District=#{District}, Population=#{Population} where ID=#{ID}\n\t</update>\n```\n\n### 查询\n\n```xml\n<select id=\"findCityById\" parameterType=\"int\" \n\tresultType=\"City\" >\n\t\tselect * from city where ID = #{id }\n\t</select>\n```\n\n* select: 表明当前是查询语句\n\n* id : 语句的标识符,与之后mapper.java的方法名相对应\n\n* parameterType : 指定可接受的参数类型可以是map,po,或者简单类型\n\n* resultType : 返回的参数类型,可以是map,po,或者简单类型\n\n#{}表示一个占位符号，通过#{}可以实现preparedStatement向占位符中设置值，自动进行java类型和jdbc类型转换，#{}可以有效防止sql注入。 #{}可以接收简单类型值或pojo属性值。 如果parameterType传输单个简单类型值，#{}括号中可以是value或其它名称。\n${}表示拼接sql串，通过${}可以将parameterType 传入的内容拼接在sql中且不进行jdbc类型转换， ${}可以接收简单类型值或pojo属性值，如果parameterType传输单个简单类型值，${}括号中只能是value。\n\n例\n\n```xml\n<select id=\"findCityByHashMap\" parameterType=\"hashmap\" resultType=\"City\">\n\t\tselect * from city where ID = #{ID} and Name like '%${Name}%'\n\t</select>\n```\n\n此时ID与Name代表的就是map中的不同元素\n\n### sql片段\n\n```xml\n<sql id=\"query_user_where\">\n                <if test=\"value!=null\">\n                                        and Name like '%${value}%'\n                </if>\n        </sql>\n<select id=\"findCityByName\" parameterType=\"java.lang.String\" \n\tresultType=\"City\"> \t\n\t\tselect * from city \n\t\t<where> \n\t\t\t<include refid=\"query_user_where\"></include>\n\t\t</where> \n\t</select>\n```\nsql中能封装sql语句,其他的语句能够通过引用id来使用\n定义sql片段\nid：sql片段的唯一标识 \n经验：是基于单表来定义sql片段，这样话这个sql片段可重用性才高\n在sql片段中不要包含where\n使用where之后第一个and自动去除\n引用sql片段的Id，如果refid指定的id不在本mapper文件中，需要前边加namespace\nif 中的 test 相当于判断语句,先执行判断\n\n### 添加\n\n```xml\n<insert id=\"insertCity\" parameterType=\"City\" >\n\t\tinsert into city(Name, CountryCode, District, Population) \n\t\tvalue(#{Name}, #{CountryCode}, #{District}, #{Population})\n</insert>\n```\n\n...感觉没什么好讲的,就是普通的sql语句,如果此时写上\"resultType = Intege\", 当插入成功的时候就返回1,失败的时候就返回0\n\n但是如果数据库设计主键是自增的,那么如何得知插入后对应的主键是多少\n```xml\n<insert id=\"insertCity\" parameterType=\"City\" >\n<selectKey keyProperty=\"ID\" order=\"AFTER\" resultType=\"java.lang.Integer\">\n\t\t\tSELECT LAST_INSERT_ID()\n\t\t</selectKey>\ninsert into city(Name, CountryCode, District, Population) \n\t\tvalue(#{Name}, #{CountryCode}, #{District}, #{Population})\n</insert>\n```\nkeyProperty:返回的主键存储在pojo中的哪个属性\norder：selectKey的执行顺序，是相对与insert语句来说，由于mysql的自增原理执行完insert语句之后才将主键生成，所以这里selectKey的执行顺序为after\nresultType:返回的主键是什么类型\nLAST_INSERT_ID():是mysql的函数，返回auto_increment自增列新记录id值。\n\n如果使用uuid实现主键\n```xml\n<insert id=\"insertCity\" parameterType=\"City\" >\n<selectKey keyProperty=\"ID\" order=\"BEFORE\" resultType=\"java.lang.String\">\n                        SELECT uuid()\n                </selectKey>\ninsert into city(Name, CountryCode, District, Population)\n                value(#{Name}, #{CountryCode}, #{District}, #{Population})\n</insert>\n```\n以上两种方法均建立在数据库是mysql的基础上\n\n### 删除\n\n```xml\n<delete id=\"deleteCity\" parameterType=\"java.lang.Integer\">\n\t\tdelete from city where ID = #{id}\n\t</delete>\n```\n\n...感觉还是相当简单,,,极易看懂\n\n### 修改\n\n```xml\n<update id=\"updateCity\" parameterType=\"City\">\n\t\tupdate city set Name=#{Name}, CountryCode=#{CountryCode},\n\t\t District=#{District}, Population=#{Population} where ID=#{ID}\n\t</update>\n```\n\n与mysql语法没什么区别\n\n### 编写mapper.java\n\n```java\n//mapper接口,相当于dao接口， 用户管理\npublic interface CityMapper {\n\t//根据ID查询城市的信息\n\tpublic City findCityById(int ID) throws Exception;\n\t\n\t//根据姓名查询城市信息\n\tpublic List<City> findCityByName(String Name)throws Exception;\n\t\n\t//添加城市信息\n\tpublic void insertCity(City city)throws Exception;\n\t\n\t//删除城市信息\n\tpublic void deleteCity(int ID) throws Exception;\n\n\t//修改城市信息\n\tpublic void updateCity(City city);\n}\n```\n\n函数名对应的就是xml文件中的id\n\n返回值对应的是resultType\n\n参数对应的是parammeterType\n\n如果返回值或者参数不止一个,对应的就使用数组传递或者接收;如果只有一个,就使用本来类型进行传递或者接收\n\n写到这里就能进行程序的测试了\n\n### sqlMapConfig.xml中引入\n\n```xml\n\t\t</dataSource>\n\t\t</environment>\n\t</environments>\n<mappers>\n<mapper resource=\"sqlmap/City.xml\"/>\n<package name=\"cn.itcast.mybatis.mapper\"/>\n\t</mappers>\n</configuration>\n```\n通过mapper接口加载映射文件\n遵循一些规范：需要将mapper接口类名和mapper.xml映射文件名称保持一致，\n且在一个目录中 \n\n### 测试\n\n在package exployer中选中mapper.java,右键new(新建) -> other(其他)\n![新建测试代码](http://ww2.sinaimg.cn/mw690/005SWPzyjw1f9hbyv6vu4j30g009n0tf.jpg)\n\n![设置测试代码位置以及开始方法](http://ww3.sinaimg.cn/mw690/005SWPzyjw1f9hc3e8v2gj30k10jwq6o.jpg)\n\n![设置测试方法](http://ww3.sinaimg.cn/mw690/005SWPzyjw1f9hc3izq9uj30jh0jvgny.jpg)\n\n![生成测试代码](http://ww4.sinaimg.cn/mw690/005SWPzyjw1f9hc3y6w7cj30dn0bzgn4.jpg)\n\n重写setUp方法,定义全局变量sqlSessionFactory\n```java\npublic class CityMapperTest {\n\tprivate SqlSessionFactory sqlSessionFactory;\n\t@Before\n\tpublic void setUp() throws Exception {\n\t\t//mybatis配置文件\n\t\t\t\tString resource = \"SqlMapConfig.xml\";\n\t\t\t\t//得到配置文件流\n\t\t\t\tInputStream inputStream=Resources.getResourceAsStream(resource);\n\t\t\t\t//创建会话工厂，传入mybatis的配置文件信息\n\t\t\t\tthis.sqlSessionFactory = new SqlSessionFactoryBuilder().\n\t\t\t\t\t\t\t\tbuild(inputStream);\n\t}\n```\n\nsqlSessionFactory是一个工厂方法,能用于创建数据库会话,数据库会话中能够得到mapper对象\n\n#### 查询\n\n```Java\n@Test\n\tpublic void testFindCityById() throws Exception {\n\t\tSqlSession sqlSession = sqlSessionFactory.openSession();\n\t\t\n\t\t//创建CityMapper对象，mybatis自动生成mapper代理对象\n\t\tCityMapper cityMapper = sqlSession.getMapper(CityMapper.class);\n\t\t\n\t\t//调用CityMapper方法\n\t\tCity city = cityMapper.findCityById(1);\n\t\t\n\t\tsqlSession.close();\n\t\t\n\t\tSystem.out.println(city);\n\t}\n```\n最后要关闭sqlsession会话\n此时返回的是一个po\n\n```java\n@Test\n\tpublic void testFindCityByName() throws Exception{\n\t\t\n\t\tSqlSession sqlSession = sqlSessionFactory.openSession();\n\t\t\n\t\t//创建CityMapper对象，mybatis自动生成mapper代理对象\n\t\tCityMapper cityMapper = sqlSession.getMapper(CityMapper.class);\n\t\t\n\t\t//调用CityMapper方法\n\t\tList<City> list = cityMapper.findCityByName(\"KIK\");\n\t\t\n\t\tsqlSession.close();\n\t\t\n\t\tSystem.out.println(list);\n\t}\n```\n\n此时返回的是一个list\n\n##### selectOne和selectList\n\n动态代理对象调用sqlSession.selectOne()和sqlSession.selectList()是根据mapper接口方法的返回值决定，如果返回list则调用selectList方法，如果返回单个对象则调用selectOne方法\n#### 添加\n\n```java\n@Test\n\tpublic void testInsertCity() throws Exception{\n\t\tSqlSession sqlSession = sqlSessionFactory.openSession();\n\t\t\n\t\tCity city = new City();\n\t\tcity.setCountryCode(\"HHH\");\n\t\tcity.setName(\"WHH\");\n\t\tcity.setDistrict(\"KQS\");\n\t\tcity.setPopulation(13);\n\t\t//创建CityMapper对象，mybatis自动生成mapper代理对象\n\t\tCityMapper cityMapper = sqlSession.getMapper(CityMapper.class);\n\t\t\n\t\t//调用CityMapper方法\n\t\tcityMapper.insertCity(city);\n\t\t\n\t\tsqlSession.close();\n\t\t\n\t\tSystem.out.println();\n\t}\n```\n\n#### 删除\n\n```java\n@Test\n\tpublic void testDeleteCity() throws Exception{\n\t\tSqlSession sqlSession = sqlSessionFactory.openSession();\n\t\t\n\t\t//创建CityMapper对象，mybatis自动生成mapper代理对象\n\t\tCityMapper cityMapper = sqlSession.getMapper(CityMapper.class);\n\t\t\n\t\t//调用CityMapper方法\n\t\tcityMapper.deleteCity(4084);;\n\t\t\n\t\tsqlSession.close();\n\t\t\n\t\tSystem.out.println();\n\t}\n```\n\n#### 修改\n\n```java\n@Test\n\tpublic void testUpdateCity(){\n\t\tSqlSession sqlSession = sqlSessionFactory.openSession();\n\t\t\n\t\t//创建CityMapper对象，mybatis自动生成mapper代理对象\n\t\tCityMapper cityMapper = sqlSession.getMapper(CityMapper.class);\n\t\t\n\t\t//调用CityMapper方法\n\t\tCity city2 = new City();\n\t\tcity2.setCountryCode(\"HHH\");\n\t\tcity2.setName(\"WHH\");\n\t\tcity2.setDistrict(\"KQS\");\n\t\tcity2.setPopulation(13);\n\t\tcity2.setID(1);\n\t\tcityMapper.updateCity(city2);\n\t\tsqlSession.close();\n\t\t\n\t}\n```\n\n### 自动生成(mabatis逆向工程)\n\n当你懒得写mapper的时候.....\nmapper.xml与mapper.java都可以自动生成.....\n\n![自动生成mapper的java工程结构](http://ww3.sinaimg.cn/mw690/005SWPzyjw1f9hcvjjfi7j308h0893zm.jpg)\n\n\n修改generatorConfig.xml \n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE generatorConfiguration\n  PUBLIC \"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\">\n\n<generatorConfiguration>\n\t<context id=\"testTables\" targetRuntime=\"MyBatis3\">\n\t\t<commentGenerator>\n\t\t\t<!-- 是否去除自动生成的注释 true：是 ： false:否 -->\n\t\t\t<property name=\"suppressAllComments\" value=\"true\" />\n\t\t</commentGenerator>\n\t\t<!--数据库连接的信息：驱动类、连接地址、用户名、密码 -->\n\t\t<jdbcConnection driverClass=\"com.mysql.jdbc.Driver\"\n\t\t\tconnectionURL=\"jdbc:mysql://localhost:3306/world\" userId=\"root\"\n\t\t\tpassword=\"123\">\n\t\t</jdbcConnection>\n\t\t<!-- <jdbcConnection driverClass=\"oracle.jdbc.OracleDriver\"\n\t\t\tconnectionURL=\"jdbc:oracle:thin:@127.0.0.1:1521:yycg\" \n\t\t\tuserId=\"yycg\"\n\t\t\tpassword=\"yycg\">\n\t\t</jdbcConnection> -->\n\n\t\t<!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和 \n\t\t\tNUMERIC 类型解析为java.math.BigDecimal -->\n\t\t<javaTypeResolver>\n\t\t\t<property name=\"forceBigDecimals\" value=\"false\" />\n\t\t</javaTypeResolver>\n\n\t\t<!-- targetProject:生成PO类的位置 -->\n\t\t<javaModelGenerator targetPackage=\"po\"\n\t\t\ttargetProject=\"./src\">\n\t\t\t<!-- enableSubPackages:是否让schema作为包的后缀 -->\n\t\t\t<property name=\"enableSubPackages\" value=\"false\" />\n\t\t\t<!-- 从数据库返回的值被清理前后的空格 -->\n\t\t\t<property name=\"trimStrings\" value=\"true\" />\n\t\t</javaModelGenerator>\n        <!-- targetProject:mapper映射文件生成的位置 -->\n\t\t<sqlMapGenerator targetPackage=\"mapper\" \n\t\t\ttargetProject=\"./src\">\n\t\t\t<!-- enableSubPackages:是否让schema作为包的后缀 -->\n\t\t\t<property name=\"enableSubPackages\" value=\"false\" />\n\t\t</sqlMapGenerator>\n\t\t<!-- targetPackage：mapper接口生成的位置 -->\n\t\t<javaClientGenerator type=\"XMLMAPPER\"\n\t\t\ttargetPackage=\"mapper\" \n\t\t\ttargetProject=\"./src\">\n\t\t\t<!-- enableSubPackages:是否让schema作为包的后缀 -->\n\t\t\t<property name=\"enableSubPackages\" value=\"false\" />\n\t\t</javaClientGenerator>\n\t\t<!-- 指定数据库表 -->\n\t\t<table tableName=\"city\"></table>\n\t\t<!-- <table schema=\"\" tableName=\"sys_user\"></table>\n\t\t<table schema=\"\" tableName=\"sys_role\"></table>\n\t\t<table schema=\"\" tableName=\"sys_permission\"></table>\n\t\t<table schema=\"\" tableName=\"sys_user_role\"></table>\n\t\t<table schema=\"\" tableName=\"sys_role_permission\"></table> -->\n\t\t\n\t\t<!-- 有些表的字段需要指定java类型\n\t\t <table schema=\"\" tableName=\"\">\n\t\t\t<columnOverride column=\"\" javaType=\"\" />\n\t\t</table> -->\n\t</context>\n</generatorConfiguration>\n\n```\n\n生成之后记得点击刷新,生成的mapper.xml与mapper.java就会显示在项目目录下了\n./src只针对linux系统,目录之间是/\nwindows是.\\src,目录之间是\\\n\n![生成之后的mapper.xml与mapper.java](http://ww2.sinaimg.cn/mw690/005SWPzyjw1f9hdaxga61j309e0brdhn.jpg)\n\n然后就可以复制黏贴了,注意,在哪里生成的必须贴在同样的相对目录下面,比如在./src下生成的,也必须拷贝到./src下,而不能在./src/map下\n\n使用例子\n查询\n```Java\nSignExample example = new SignExample();\nSignExample.Criteria criteria = example.createCriteria();\ncriteria.andSigPerIdEqualTo(sigPerId);\nreturn (Sign) mapper.selectByExample(example);\n```\n计算\n```java\nSignExample example = new SignExample();\nSignExample.Criteria criteria = example.createCriteria();\ncriteria.andSigAcIdEqualTo(acId);\nreturn mapper.countByExample(example);\n```\n更新\n```java\nreturn mapper.updateByPrimaryKeySelective(Sign);\n```\n删除\n```java\nmapper.deleteByPrimaryKey(sign.getSigId());\n```\n添加\n```java\nreturn mapper.insertSelective(Sign);\n```\n但是遇到联表查询的情况,仍然需要自己编写mapper\n\n### resultMap\n\nresultType可以指定pojo将查询结果映射为pojo，但需要pojo的属性名和sql查询的列名一致方可映射成功。\n\t如果sql查询字段名和pojo的属性名不一致，可以通过resultMap将字段名和属性名作一个对应关系 ，resultMap实质上还需要将查询结果映射到pojo对象中。\n\tresultMap可以实现将查询结果映射为复杂类型的pojo，比如在查询结果映射对象中包括pojo和list实现一对一查询和一对多查询。\n\nmapper.xml中定义\n```xml\n <resultMap id=\"BaseResultMap\" type=\"po.City\" >\n    <id column=\"ID\" property=\"id\" jdbcType=\"INTEGER\" />\n    <result column=\"Name\" property=\"name\" jdbcType=\"CHAR\" />\n    <result column=\"CountryCode\" property=\"countrycode\" jdbcType=\"CHAR\" />\n    <result column=\"District\" property=\"district\" jdbcType=\"CHAR\" />\n    <result column=\"Population\" property=\"population\" jdbcType=\"INTEGER\" />\n  </resultMap>\n```\n\ncolumn 对应的是数据库查询结果的属性, property对应的是po中的属性\n\n参考文档:http://og7tyqvd1.bkt.clouddn.com/mybatis-mrt-2.2.docx\n\nmybatis逆向工程下载地址:http://og7tyqvd1.bkt.clouddn.com/generatorSqlmapCustom.zip\n","source":"_posts/mybatis.md","raw":"---\ntitle: 一小时快速上手mybatis(Mapper代理开发,mysql数据库)\ndate: 2016-11-04 19:35:14\ntags: \n - Java\n - mysql\n - mybatis\ncategories:\n - 说明书\n---\n\nmybatis 东西确实多,但是如果只讲常用的,那就不多了\n\n<!-- more -->\n\n# MyBatis介绍\n\nMyBatis 本是apache的一个开源项目iBatis, 2010年这个项目由apache software foundation 迁移到了google code，并且改名为MyBatis，实质上Mybatis对ibatis进行一些改进。 \nMyBatis是一个优秀的持久层框架，它对jdbc的操作数据库的过程进行封装，使开发者只需要关注 SQL 本身，而不需要花费精力去处理例如注册驱动、创建connection、创建statement、手动设置参数、结果集检索等jdbc繁杂的过程代码。\nMybatis通过xml或注解的方式将要执行的各种statement（statement、preparedStatemnt、CallableStatement）配置起来，并通过java对象和statement中的sql进行映射生成最终执行的sql语句，最后由mybatis框架执行sql并将结果映射成java对象并返回。\n\n# Mybatis架构\n\n![mybatis架构](http://ww1.sinaimg.cn/mw690/005SWPzyjw1f9gephyn2cj30mw0d3q5v.jpg)\n\n* mybatis配置\nSqlMapConfig.xml，此文件作为mybatis的全局配置文件，配置了mybatis的运行环境等信息。\nmapper.xml文件即sql映射文件，文件中配置了操作数据库的sql语句。此文件需要在SqlMapConfig.xml中加载。\n\n* 通过mybatis环境等配置信息构造SqlSessionFactory即会话工厂\n* 由会话工厂创建sqlSession即会话，操作数据库需要通过sqlSession进行。\n* mybatis底层自定义了Executor执行器接口操作数据库，Executor接口有两个实现，一个是基本执行器、一个是缓存执行器。\n* Mapped Statement也是mybatis一个底层封装对象，它包装了mybatis配置信息及sql映射信息等。mapper.xml文件中一个sql对应一个Mapped Statement对象，sql的id即是Mapped statement的id。\n* Mapped Statement对sql执行输入参数进行定义，包括HashMap、基本类型、pojo，Executor通过Mapped Statement在执行sql前将输入的java对象映射至sql中，输入参数映射就是jdbc编程中对preparedStatement设置参数。\n* Mapped Statement对sql执行输出结果进行定义，包括HashMap、基本类型、pojo，Executor通过Mapped Statement在执行sql后将输出结果映射至java对象中，输出结果映射过程相当于jdbc编程中对结果的解析处理过程。\n\n# Mybatis下载\n\nmybaits的代码由github.com管理，地址：https://github.com/mybatis/mybatis-3/releases\n![mybatis包结构](http://ww4.sinaimg.cn/mw690/005SWPzyjw1f9gf47l6mjj304o05wt8p.jpg)\nmybatis-3.2.7.jar----mybatis的核心包\nlib----mybatis的依赖包\nmybatis-3.2.7.pdf----mybatis使用手册\n\n# Mybatis 项目搭建\n\n## 导入包\n\n使用eclipse/myeclipse创建java工程,使用最新的jdk\n加入mybatis核心包,依赖包,数据驱动包\n![mybatis依赖包](http://ww1.sinaimg.cn/mw690/005SWPzyjw1f9gfg636dnj3088074jsc.jpg)\n\n## 目标的样子\n\n![mybatis项目最终结构(参考)](http://ww4.sinaimg.cn/mw690/005SWPzyjw1f9gfmhmqw2j309108i3zo.jpg)\n\n## 创建log4j.propertie,在里面加入下面的内容\n\n```properties\n# Global logging configuration\nlog4j.rootLogger=DEBUG, stdout\n# Console output...\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n\n```\n第二行的不同状态会导致控制台的不同输出结果\ndebug ：显示输出信息,报错信息,调试信息\ninfo ：显示(输出信息)\n所以如果设置为info的话,即便出错也不会知道,一般为开发完成的项目设置\n\n## 创建SqlMapConfig.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE configuration\nPUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n\"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n\t<!-- 和spring整合后 environments配置将废除-->\n\t<environments default=\"development\">\n\t\t<environment id=\"development\">\n\t\t<!-- 使用jdbc事务管理-->\n\t\t\t<transactionManager type=\"JDBC\" />\n\t\t<!-- 数据库连接池-->\n\t\t\t<dataSource type=\"POOLED\">\n\t\t\t\t<property name=\"driver\" value=\"com.mysql.jdbc.Driver\" />\n\t\t\t\t<property name=\"url\" value=\"jdbc:mysql://localhost:3306/world?characterEncoding=utf-8\" />\n\t\t\t\t<property name=\"username\" value=\"root\" />\n\t\t\t\t<property name=\"password\" value=\"123\" />\n\t\t\t</dataSource>\n\t\t</environment>\n\t</environments>\n\t\n</configuration>\n```\n\n但是将数据库信息写死在代码里不是个明智的选择,所以我们可以将它放在文件里,更易于修改\n\n## 创建db.properties\n\n```properties\njdbc.driver=com.mysql.jdbc.Driver\njdbc.url=jdbc:mysql://localhost:3306/mybatis\njdbc.username=root\njdbc.password=mysql\n```\n\n![db.properties](http://ww1.sinaimg.cn/mw690/005SWPzyjw1f9gh2ok2ccj30jf070wfo.jpg)\n\n这样在SqlMapConfig.xml中就可以这样引用\n\n\n```xml\n<properties resource=\"db.properties\"/>\n\t<environments default=\"development\">\n\t\t<environment id=\"development\">\n\t\t\t<transactionManager type=\"JDBC\"/>\n\t\t\t<dataSource type=\"POOLED\">\n\t\t\t\t<property name=\"driver\" value=\"${jdbc.driver}\"/>\n\t\t\t\t<property name=\"url\" value=\"${jdbc.url}\"/>\n\t\t\t\t<property name=\"username\" value=\"${jdbc.username}\"/>\n\t\t\t\t<property name=\"password\" value=\"${jdbc.password}\"/>\n\t\t\t</dataSource>\n\t\t</environment>\n\t</environments>\n```\n\n信息变化的时候改文件就行了\n\n## po类\n\nPo类作为mybatis进行sql映射使用，po类通常与数据库表对应，User.java如下：\n\n```java\npackage cn.itcast.mybatis.po;\n\npublic class City {\n\t//属性名要和数据库表的字段对应\n\tprivate int ID;\n\tprivate String Name;\n\tprivate String CountryCode;\n\tprivate String District;\n\tprivate int Population;\n\tget...\n\tset...\n}\n\n```\n\n## 编写核心程序\n\n### mapper动态代理方式\n\nMapper接口开发方法只需要程序员编写Mapper接口（相当于Dao接口），由Mybatis框架根据接口定义创建接口的动态代理对象，代理对象的方法体同上边Dao接口实现类方法。\nMapper接口开发需要遵循以下规范：\n1、 Mapper.xml文件中的namespace与mapper接口的类路径相同。\n2、 Mapper接口方法名和Mapper.xml中定义的每个statement的id相同 \n3、 Mapper接口方法的输入参数类型和mapper.xml中定义的每个sql 的parameterType的类型相同\n4、 Mapper接口方法的输出参数类型和mapper.xml中定义的每个sql的resultType的类型相同 \n\n### 映射文件\n\nsqlmap目录下创建sql映射文件city.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \n\"-//mybatis.org//DTD Mapper 3.0//EN\" \n\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"test\">\n</mapper>\n```\nnamespace ：命名空间，用于隔离sql语句,以及标识mapper。\n\n### 建立mapper.xml\n\n![mapper.xml的位置](http://ww1.sinaimg.cn/mw690/005SWPzyjw1f9h38tw21sj307y01u3yl.jpg)\n\n#### 目标的样子\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \n\"-//mybatis.org//DTD Mapper 3.0//EN\" \n\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"cn.itcast.mybatis.mapper.CityMapper\">\n<sql id=\"query_user_where\">\n\t\t<if test=\"value!=null\">\n\t\t\t\t\tand Name like '%${value}%'\n\t\t</if>\n\t</sql>\n<select id=\"findCityById\" parameterType=\"int\" \n\tresultType=\"City\" >\n\t\tselect * from city where ID = #{id }\n\t</select>\n<select id=\"findCityByName\" parameterType=\"java.lang.String\" \n\tresultType=\"City\"> \t\n\t\tselect * from city \n\t\t<where> \n\t\t\t<include refid=\"query_user_where\"></include>\n\t\t</where> \n\t</select>\n<select id=\"findCityByHashMap\" parameterType=\"hashmap\" resultType=\"City\">\n\t\tselect * from city where ID = #{ID} and Name like '%${Name}%'\n\t</select>\n<insert id=\"insertCity\" parameterType=\"City\" >\n<selectKey keyProperty=\"ID\" order=\"AFTER\" resultType=\"java.lang.Integer\">\n\t\t\tSELECT LAST_INSERT_ID()\n\t\t</selectKey>\n\t\tinsert into city(Name, CountryCode, District, Population) \n\t\tvalue(#{Name}, #{CountryCode}, #{District}, #{Population})\n\t</insert>\n<delete id=\"deleteCity\" parameterType=\"java.lang.Integer\">\n\t\tdelete from city where ID = #{id}\n\t</delete>\n<update id=\"updateCity\" parameterType=\"City\">\n\t\tupdate city set Name=#{Name}, CountryCode=#{CountryCode},\n\t\t District=#{District}, Population=#{Population} where ID=#{ID}\n\t</update>\n```\n\n### 查询\n\n```xml\n<select id=\"findCityById\" parameterType=\"int\" \n\tresultType=\"City\" >\n\t\tselect * from city where ID = #{id }\n\t</select>\n```\n\n* select: 表明当前是查询语句\n\n* id : 语句的标识符,与之后mapper.java的方法名相对应\n\n* parameterType : 指定可接受的参数类型可以是map,po,或者简单类型\n\n* resultType : 返回的参数类型,可以是map,po,或者简单类型\n\n#{}表示一个占位符号，通过#{}可以实现preparedStatement向占位符中设置值，自动进行java类型和jdbc类型转换，#{}可以有效防止sql注入。 #{}可以接收简单类型值或pojo属性值。 如果parameterType传输单个简单类型值，#{}括号中可以是value或其它名称。\n${}表示拼接sql串，通过${}可以将parameterType 传入的内容拼接在sql中且不进行jdbc类型转换， ${}可以接收简单类型值或pojo属性值，如果parameterType传输单个简单类型值，${}括号中只能是value。\n\n例\n\n```xml\n<select id=\"findCityByHashMap\" parameterType=\"hashmap\" resultType=\"City\">\n\t\tselect * from city where ID = #{ID} and Name like '%${Name}%'\n\t</select>\n```\n\n此时ID与Name代表的就是map中的不同元素\n\n### sql片段\n\n```xml\n<sql id=\"query_user_where\">\n                <if test=\"value!=null\">\n                                        and Name like '%${value}%'\n                </if>\n        </sql>\n<select id=\"findCityByName\" parameterType=\"java.lang.String\" \n\tresultType=\"City\"> \t\n\t\tselect * from city \n\t\t<where> \n\t\t\t<include refid=\"query_user_where\"></include>\n\t\t</where> \n\t</select>\n```\nsql中能封装sql语句,其他的语句能够通过引用id来使用\n定义sql片段\nid：sql片段的唯一标识 \n经验：是基于单表来定义sql片段，这样话这个sql片段可重用性才高\n在sql片段中不要包含where\n使用where之后第一个and自动去除\n引用sql片段的Id，如果refid指定的id不在本mapper文件中，需要前边加namespace\nif 中的 test 相当于判断语句,先执行判断\n\n### 添加\n\n```xml\n<insert id=\"insertCity\" parameterType=\"City\" >\n\t\tinsert into city(Name, CountryCode, District, Population) \n\t\tvalue(#{Name}, #{CountryCode}, #{District}, #{Population})\n</insert>\n```\n\n...感觉没什么好讲的,就是普通的sql语句,如果此时写上\"resultType = Intege\", 当插入成功的时候就返回1,失败的时候就返回0\n\n但是如果数据库设计主键是自增的,那么如何得知插入后对应的主键是多少\n```xml\n<insert id=\"insertCity\" parameterType=\"City\" >\n<selectKey keyProperty=\"ID\" order=\"AFTER\" resultType=\"java.lang.Integer\">\n\t\t\tSELECT LAST_INSERT_ID()\n\t\t</selectKey>\ninsert into city(Name, CountryCode, District, Population) \n\t\tvalue(#{Name}, #{CountryCode}, #{District}, #{Population})\n</insert>\n```\nkeyProperty:返回的主键存储在pojo中的哪个属性\norder：selectKey的执行顺序，是相对与insert语句来说，由于mysql的自增原理执行完insert语句之后才将主键生成，所以这里selectKey的执行顺序为after\nresultType:返回的主键是什么类型\nLAST_INSERT_ID():是mysql的函数，返回auto_increment自增列新记录id值。\n\n如果使用uuid实现主键\n```xml\n<insert id=\"insertCity\" parameterType=\"City\" >\n<selectKey keyProperty=\"ID\" order=\"BEFORE\" resultType=\"java.lang.String\">\n                        SELECT uuid()\n                </selectKey>\ninsert into city(Name, CountryCode, District, Population)\n                value(#{Name}, #{CountryCode}, #{District}, #{Population})\n</insert>\n```\n以上两种方法均建立在数据库是mysql的基础上\n\n### 删除\n\n```xml\n<delete id=\"deleteCity\" parameterType=\"java.lang.Integer\">\n\t\tdelete from city where ID = #{id}\n\t</delete>\n```\n\n...感觉还是相当简单,,,极易看懂\n\n### 修改\n\n```xml\n<update id=\"updateCity\" parameterType=\"City\">\n\t\tupdate city set Name=#{Name}, CountryCode=#{CountryCode},\n\t\t District=#{District}, Population=#{Population} where ID=#{ID}\n\t</update>\n```\n\n与mysql语法没什么区别\n\n### 编写mapper.java\n\n```java\n//mapper接口,相当于dao接口， 用户管理\npublic interface CityMapper {\n\t//根据ID查询城市的信息\n\tpublic City findCityById(int ID) throws Exception;\n\t\n\t//根据姓名查询城市信息\n\tpublic List<City> findCityByName(String Name)throws Exception;\n\t\n\t//添加城市信息\n\tpublic void insertCity(City city)throws Exception;\n\t\n\t//删除城市信息\n\tpublic void deleteCity(int ID) throws Exception;\n\n\t//修改城市信息\n\tpublic void updateCity(City city);\n}\n```\n\n函数名对应的就是xml文件中的id\n\n返回值对应的是resultType\n\n参数对应的是parammeterType\n\n如果返回值或者参数不止一个,对应的就使用数组传递或者接收;如果只有一个,就使用本来类型进行传递或者接收\n\n写到这里就能进行程序的测试了\n\n### sqlMapConfig.xml中引入\n\n```xml\n\t\t</dataSource>\n\t\t</environment>\n\t</environments>\n<mappers>\n<mapper resource=\"sqlmap/City.xml\"/>\n<package name=\"cn.itcast.mybatis.mapper\"/>\n\t</mappers>\n</configuration>\n```\n通过mapper接口加载映射文件\n遵循一些规范：需要将mapper接口类名和mapper.xml映射文件名称保持一致，\n且在一个目录中 \n\n### 测试\n\n在package exployer中选中mapper.java,右键new(新建) -> other(其他)\n![新建测试代码](http://ww2.sinaimg.cn/mw690/005SWPzyjw1f9hbyv6vu4j30g009n0tf.jpg)\n\n![设置测试代码位置以及开始方法](http://ww3.sinaimg.cn/mw690/005SWPzyjw1f9hc3e8v2gj30k10jwq6o.jpg)\n\n![设置测试方法](http://ww3.sinaimg.cn/mw690/005SWPzyjw1f9hc3izq9uj30jh0jvgny.jpg)\n\n![生成测试代码](http://ww4.sinaimg.cn/mw690/005SWPzyjw1f9hc3y6w7cj30dn0bzgn4.jpg)\n\n重写setUp方法,定义全局变量sqlSessionFactory\n```java\npublic class CityMapperTest {\n\tprivate SqlSessionFactory sqlSessionFactory;\n\t@Before\n\tpublic void setUp() throws Exception {\n\t\t//mybatis配置文件\n\t\t\t\tString resource = \"SqlMapConfig.xml\";\n\t\t\t\t//得到配置文件流\n\t\t\t\tInputStream inputStream=Resources.getResourceAsStream(resource);\n\t\t\t\t//创建会话工厂，传入mybatis的配置文件信息\n\t\t\t\tthis.sqlSessionFactory = new SqlSessionFactoryBuilder().\n\t\t\t\t\t\t\t\tbuild(inputStream);\n\t}\n```\n\nsqlSessionFactory是一个工厂方法,能用于创建数据库会话,数据库会话中能够得到mapper对象\n\n#### 查询\n\n```Java\n@Test\n\tpublic void testFindCityById() throws Exception {\n\t\tSqlSession sqlSession = sqlSessionFactory.openSession();\n\t\t\n\t\t//创建CityMapper对象，mybatis自动生成mapper代理对象\n\t\tCityMapper cityMapper = sqlSession.getMapper(CityMapper.class);\n\t\t\n\t\t//调用CityMapper方法\n\t\tCity city = cityMapper.findCityById(1);\n\t\t\n\t\tsqlSession.close();\n\t\t\n\t\tSystem.out.println(city);\n\t}\n```\n最后要关闭sqlsession会话\n此时返回的是一个po\n\n```java\n@Test\n\tpublic void testFindCityByName() throws Exception{\n\t\t\n\t\tSqlSession sqlSession = sqlSessionFactory.openSession();\n\t\t\n\t\t//创建CityMapper对象，mybatis自动生成mapper代理对象\n\t\tCityMapper cityMapper = sqlSession.getMapper(CityMapper.class);\n\t\t\n\t\t//调用CityMapper方法\n\t\tList<City> list = cityMapper.findCityByName(\"KIK\");\n\t\t\n\t\tsqlSession.close();\n\t\t\n\t\tSystem.out.println(list);\n\t}\n```\n\n此时返回的是一个list\n\n##### selectOne和selectList\n\n动态代理对象调用sqlSession.selectOne()和sqlSession.selectList()是根据mapper接口方法的返回值决定，如果返回list则调用selectList方法，如果返回单个对象则调用selectOne方法\n#### 添加\n\n```java\n@Test\n\tpublic void testInsertCity() throws Exception{\n\t\tSqlSession sqlSession = sqlSessionFactory.openSession();\n\t\t\n\t\tCity city = new City();\n\t\tcity.setCountryCode(\"HHH\");\n\t\tcity.setName(\"WHH\");\n\t\tcity.setDistrict(\"KQS\");\n\t\tcity.setPopulation(13);\n\t\t//创建CityMapper对象，mybatis自动生成mapper代理对象\n\t\tCityMapper cityMapper = sqlSession.getMapper(CityMapper.class);\n\t\t\n\t\t//调用CityMapper方法\n\t\tcityMapper.insertCity(city);\n\t\t\n\t\tsqlSession.close();\n\t\t\n\t\tSystem.out.println();\n\t}\n```\n\n#### 删除\n\n```java\n@Test\n\tpublic void testDeleteCity() throws Exception{\n\t\tSqlSession sqlSession = sqlSessionFactory.openSession();\n\t\t\n\t\t//创建CityMapper对象，mybatis自动生成mapper代理对象\n\t\tCityMapper cityMapper = sqlSession.getMapper(CityMapper.class);\n\t\t\n\t\t//调用CityMapper方法\n\t\tcityMapper.deleteCity(4084);;\n\t\t\n\t\tsqlSession.close();\n\t\t\n\t\tSystem.out.println();\n\t}\n```\n\n#### 修改\n\n```java\n@Test\n\tpublic void testUpdateCity(){\n\t\tSqlSession sqlSession = sqlSessionFactory.openSession();\n\t\t\n\t\t//创建CityMapper对象，mybatis自动生成mapper代理对象\n\t\tCityMapper cityMapper = sqlSession.getMapper(CityMapper.class);\n\t\t\n\t\t//调用CityMapper方法\n\t\tCity city2 = new City();\n\t\tcity2.setCountryCode(\"HHH\");\n\t\tcity2.setName(\"WHH\");\n\t\tcity2.setDistrict(\"KQS\");\n\t\tcity2.setPopulation(13);\n\t\tcity2.setID(1);\n\t\tcityMapper.updateCity(city2);\n\t\tsqlSession.close();\n\t\t\n\t}\n```\n\n### 自动生成(mabatis逆向工程)\n\n当你懒得写mapper的时候.....\nmapper.xml与mapper.java都可以自动生成.....\n\n![自动生成mapper的java工程结构](http://ww3.sinaimg.cn/mw690/005SWPzyjw1f9hcvjjfi7j308h0893zm.jpg)\n\n\n修改generatorConfig.xml \n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE generatorConfiguration\n  PUBLIC \"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\">\n\n<generatorConfiguration>\n\t<context id=\"testTables\" targetRuntime=\"MyBatis3\">\n\t\t<commentGenerator>\n\t\t\t<!-- 是否去除自动生成的注释 true：是 ： false:否 -->\n\t\t\t<property name=\"suppressAllComments\" value=\"true\" />\n\t\t</commentGenerator>\n\t\t<!--数据库连接的信息：驱动类、连接地址、用户名、密码 -->\n\t\t<jdbcConnection driverClass=\"com.mysql.jdbc.Driver\"\n\t\t\tconnectionURL=\"jdbc:mysql://localhost:3306/world\" userId=\"root\"\n\t\t\tpassword=\"123\">\n\t\t</jdbcConnection>\n\t\t<!-- <jdbcConnection driverClass=\"oracle.jdbc.OracleDriver\"\n\t\t\tconnectionURL=\"jdbc:oracle:thin:@127.0.0.1:1521:yycg\" \n\t\t\tuserId=\"yycg\"\n\t\t\tpassword=\"yycg\">\n\t\t</jdbcConnection> -->\n\n\t\t<!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和 \n\t\t\tNUMERIC 类型解析为java.math.BigDecimal -->\n\t\t<javaTypeResolver>\n\t\t\t<property name=\"forceBigDecimals\" value=\"false\" />\n\t\t</javaTypeResolver>\n\n\t\t<!-- targetProject:生成PO类的位置 -->\n\t\t<javaModelGenerator targetPackage=\"po\"\n\t\t\ttargetProject=\"./src\">\n\t\t\t<!-- enableSubPackages:是否让schema作为包的后缀 -->\n\t\t\t<property name=\"enableSubPackages\" value=\"false\" />\n\t\t\t<!-- 从数据库返回的值被清理前后的空格 -->\n\t\t\t<property name=\"trimStrings\" value=\"true\" />\n\t\t</javaModelGenerator>\n        <!-- targetProject:mapper映射文件生成的位置 -->\n\t\t<sqlMapGenerator targetPackage=\"mapper\" \n\t\t\ttargetProject=\"./src\">\n\t\t\t<!-- enableSubPackages:是否让schema作为包的后缀 -->\n\t\t\t<property name=\"enableSubPackages\" value=\"false\" />\n\t\t</sqlMapGenerator>\n\t\t<!-- targetPackage：mapper接口生成的位置 -->\n\t\t<javaClientGenerator type=\"XMLMAPPER\"\n\t\t\ttargetPackage=\"mapper\" \n\t\t\ttargetProject=\"./src\">\n\t\t\t<!-- enableSubPackages:是否让schema作为包的后缀 -->\n\t\t\t<property name=\"enableSubPackages\" value=\"false\" />\n\t\t</javaClientGenerator>\n\t\t<!-- 指定数据库表 -->\n\t\t<table tableName=\"city\"></table>\n\t\t<!-- <table schema=\"\" tableName=\"sys_user\"></table>\n\t\t<table schema=\"\" tableName=\"sys_role\"></table>\n\t\t<table schema=\"\" tableName=\"sys_permission\"></table>\n\t\t<table schema=\"\" tableName=\"sys_user_role\"></table>\n\t\t<table schema=\"\" tableName=\"sys_role_permission\"></table> -->\n\t\t\n\t\t<!-- 有些表的字段需要指定java类型\n\t\t <table schema=\"\" tableName=\"\">\n\t\t\t<columnOverride column=\"\" javaType=\"\" />\n\t\t</table> -->\n\t</context>\n</generatorConfiguration>\n\n```\n\n生成之后记得点击刷新,生成的mapper.xml与mapper.java就会显示在项目目录下了\n./src只针对linux系统,目录之间是/\nwindows是.\\src,目录之间是\\\n\n![生成之后的mapper.xml与mapper.java](http://ww2.sinaimg.cn/mw690/005SWPzyjw1f9hdaxga61j309e0brdhn.jpg)\n\n然后就可以复制黏贴了,注意,在哪里生成的必须贴在同样的相对目录下面,比如在./src下生成的,也必须拷贝到./src下,而不能在./src/map下\n\n使用例子\n查询\n```Java\nSignExample example = new SignExample();\nSignExample.Criteria criteria = example.createCriteria();\ncriteria.andSigPerIdEqualTo(sigPerId);\nreturn (Sign) mapper.selectByExample(example);\n```\n计算\n```java\nSignExample example = new SignExample();\nSignExample.Criteria criteria = example.createCriteria();\ncriteria.andSigAcIdEqualTo(acId);\nreturn mapper.countByExample(example);\n```\n更新\n```java\nreturn mapper.updateByPrimaryKeySelective(Sign);\n```\n删除\n```java\nmapper.deleteByPrimaryKey(sign.getSigId());\n```\n添加\n```java\nreturn mapper.insertSelective(Sign);\n```\n但是遇到联表查询的情况,仍然需要自己编写mapper\n\n### resultMap\n\nresultType可以指定pojo将查询结果映射为pojo，但需要pojo的属性名和sql查询的列名一致方可映射成功。\n\t如果sql查询字段名和pojo的属性名不一致，可以通过resultMap将字段名和属性名作一个对应关系 ，resultMap实质上还需要将查询结果映射到pojo对象中。\n\tresultMap可以实现将查询结果映射为复杂类型的pojo，比如在查询结果映射对象中包括pojo和list实现一对一查询和一对多查询。\n\nmapper.xml中定义\n```xml\n <resultMap id=\"BaseResultMap\" type=\"po.City\" >\n    <id column=\"ID\" property=\"id\" jdbcType=\"INTEGER\" />\n    <result column=\"Name\" property=\"name\" jdbcType=\"CHAR\" />\n    <result column=\"CountryCode\" property=\"countrycode\" jdbcType=\"CHAR\" />\n    <result column=\"District\" property=\"district\" jdbcType=\"CHAR\" />\n    <result column=\"Population\" property=\"population\" jdbcType=\"INTEGER\" />\n  </resultMap>\n```\n\ncolumn 对应的是数据库查询结果的属性, property对应的是po中的属性\n\n参考文档:http://og7tyqvd1.bkt.clouddn.com/mybatis-mrt-2.2.docx\n\nmybatis逆向工程下载地址:http://og7tyqvd1.bkt.clouddn.com/generatorSqlmapCustom.zip\n","slug":"mybatis","published":1,"updated":"2016-11-07T02:13:35.774Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civ9mvsdd000maz99feslnx2m","content":"<p>mybatis 东西确实多,但是如果只讲常用的,那就不多了</p>\n<a id=\"more\"></a>\n<h1 id=\"MyBatis介绍\"><a href=\"#MyBatis介绍\" class=\"headerlink\" title=\"MyBatis介绍\"></a>MyBatis介绍</h1><p>MyBatis 本是apache的一个开源项目iBatis, 2010年这个项目由apache software foundation 迁移到了google code，并且改名为MyBatis，实质上Mybatis对ibatis进行一些改进。<br>MyBatis是一个优秀的持久层框架，它对jdbc的操作数据库的过程进行封装，使开发者只需要关注 SQL 本身，而不需要花费精力去处理例如注册驱动、创建connection、创建statement、手动设置参数、结果集检索等jdbc繁杂的过程代码。<br>Mybatis通过xml或注解的方式将要执行的各种statement（statement、preparedStatemnt、CallableStatement）配置起来，并通过java对象和statement中的sql进行映射生成最终执行的sql语句，最后由mybatis框架执行sql并将结果映射成java对象并返回。</p>\n<h1 id=\"Mybatis架构\"><a href=\"#Mybatis架构\" class=\"headerlink\" title=\"Mybatis架构\"></a>Mybatis架构</h1><p><img src=\"http://ww1.sinaimg.cn/mw690/005SWPzyjw1f9gephyn2cj30mw0d3q5v.jpg\" alt=\"mybatis架构\"></p>\n<ul>\n<li><p>mybatis配置<br>SqlMapConfig.xml，此文件作为mybatis的全局配置文件，配置了mybatis的运行环境等信息。<br>mapper.xml文件即sql映射文件，文件中配置了操作数据库的sql语句。此文件需要在SqlMapConfig.xml中加载。</p>\n</li>\n<li><p>通过mybatis环境等配置信息构造SqlSessionFactory即会话工厂</p>\n</li>\n<li>由会话工厂创建sqlSession即会话，操作数据库需要通过sqlSession进行。</li>\n<li>mybatis底层自定义了Executor执行器接口操作数据库，Executor接口有两个实现，一个是基本执行器、一个是缓存执行器。</li>\n<li>Mapped Statement也是mybatis一个底层封装对象，它包装了mybatis配置信息及sql映射信息等。mapper.xml文件中一个sql对应一个Mapped Statement对象，sql的id即是Mapped statement的id。</li>\n<li>Mapped Statement对sql执行输入参数进行定义，包括HashMap、基本类型、pojo，Executor通过Mapped Statement在执行sql前将输入的java对象映射至sql中，输入参数映射就是jdbc编程中对preparedStatement设置参数。</li>\n<li>Mapped Statement对sql执行输出结果进行定义，包括HashMap、基本类型、pojo，Executor通过Mapped Statement在执行sql后将输出结果映射至java对象中，输出结果映射过程相当于jdbc编程中对结果的解析处理过程。</li>\n</ul>\n<h1 id=\"Mybatis下载\"><a href=\"#Mybatis下载\" class=\"headerlink\" title=\"Mybatis下载\"></a>Mybatis下载</h1><p>mybaits的代码由github.com管理，地址：<a href=\"https://github.com/mybatis/mybatis-3/releases\" target=\"_blank\" rel=\"external\">https://github.com/mybatis/mybatis-3/releases</a><br><img src=\"http://ww4.sinaimg.cn/mw690/005SWPzyjw1f9gf47l6mjj304o05wt8p.jpg\" alt=\"mybatis包结构\"><br>mybatis-3.2.7.jar—-mybatis的核心包<br>lib—-mybatis的依赖包<br>mybatis-3.2.7.pdf—-mybatis使用手册</p>\n<h1 id=\"Mybatis-项目搭建\"><a href=\"#Mybatis-项目搭建\" class=\"headerlink\" title=\"Mybatis 项目搭建\"></a>Mybatis 项目搭建</h1><h2 id=\"导入包\"><a href=\"#导入包\" class=\"headerlink\" title=\"导入包\"></a>导入包</h2><p>使用eclipse/myeclipse创建java工程,使用最新的jdk<br>加入mybatis核心包,依赖包,数据驱动包<br><img src=\"http://ww1.sinaimg.cn/mw690/005SWPzyjw1f9gfg636dnj3088074jsc.jpg\" alt=\"mybatis依赖包\"></p>\n<h2 id=\"目标的样子\"><a href=\"#目标的样子\" class=\"headerlink\" title=\"目标的样子\"></a>目标的样子</h2><p><img src=\"http://ww4.sinaimg.cn/mw690/005SWPzyjw1f9gfmhmqw2j309108i3zo.jpg\" alt=\"mybatis项目最终结构(参考)\"></p>\n<h2 id=\"创建log4j-propertie-在里面加入下面的内容\"><a href=\"#创建log4j-propertie-在里面加入下面的内容\" class=\"headerlink\" title=\"创建log4j.propertie,在里面加入下面的内容\"></a>创建log4j.propertie,在里面加入下面的内容</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Global logging configuration</div><div class=\"line\">log4j.rootLogger=DEBUG, stdout</div><div class=\"line\"># Console output...</div><div class=\"line\">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</div><div class=\"line\">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</div><div class=\"line\">log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n</div></pre></td></tr></table></figure>\n<p>第二行的不同状态会导致控制台的不同输出结果<br>debug ：显示输出信息,报错信息,调试信息<br>info ：显示(输出信息)<br>所以如果设置为info的话,即便出错也不会知道,一般为开发完成的项目设置</p>\n<h2 id=\"创建SqlMapConfig-xml\"><a href=\"#创建SqlMapConfig-xml\" class=\"headerlink\" title=\"创建SqlMapConfig.xml\"></a>创建SqlMapConfig.xml</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;</div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE configuration</span></div><div class=\"line\">PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"</div><div class=\"line\">\"http://mybatis.org/dtd/mybatis-3-config.dtd\"&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\">\t<span class=\"comment\">&lt;!-- 和spring整合后 environments配置将废除--&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">environments</span> <span class=\"attr\">default</span>=<span class=\"string\">\"development\"</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">environment</span> <span class=\"attr\">id</span>=<span class=\"string\">\"development\"</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 使用jdbc事务管理--&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">transactionManager</span> <span class=\"attr\">type</span>=<span class=\"string\">\"JDBC\"</span> /&gt;</span></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 数据库连接池--&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">dataSource</span> <span class=\"attr\">type</span>=<span class=\"string\">\"POOLED\"</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"driver\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.mysql.jdbc.Driver\"</span> /&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"url\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"jdbc:mysql://localhost:3306/world?characterEncoding=utf-8\"</span> /&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"root\"</span> /&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"123\"</span> /&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">dataSource</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">environment</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">environments</span>&gt;</span></div><div class=\"line\">\t</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>但是将数据库信息写死在代码里不是个明智的选择,所以我们可以将它放在文件里,更易于修改</p>\n<h2 id=\"创建db-properties\"><a href=\"#创建db-properties\" class=\"headerlink\" title=\"创建db.properties\"></a>创建db.properties</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">jdbc.driver=com.mysql.jdbc.Driver</div><div class=\"line\">jdbc.url=jdbc:mysql://localhost:3306/mybatis</div><div class=\"line\">jdbc.username=root</div><div class=\"line\">jdbc.password=mysql</div></pre></td></tr></table></figure>\n<p><img src=\"http://ww1.sinaimg.cn/mw690/005SWPzyjw1f9gh2ok2ccj30jf070wfo.jpg\" alt=\"db.properties\"></p>\n<p>这样在SqlMapConfig.xml中就可以这样引用</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">properties</span> <span class=\"attr\">resource</span>=<span class=\"string\">\"db.properties\"</span>/&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">environments</span> <span class=\"attr\">default</span>=<span class=\"string\">\"development\"</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">environment</span> <span class=\"attr\">id</span>=<span class=\"string\">\"development\"</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">transactionManager</span> <span class=\"attr\">type</span>=<span class=\"string\">\"JDBC\"</span>/&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">dataSource</span> <span class=\"attr\">type</span>=<span class=\"string\">\"POOLED\"</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"driver\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.driver&#125;\"</span>/&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"url\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.url&#125;\"</span>/&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.username&#125;\"</span>/&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.password&#125;\"</span>/&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">dataSource</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">environment</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">environments</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>信息变化的时候改文件就行了</p>\n<h2 id=\"po类\"><a href=\"#po类\" class=\"headerlink\" title=\"po类\"></a>po类</h2><p>Po类作为mybatis进行sql映射使用，po类通常与数据库表对应，User.java如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> cn.itcast.mybatis.po;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">City</span> </span>&#123;</div><div class=\"line\">\t<span class=\"comment\">//属性名要和数据库表的字段对应</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> ID;</div><div class=\"line\">\t<span class=\"keyword\">private</span> String Name;</div><div class=\"line\">\t<span class=\"keyword\">private</span> String CountryCode;</div><div class=\"line\">\t<span class=\"keyword\">private</span> String District;</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> Population;</div><div class=\"line\">\tget...</div><div class=\"line\">\tset...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"编写核心程序\"><a href=\"#编写核心程序\" class=\"headerlink\" title=\"编写核心程序\"></a>编写核心程序</h2><h3 id=\"mapper动态代理方式\"><a href=\"#mapper动态代理方式\" class=\"headerlink\" title=\"mapper动态代理方式\"></a>mapper动态代理方式</h3><p>Mapper接口开发方法只需要程序员编写Mapper接口（相当于Dao接口），由Mybatis框架根据接口定义创建接口的动态代理对象，代理对象的方法体同上边Dao接口实现类方法。<br>Mapper接口开发需要遵循以下规范：<br>1、 Mapper.xml文件中的namespace与mapper接口的类路径相同。<br>2、 Mapper接口方法名和Mapper.xml中定义的每个statement的id相同<br>3、 Mapper接口方法的输入参数类型和mapper.xml中定义的每个sql 的parameterType的类型相同<br>4、 Mapper接口方法的输出参数类型和mapper.xml中定义的每个sql的resultType的类型相同 </p>\n<h3 id=\"映射文件\"><a href=\"#映射文件\" class=\"headerlink\" title=\"映射文件\"></a>映射文件</h3><p>sqlmap目录下创建sql映射文件city.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;</div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE mapper PUBLIC </span></div><div class=\"line\">\"-//mybatis.org//DTD Mapper 3.0//EN\" </div><div class=\"line\">\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">\"test\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>namespace ：命名空间，用于隔离sql语句,以及标识mapper。</p>\n<h3 id=\"建立mapper-xml\"><a href=\"#建立mapper-xml\" class=\"headerlink\" title=\"建立mapper.xml\"></a>建立mapper.xml</h3><p><img src=\"http://ww1.sinaimg.cn/mw690/005SWPzyjw1f9h38tw21sj307y01u3yl.jpg\" alt=\"mapper.xml的位置\"></p>\n<h4 id=\"目标的样子-1\"><a href=\"#目标的样子-1\" class=\"headerlink\" title=\"目标的样子\"></a>目标的样子</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;</div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE mapper PUBLIC </span></div><div class=\"line\">\"-//mybatis.org//DTD Mapper 3.0//EN\" </div><div class=\"line\">\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">\"cn.itcast.mybatis.mapper.CityMapper\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">sql</span> <span class=\"attr\">id</span>=<span class=\"string\">\"query_user_where\"</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">\"value!=null\"</span>&gt;</span></div><div class=\"line\">\t\t\t\t\tand Name like '%$&#123;value&#125;%'</div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">sql</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"findCityById\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"int\"</span> </span></div><div class=\"line\">\t<span class=\"attr\">resultType</span>=<span class=\"string\">\"City\"</span> &gt;</div><div class=\"line\">\t\tselect * from city where ID = #&#123;id &#125;</div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"findCityByName\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"java.lang.String\"</span> </span></div><div class=\"line\">\t<span class=\"attr\">resultType</span>=<span class=\"string\">\"City\"</span>&gt; \t</div><div class=\"line\">\t\tselect * from city </div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">where</span>&gt;</span> </div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">refid</span>=<span class=\"string\">\"query_user_where\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">where</span>&gt;</span> </div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"findCityByHashMap\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"hashmap\"</span> <span class=\"attr\">resultType</span>=<span class=\"string\">\"City\"</span>&gt;</span></div><div class=\"line\">\t\tselect * from city where ID = #&#123;ID&#125; and Name like '%$&#123;Name&#125;%'</div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">\"insertCity\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"City\"</span> &gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">selectKey</span> <span class=\"attr\">keyProperty</span>=<span class=\"string\">\"ID\"</span> <span class=\"attr\">order</span>=<span class=\"string\">\"AFTER\"</span> <span class=\"attr\">resultType</span>=<span class=\"string\">\"java.lang.Integer\"</span>&gt;</span></div><div class=\"line\">\t\t\tSELECT LAST_INSERT_ID()</div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">selectKey</span>&gt;</span></div><div class=\"line\">\t\tinsert into city(Name, CountryCode, District, Population) </div><div class=\"line\">\t\tvalue(#&#123;Name&#125;, #&#123;CountryCode&#125;, #&#123;District&#125;, #&#123;Population&#125;)</div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">delete</span> <span class=\"attr\">id</span>=<span class=\"string\">\"deleteCity\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"java.lang.Integer\"</span>&gt;</span></div><div class=\"line\">\t\tdelete from city where ID = #&#123;id&#125;</div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">delete</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">update</span> <span class=\"attr\">id</span>=<span class=\"string\">\"updateCity\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"City\"</span>&gt;</span></div><div class=\"line\">\t\tupdate city set Name=#&#123;Name&#125;, CountryCode=#&#123;CountryCode&#125;,</div><div class=\"line\">\t\t District=#&#123;District&#125;, Population=#&#123;Population&#125; where ID=#&#123;ID&#125;</div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">update</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"findCityById\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"int\"</span> </span></div><div class=\"line\">\t<span class=\"attr\">resultType</span>=<span class=\"string\">\"City\"</span> &gt;</div><div class=\"line\">\t\tselect * from city where ID = #&#123;id &#125;</div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div></pre></td></tr></table></figure>\n<ul>\n<li><p>select: 表明当前是查询语句</p>\n</li>\n<li><p>id : 语句的标识符,与之后mapper.java的方法名相对应</p>\n</li>\n<li><p>parameterType : 指定可接受的参数类型可以是map,po,或者简单类型</p>\n</li>\n<li><p>resultType : 返回的参数类型,可以是map,po,或者简单类型</p>\n</li>\n</ul>\n<p>#{}表示一个占位符号，通过#{}可以实现preparedStatement向占位符中设置值，自动进行java类型和jdbc类型转换，#{}可以有效防止sql注入。 #{}可以接收简单类型值或pojo属性值。 如果parameterType传输单个简单类型值，#{}括号中可以是value或其它名称。<br>${}表示拼接sql串，通过${}可以将parameterType 传入的内容拼接在sql中且不进行jdbc类型转换， ${}可以接收简单类型值或pojo属性值，如果parameterType传输单个简单类型值，${}括号中只能是value。</p>\n<p>例</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"findCityByHashMap\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"hashmap\"</span> <span class=\"attr\">resultType</span>=<span class=\"string\">\"City\"</span>&gt;</span></div><div class=\"line\">\t\tselect * from city where ID = #&#123;ID&#125; and Name like '%$&#123;Name&#125;%'</div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>此时ID与Name代表的就是map中的不同元素</p>\n<h3 id=\"sql片段\"><a href=\"#sql片段\" class=\"headerlink\" title=\"sql片段\"></a>sql片段</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">sql</span> <span class=\"attr\">id</span>=<span class=\"string\">\"query_user_where\"</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">\"value!=null\"</span>&gt;</span></div><div class=\"line\">                                        and Name like '%$&#123;value&#125;%'</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">sql</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"findCityByName\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"java.lang.String\"</span> </span></div><div class=\"line\">\t<span class=\"attr\">resultType</span>=<span class=\"string\">\"City\"</span>&gt; \t</div><div class=\"line\">\t\tselect * from city </div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">where</span>&gt;</span> </div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">refid</span>=<span class=\"string\">\"query_user_where\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">where</span>&gt;</span> </div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>sql中能封装sql语句,其他的语句能够通过引用id来使用<br>定义sql片段<br>id：sql片段的唯一标识<br>经验：是基于单表来定义sql片段，这样话这个sql片段可重用性才高<br>在sql片段中不要包含where<br>使用where之后第一个and自动去除<br>引用sql片段的Id，如果refid指定的id不在本mapper文件中，需要前边加namespace<br>if 中的 test 相当于判断语句,先执行判断</p>\n<h3 id=\"添加\"><a href=\"#添加\" class=\"headerlink\" title=\"添加\"></a>添加</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">\"insertCity\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"City\"</span> &gt;</span></div><div class=\"line\">\t\tinsert into city(Name, CountryCode, District, Population) </div><div class=\"line\">\t\tvalue(#&#123;Name&#125;, #&#123;CountryCode&#125;, #&#123;District&#125;, #&#123;Population&#125;)</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>…感觉没什么好讲的,就是普通的sql语句,如果此时写上”resultType = Intege”, 当插入成功的时候就返回1,失败的时候就返回0</p>\n<p>但是如果数据库设计主键是自增的,那么如何得知插入后对应的主键是多少<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">\"insertCity\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"City\"</span> &gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">selectKey</span> <span class=\"attr\">keyProperty</span>=<span class=\"string\">\"ID\"</span> <span class=\"attr\">order</span>=<span class=\"string\">\"AFTER\"</span> <span class=\"attr\">resultType</span>=<span class=\"string\">\"java.lang.Integer\"</span>&gt;</span></div><div class=\"line\">\t\t\tSELECT LAST_INSERT_ID()</div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">selectKey</span>&gt;</span></div><div class=\"line\">insert into city(Name, CountryCode, District, Population) </div><div class=\"line\">\t\tvalue(#&#123;Name&#125;, #&#123;CountryCode&#125;, #&#123;District&#125;, #&#123;Population&#125;)</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>keyProperty:返回的主键存储在pojo中的哪个属性<br>order：selectKey的执行顺序，是相对与insert语句来说，由于mysql的自增原理执行完insert语句之后才将主键生成，所以这里selectKey的执行顺序为after<br>resultType:返回的主键是什么类型<br>LAST_INSERT_ID():是mysql的函数，返回auto_increment自增列新记录id值。</p>\n<p>如果使用uuid实现主键<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">\"insertCity\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"City\"</span> &gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">selectKey</span> <span class=\"attr\">keyProperty</span>=<span class=\"string\">\"ID\"</span> <span class=\"attr\">order</span>=<span class=\"string\">\"BEFORE\"</span> <span class=\"attr\">resultType</span>=<span class=\"string\">\"java.lang.String\"</span>&gt;</span></div><div class=\"line\">                        SELECT uuid()</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">selectKey</span>&gt;</span></div><div class=\"line\">insert into city(Name, CountryCode, District, Population)</div><div class=\"line\">                value(#&#123;Name&#125;, #&#123;CountryCode&#125;, #&#123;District&#125;, #&#123;Population&#125;)</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>以上两种方法均建立在数据库是mysql的基础上</p>\n<h3 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">delete</span> <span class=\"attr\">id</span>=<span class=\"string\">\"deleteCity\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"java.lang.Integer\"</span>&gt;</span></div><div class=\"line\">\t\tdelete from city where ID = #&#123;id&#125;</div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">delete</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>…感觉还是相当简单,,,极易看懂</p>\n<h3 id=\"修改\"><a href=\"#修改\" class=\"headerlink\" title=\"修改\"></a>修改</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">update</span> <span class=\"attr\">id</span>=<span class=\"string\">\"updateCity\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"City\"</span>&gt;</span></div><div class=\"line\">\t\tupdate city set Name=#&#123;Name&#125;, CountryCode=#&#123;CountryCode&#125;,</div><div class=\"line\">\t\t District=#&#123;District&#125;, Population=#&#123;Population&#125; where ID=#&#123;ID&#125;</div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">update</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>与mysql语法没什么区别</p>\n<h3 id=\"编写mapper-java\"><a href=\"#编写mapper-java\" class=\"headerlink\" title=\"编写mapper.java\"></a>编写mapper.java</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//mapper接口,相当于dao接口， 用户管理</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">CityMapper</span> </span>&#123;</div><div class=\"line\">\t<span class=\"comment\">//根据ID查询城市的信息</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> City <span class=\"title\">findCityById</span><span class=\"params\">(<span class=\"keyword\">int</span> ID)</span> <span class=\"keyword\">throws</span> Exception</span>;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">//根据姓名查询城市信息</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> List&lt;City&gt; <span class=\"title\">findCityByName</span><span class=\"params\">(String Name)</span><span class=\"keyword\">throws</span> Exception</span>;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">//添加城市信息</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">insertCity</span><span class=\"params\">(City city)</span><span class=\"keyword\">throws</span> Exception</span>;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">//删除城市信息</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">deleteCity</span><span class=\"params\">(<span class=\"keyword\">int</span> ID)</span> <span class=\"keyword\">throws</span> Exception</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//修改城市信息</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateCity</span><span class=\"params\">(City city)</span></span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>函数名对应的就是xml文件中的id</p>\n<p>返回值对应的是resultType</p>\n<p>参数对应的是parammeterType</p>\n<p>如果返回值或者参数不止一个,对应的就使用数组传递或者接收;如果只有一个,就使用本来类型进行传递或者接收</p>\n<p>写到这里就能进行程序的测试了</p>\n<h3 id=\"sqlMapConfig-xml中引入\"><a href=\"#sqlMapConfig-xml中引入\" class=\"headerlink\" title=\"sqlMapConfig.xml中引入\"></a>sqlMapConfig.xml中引入</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dataSource</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">environment</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">environments</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mappers</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">resource</span>=<span class=\"string\">\"sqlmap/City.xml\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">\"cn.itcast.mybatis.mapper\"</span>/&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">mappers</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>通过mapper接口加载映射文件<br>遵循一些规范：需要将mapper接口类名和mapper.xml映射文件名称保持一致，<br>且在一个目录中 </p>\n<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><p>在package exployer中选中mapper.java,右键new(新建) -&gt; other(其他)<br><img src=\"http://ww2.sinaimg.cn/mw690/005SWPzyjw1f9hbyv6vu4j30g009n0tf.jpg\" alt=\"新建测试代码\"></p>\n<p><img src=\"http://ww3.sinaimg.cn/mw690/005SWPzyjw1f9hc3e8v2gj30k10jwq6o.jpg\" alt=\"设置测试代码位置以及开始方法\"></p>\n<p><img src=\"http://ww3.sinaimg.cn/mw690/005SWPzyjw1f9hc3izq9uj30jh0jvgny.jpg\" alt=\"设置测试方法\"></p>\n<p><img src=\"http://ww4.sinaimg.cn/mw690/005SWPzyjw1f9hc3y6w7cj30dn0bzgn4.jpg\" alt=\"生成测试代码\"></p>\n<p>重写setUp方法,定义全局变量sqlSessionFactory<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CityMapperTest</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">private</span> SqlSessionFactory sqlSessionFactory;</div><div class=\"line\">\t<span class=\"meta\">@Before</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUp</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">//mybatis配置文件</span></div><div class=\"line\">\t\t\t\tString resource = <span class=\"string\">\"SqlMapConfig.xml\"</span>;</div><div class=\"line\">\t\t\t\t<span class=\"comment\">//得到配置文件流</span></div><div class=\"line\">\t\t\t\tInputStream inputStream=Resources.getResourceAsStream(resource);</div><div class=\"line\">\t\t\t\t<span class=\"comment\">//创建会话工厂，传入mybatis的配置文件信息</span></div><div class=\"line\">\t\t\t\t<span class=\"keyword\">this</span>.sqlSessionFactory = <span class=\"keyword\">new</span> SqlSessionFactoryBuilder().</div><div class=\"line\">\t\t\t\t\t\t\t\tbuild(inputStream);</div><div class=\"line\">\t&#125;</div></pre></td></tr></table></figure></p>\n<p>sqlSessionFactory是一个工厂方法,能用于创建数据库会话,数据库会话中能够得到mapper对象</p>\n<h4 id=\"查询-1\"><a href=\"#查询-1\" class=\"headerlink\" title=\"查询\"></a>查询</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Test</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testFindCityById</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\tSqlSession sqlSession = sqlSessionFactory.openSession();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">//创建CityMapper对象，mybatis自动生成mapper代理对象</span></div><div class=\"line\">\t\tCityMapper cityMapper = sqlSession.getMapper(CityMapper.class);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">//调用CityMapper方法</span></div><div class=\"line\">\t\tCity city = cityMapper.findCityById(<span class=\"number\">1</span>);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tsqlSession.close();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tSystem.out.println(city);</div><div class=\"line\">\t&#125;</div></pre></td></tr></table></figure>\n<p>最后要关闭sqlsession会话<br>此时返回的是一个po</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Test</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testFindCityByName</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tSqlSession sqlSession = sqlSessionFactory.openSession();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">//创建CityMapper对象，mybatis自动生成mapper代理对象</span></div><div class=\"line\">\t\tCityMapper cityMapper = sqlSession.getMapper(CityMapper.class);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">//调用CityMapper方法</span></div><div class=\"line\">\t\tList&lt;City&gt; list = cityMapper.findCityByName(<span class=\"string\">\"KIK\"</span>);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tsqlSession.close();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tSystem.out.println(list);</div><div class=\"line\">\t&#125;</div></pre></td></tr></table></figure>\n<p>此时返回的是一个list</p>\n<h5 id=\"selectOne和selectList\"><a href=\"#selectOne和selectList\" class=\"headerlink\" title=\"selectOne和selectList\"></a>selectOne和selectList</h5><p>动态代理对象调用sqlSession.selectOne()和sqlSession.selectList()是根据mapper接口方法的返回值决定，如果返回list则调用selectList方法，如果返回单个对象则调用selectOne方法</p>\n<h4 id=\"添加-1\"><a href=\"#添加-1\" class=\"headerlink\" title=\"添加\"></a>添加</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Test</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testInsertCity</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\tSqlSession sqlSession = sqlSessionFactory.openSession();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tCity city = <span class=\"keyword\">new</span> City();</div><div class=\"line\">\t\tcity.setCountryCode(<span class=\"string\">\"HHH\"</span>);</div><div class=\"line\">\t\tcity.setName(<span class=\"string\">\"WHH\"</span>);</div><div class=\"line\">\t\tcity.setDistrict(<span class=\"string\">\"KQS\"</span>);</div><div class=\"line\">\t\tcity.setPopulation(<span class=\"number\">13</span>);</div><div class=\"line\">\t\t<span class=\"comment\">//创建CityMapper对象，mybatis自动生成mapper代理对象</span></div><div class=\"line\">\t\tCityMapper cityMapper = sqlSession.getMapper(CityMapper.class);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">//调用CityMapper方法</span></div><div class=\"line\">\t\tcityMapper.insertCity(city);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tsqlSession.close();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tSystem.out.println();</div><div class=\"line\">\t&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"删除-1\"><a href=\"#删除-1\" class=\"headerlink\" title=\"删除\"></a>删除</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Test</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testDeleteCity</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\tSqlSession sqlSession = sqlSessionFactory.openSession();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">//创建CityMapper对象，mybatis自动生成mapper代理对象</span></div><div class=\"line\">\t\tCityMapper cityMapper = sqlSession.getMapper(CityMapper.class);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">//调用CityMapper方法</span></div><div class=\"line\">\t\tcityMapper.deleteCity(<span class=\"number\">4084</span>);;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tsqlSession.close();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tSystem.out.println();</div><div class=\"line\">\t&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"修改-1\"><a href=\"#修改-1\" class=\"headerlink\" title=\"修改\"></a>修改</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Test</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUpdateCity</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\tSqlSession sqlSession = sqlSessionFactory.openSession();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">//创建CityMapper对象，mybatis自动生成mapper代理对象</span></div><div class=\"line\">\t\tCityMapper cityMapper = sqlSession.getMapper(CityMapper.class);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">//调用CityMapper方法</span></div><div class=\"line\">\t\tCity city2 = <span class=\"keyword\">new</span> City();</div><div class=\"line\">\t\tcity2.setCountryCode(<span class=\"string\">\"HHH\"</span>);</div><div class=\"line\">\t\tcity2.setName(<span class=\"string\">\"WHH\"</span>);</div><div class=\"line\">\t\tcity2.setDistrict(<span class=\"string\">\"KQS\"</span>);</div><div class=\"line\">\t\tcity2.setPopulation(<span class=\"number\">13</span>);</div><div class=\"line\">\t\tcity2.setID(<span class=\"number\">1</span>);</div><div class=\"line\">\t\tcityMapper.updateCity(city2);</div><div class=\"line\">\t\tsqlSession.close();</div><div class=\"line\">\t\t</div><div class=\"line\">\t&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"自动生成-mabatis逆向工程\"><a href=\"#自动生成-mabatis逆向工程\" class=\"headerlink\" title=\"自动生成(mabatis逆向工程)\"></a>自动生成(mabatis逆向工程)</h3><p>当你懒得写mapper的时候…..<br>mapper.xml与mapper.java都可以自动生成…..</p>\n<p><img src=\"http://ww3.sinaimg.cn/mw690/005SWPzyjw1f9hcvjjfi7j308h0893zm.jpg\" alt=\"自动生成mapper的java工程结构\"></p>\n<p>修改generatorConfig.xml </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE generatorConfiguration</span></div><div class=\"line\">  PUBLIC \"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\"</div><div class=\"line\">  \"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\"&gt;</div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">generatorConfiguration</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">context</span> <span class=\"attr\">id</span>=<span class=\"string\">\"testTables\"</span> <span class=\"attr\">targetRuntime</span>=<span class=\"string\">\"MyBatis3\"</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">commentGenerator</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"comment\">&lt;!-- 是否去除自动生成的注释 true：是 ： false:否 --&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"suppressAllComments\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">commentGenerator</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!--数据库连接的信息：驱动类、连接地址、用户名、密码 --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">jdbcConnection</span> <span class=\"attr\">driverClass</span>=<span class=\"string\">\"com.mysql.jdbc.Driver\"</span></span></div><div class=\"line\">\t\t\t<span class=\"attr\">connectionURL</span>=<span class=\"string\">\"jdbc:mysql://localhost:3306/world\"</span> <span class=\"attr\">userId</span>=<span class=\"string\">\"root\"</span></div><div class=\"line\">\t\t\t<span class=\"attr\">password</span>=<span class=\"string\">\"123\"</span>&gt;</div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">jdbcConnection</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- &lt;jdbcConnection driverClass=\"oracle.jdbc.OracleDriver\"</span></div><div class=\"line\">\t\t\tconnectionURL=\"jdbc:oracle:thin:@127.0.0.1:1521:yycg\" </div><div class=\"line\">\t\t\tuserId=\"yycg\"</div><div class=\"line\">\t\t\tpassword=\"yycg\"&gt;</div><div class=\"line\">\t\t&lt;/jdbcConnection&gt; --&gt;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和 </span></div><div class=\"line\">\t\t\tNUMERIC 类型解析为java.math.BigDecimal --&gt;</div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">javaTypeResolver</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"forceBigDecimals\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">javaTypeResolver</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- targetProject:生成PO类的位置 --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">javaModelGenerator</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">\"po\"</span></span></div><div class=\"line\">\t\t\t<span class=\"attr\">targetProject</span>=<span class=\"string\">\"./src\"</span>&gt;</div><div class=\"line\">\t\t\t<span class=\"comment\">&lt;!-- enableSubPackages:是否让schema作为包的后缀 --&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"enableSubPackages\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span></div><div class=\"line\">\t\t\t<span class=\"comment\">&lt;!-- 从数据库返回的值被清理前后的空格 --&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"trimStrings\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">javaModelGenerator</span>&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- targetProject:mapper映射文件生成的位置 --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">sqlMapGenerator</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">\"mapper\"</span> </span></div><div class=\"line\">\t\t\t<span class=\"attr\">targetProject</span>=<span class=\"string\">\"./src\"</span>&gt;</div><div class=\"line\">\t\t\t<span class=\"comment\">&lt;!-- enableSubPackages:是否让schema作为包的后缀 --&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"enableSubPackages\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">sqlMapGenerator</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- targetPackage：mapper接口生成的位置 --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">javaClientGenerator</span> <span class=\"attr\">type</span>=<span class=\"string\">\"XMLMAPPER\"</span></span></div><div class=\"line\">\t\t\t<span class=\"attr\">targetPackage</span>=<span class=\"string\">\"mapper\"</span> </div><div class=\"line\">\t\t\t<span class=\"attr\">targetProject</span>=<span class=\"string\">\"./src\"</span>&gt;</div><div class=\"line\">\t\t\t<span class=\"comment\">&lt;!-- enableSubPackages:是否让schema作为包的后缀 --&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"enableSubPackages\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">javaClientGenerator</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 指定数据库表 --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">tableName</span>=<span class=\"string\">\"city\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- &lt;table schema=\"\" tableName=\"sys_user\"&gt;&lt;/table&gt;</span></div><div class=\"line\">\t\t&lt;table schema=\"\" tableName=\"sys_role\"&gt;&lt;/table&gt;</div><div class=\"line\">\t\t&lt;table schema=\"\" tableName=\"sys_permission\"&gt;&lt;/table&gt;</div><div class=\"line\">\t\t&lt;table schema=\"\" tableName=\"sys_user_role\"&gt;&lt;/table&gt;</div><div class=\"line\">\t\t&lt;table schema=\"\" tableName=\"sys_role_permission\"&gt;&lt;/table&gt; --&gt;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 有些表的字段需要指定java类型</span></div><div class=\"line\">\t\t &lt;table schema=\"\" tableName=\"\"&gt;</div><div class=\"line\">\t\t\t&lt;columnOverride column=\"\" javaType=\"\" /&gt;</div><div class=\"line\">\t\t&lt;/table&gt; --&gt;</div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">context</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">generatorConfiguration</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>生成之后记得点击刷新,生成的mapper.xml与mapper.java就会显示在项目目录下了<br>./src只针对linux系统,目录之间是/<br>windows是.\\src,目录之间是\\</p>\n<p><img src=\"http://ww2.sinaimg.cn/mw690/005SWPzyjw1f9hdaxga61j309e0brdhn.jpg\" alt=\"生成之后的mapper.xml与mapper.java\"></p>\n<p>然后就可以复制黏贴了,注意,在哪里生成的必须贴在同样的相对目录下面,比如在./src下生成的,也必须拷贝到./src下,而不能在./src/map下</p>\n<p>使用例子<br>查询<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">SignExample example = <span class=\"keyword\">new</span> SignExample();</div><div class=\"line\">SignExample.Criteria criteria = example.createCriteria();</div><div class=\"line\">criteria.andSigPerIdEqualTo(sigPerId);</div><div class=\"line\"><span class=\"keyword\">return</span> (Sign) mapper.selectByExample(example);</div></pre></td></tr></table></figure></p>\n<p>计算<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">SignExample example = <span class=\"keyword\">new</span> SignExample();</div><div class=\"line\">SignExample.Criteria criteria = example.createCriteria();</div><div class=\"line\">criteria.andSigAcIdEqualTo(acId);</div><div class=\"line\"><span class=\"keyword\">return</span> mapper.countByExample(example);</div></pre></td></tr></table></figure></p>\n<p>更新<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">return</span> mapper.updateByPrimaryKeySelective(Sign);</div></pre></td></tr></table></figure></p>\n<p>删除<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mapper.deleteByPrimaryKey(sign.getSigId());</div></pre></td></tr></table></figure></p>\n<p>添加<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">return</span> mapper.insertSelective(Sign);</div></pre></td></tr></table></figure></p>\n<p>但是遇到联表查询的情况,仍然需要自己编写mapper</p>\n<h3 id=\"resultMap\"><a href=\"#resultMap\" class=\"headerlink\" title=\"resultMap\"></a>resultMap</h3><p>resultType可以指定pojo将查询结果映射为pojo，但需要pojo的属性名和sql查询的列名一致方可映射成功。<br>    如果sql查询字段名和pojo的属性名不一致，可以通过resultMap将字段名和属性名作一个对应关系 ，resultMap实质上还需要将查询结果映射到pojo对象中。<br>    resultMap可以实现将查询结果映射为复杂类型的pojo，比如在查询结果映射对象中包括pojo和list实现一对一查询和一对多查询。</p>\n<p>mapper.xml中定义<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">\"BaseResultMap\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"po.City\"</span> &gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">column</span>=<span class=\"string\">\"ID\"</span> <span class=\"attr\">property</span>=<span class=\"string\">\"id\"</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">\"INTEGER\"</span> /&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">\"Name\"</span> <span class=\"attr\">property</span>=<span class=\"string\">\"name\"</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">\"CHAR\"</span> /&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">\"CountryCode\"</span> <span class=\"attr\">property</span>=<span class=\"string\">\"countrycode\"</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">\"CHAR\"</span> /&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">\"District\"</span> <span class=\"attr\">property</span>=<span class=\"string\">\"district\"</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">\"CHAR\"</span> /&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">\"Population\"</span> <span class=\"attr\">property</span>=<span class=\"string\">\"population\"</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">\"INTEGER\"</span> /&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>column 对应的是数据库查询结果的属性, property对应的是po中的属性</p>\n<p>参考文档:<a href=\"http://og7tyqvd1.bkt.clouddn.com/mybatis-mrt-2.2.docx\" target=\"_blank\" rel=\"external\">http://og7tyqvd1.bkt.clouddn.com/mybatis-mrt-2.2.docx</a></p>\n<p>mybatis逆向工程下载地址:<a href=\"http://og7tyqvd1.bkt.clouddn.com/generatorSqlmapCustom.zip\" target=\"_blank\" rel=\"external\">http://og7tyqvd1.bkt.clouddn.com/generatorSqlmapCustom.zip</a></p>\n","excerpt":"<p>mybatis 东西确实多,但是如果只讲常用的,那就不多了</p>","more":"<h1 id=\"MyBatis介绍\"><a href=\"#MyBatis介绍\" class=\"headerlink\" title=\"MyBatis介绍\"></a>MyBatis介绍</h1><p>MyBatis 本是apache的一个开源项目iBatis, 2010年这个项目由apache software foundation 迁移到了google code，并且改名为MyBatis，实质上Mybatis对ibatis进行一些改进。<br>MyBatis是一个优秀的持久层框架，它对jdbc的操作数据库的过程进行封装，使开发者只需要关注 SQL 本身，而不需要花费精力去处理例如注册驱动、创建connection、创建statement、手动设置参数、结果集检索等jdbc繁杂的过程代码。<br>Mybatis通过xml或注解的方式将要执行的各种statement（statement、preparedStatemnt、CallableStatement）配置起来，并通过java对象和statement中的sql进行映射生成最终执行的sql语句，最后由mybatis框架执行sql并将结果映射成java对象并返回。</p>\n<h1 id=\"Mybatis架构\"><a href=\"#Mybatis架构\" class=\"headerlink\" title=\"Mybatis架构\"></a>Mybatis架构</h1><p><img src=\"http://ww1.sinaimg.cn/mw690/005SWPzyjw1f9gephyn2cj30mw0d3q5v.jpg\" alt=\"mybatis架构\"></p>\n<ul>\n<li><p>mybatis配置<br>SqlMapConfig.xml，此文件作为mybatis的全局配置文件，配置了mybatis的运行环境等信息。<br>mapper.xml文件即sql映射文件，文件中配置了操作数据库的sql语句。此文件需要在SqlMapConfig.xml中加载。</p>\n</li>\n<li><p>通过mybatis环境等配置信息构造SqlSessionFactory即会话工厂</p>\n</li>\n<li>由会话工厂创建sqlSession即会话，操作数据库需要通过sqlSession进行。</li>\n<li>mybatis底层自定义了Executor执行器接口操作数据库，Executor接口有两个实现，一个是基本执行器、一个是缓存执行器。</li>\n<li>Mapped Statement也是mybatis一个底层封装对象，它包装了mybatis配置信息及sql映射信息等。mapper.xml文件中一个sql对应一个Mapped Statement对象，sql的id即是Mapped statement的id。</li>\n<li>Mapped Statement对sql执行输入参数进行定义，包括HashMap、基本类型、pojo，Executor通过Mapped Statement在执行sql前将输入的java对象映射至sql中，输入参数映射就是jdbc编程中对preparedStatement设置参数。</li>\n<li>Mapped Statement对sql执行输出结果进行定义，包括HashMap、基本类型、pojo，Executor通过Mapped Statement在执行sql后将输出结果映射至java对象中，输出结果映射过程相当于jdbc编程中对结果的解析处理过程。</li>\n</ul>\n<h1 id=\"Mybatis下载\"><a href=\"#Mybatis下载\" class=\"headerlink\" title=\"Mybatis下载\"></a>Mybatis下载</h1><p>mybaits的代码由github.com管理，地址：<a href=\"https://github.com/mybatis/mybatis-3/releases\">https://github.com/mybatis/mybatis-3/releases</a><br><img src=\"http://ww4.sinaimg.cn/mw690/005SWPzyjw1f9gf47l6mjj304o05wt8p.jpg\" alt=\"mybatis包结构\"><br>mybatis-3.2.7.jar—-mybatis的核心包<br>lib—-mybatis的依赖包<br>mybatis-3.2.7.pdf—-mybatis使用手册</p>\n<h1 id=\"Mybatis-项目搭建\"><a href=\"#Mybatis-项目搭建\" class=\"headerlink\" title=\"Mybatis 项目搭建\"></a>Mybatis 项目搭建</h1><h2 id=\"导入包\"><a href=\"#导入包\" class=\"headerlink\" title=\"导入包\"></a>导入包</h2><p>使用eclipse/myeclipse创建java工程,使用最新的jdk<br>加入mybatis核心包,依赖包,数据驱动包<br><img src=\"http://ww1.sinaimg.cn/mw690/005SWPzyjw1f9gfg636dnj3088074jsc.jpg\" alt=\"mybatis依赖包\"></p>\n<h2 id=\"目标的样子\"><a href=\"#目标的样子\" class=\"headerlink\" title=\"目标的样子\"></a>目标的样子</h2><p><img src=\"http://ww4.sinaimg.cn/mw690/005SWPzyjw1f9gfmhmqw2j309108i3zo.jpg\" alt=\"mybatis项目最终结构(参考)\"></p>\n<h2 id=\"创建log4j-propertie-在里面加入下面的内容\"><a href=\"#创建log4j-propertie-在里面加入下面的内容\" class=\"headerlink\" title=\"创建log4j.propertie,在里面加入下面的内容\"></a>创建log4j.propertie,在里面加入下面的内容</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Global logging configuration</div><div class=\"line\">log4j.rootLogger=DEBUG, stdout</div><div class=\"line\"># Console output...</div><div class=\"line\">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</div><div class=\"line\">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</div><div class=\"line\">log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n</div></pre></td></tr></table></figure>\n<p>第二行的不同状态会导致控制台的不同输出结果<br>debug ：显示输出信息,报错信息,调试信息<br>info ：显示(输出信息)<br>所以如果设置为info的话,即便出错也不会知道,一般为开发完成的项目设置</p>\n<h2 id=\"创建SqlMapConfig-xml\"><a href=\"#创建SqlMapConfig-xml\" class=\"headerlink\" title=\"创建SqlMapConfig.xml\"></a>创建SqlMapConfig.xml</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;</div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE configuration</div><div class=\"line\">PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"</div><div class=\"line\">\"http://mybatis.org/dtd/mybatis-3-config.dtd\"&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\">\t<span class=\"comment\">&lt;!-- 和spring整合后 environments配置将废除--&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">environments</span> <span class=\"attr\">default</span>=<span class=\"string\">\"development\"</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">environment</span> <span class=\"attr\">id</span>=<span class=\"string\">\"development\"</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 使用jdbc事务管理--&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">transactionManager</span> <span class=\"attr\">type</span>=<span class=\"string\">\"JDBC\"</span> /&gt;</span></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 数据库连接池--&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">dataSource</span> <span class=\"attr\">type</span>=<span class=\"string\">\"POOLED\"</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"driver\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.mysql.jdbc.Driver\"</span> /&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"url\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"jdbc:mysql://localhost:3306/world?characterEncoding=utf-8\"</span> /&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"root\"</span> /&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"123\"</span> /&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">dataSource</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">environment</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">environments</span>&gt;</span></div><div class=\"line\">\t</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>但是将数据库信息写死在代码里不是个明智的选择,所以我们可以将它放在文件里,更易于修改</p>\n<h2 id=\"创建db-properties\"><a href=\"#创建db-properties\" class=\"headerlink\" title=\"创建db.properties\"></a>创建db.properties</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">jdbc.driver=com.mysql.jdbc.Driver</div><div class=\"line\">jdbc.url=jdbc:mysql://localhost:3306/mybatis</div><div class=\"line\">jdbc.username=root</div><div class=\"line\">jdbc.password=mysql</div></pre></td></tr></table></figure>\n<p><img src=\"http://ww1.sinaimg.cn/mw690/005SWPzyjw1f9gh2ok2ccj30jf070wfo.jpg\" alt=\"db.properties\"></p>\n<p>这样在SqlMapConfig.xml中就可以这样引用</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">properties</span> <span class=\"attr\">resource</span>=<span class=\"string\">\"db.properties\"</span>/&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">environments</span> <span class=\"attr\">default</span>=<span class=\"string\">\"development\"</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">environment</span> <span class=\"attr\">id</span>=<span class=\"string\">\"development\"</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">transactionManager</span> <span class=\"attr\">type</span>=<span class=\"string\">\"JDBC\"</span>/&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">dataSource</span> <span class=\"attr\">type</span>=<span class=\"string\">\"POOLED\"</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"driver\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.driver&#125;\"</span>/&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"url\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.url&#125;\"</span>/&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.username&#125;\"</span>/&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.password&#125;\"</span>/&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">dataSource</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">environment</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">environments</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>信息变化的时候改文件就行了</p>\n<h2 id=\"po类\"><a href=\"#po类\" class=\"headerlink\" title=\"po类\"></a>po类</h2><p>Po类作为mybatis进行sql映射使用，po类通常与数据库表对应，User.java如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> cn.itcast.mybatis.po;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">City</span> </span>&#123;</div><div class=\"line\">\t<span class=\"comment\">//属性名要和数据库表的字段对应</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> ID;</div><div class=\"line\">\t<span class=\"keyword\">private</span> String Name;</div><div class=\"line\">\t<span class=\"keyword\">private</span> String CountryCode;</div><div class=\"line\">\t<span class=\"keyword\">private</span> String District;</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> Population;</div><div class=\"line\">\tget...</div><div class=\"line\">\tset...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"编写核心程序\"><a href=\"#编写核心程序\" class=\"headerlink\" title=\"编写核心程序\"></a>编写核心程序</h2><h3 id=\"mapper动态代理方式\"><a href=\"#mapper动态代理方式\" class=\"headerlink\" title=\"mapper动态代理方式\"></a>mapper动态代理方式</h3><p>Mapper接口开发方法只需要程序员编写Mapper接口（相当于Dao接口），由Mybatis框架根据接口定义创建接口的动态代理对象，代理对象的方法体同上边Dao接口实现类方法。<br>Mapper接口开发需要遵循以下规范：<br>1、 Mapper.xml文件中的namespace与mapper接口的类路径相同。<br>2、 Mapper接口方法名和Mapper.xml中定义的每个statement的id相同<br>3、 Mapper接口方法的输入参数类型和mapper.xml中定义的每个sql 的parameterType的类型相同<br>4、 Mapper接口方法的输出参数类型和mapper.xml中定义的每个sql的resultType的类型相同 </p>\n<h3 id=\"映射文件\"><a href=\"#映射文件\" class=\"headerlink\" title=\"映射文件\"></a>映射文件</h3><p>sqlmap目录下创建sql映射文件city.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;</div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE mapper PUBLIC </div><div class=\"line\">\"-//mybatis.org//DTD Mapper 3.0//EN\" </div><div class=\"line\">\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">\"test\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>namespace ：命名空间，用于隔离sql语句,以及标识mapper。</p>\n<h3 id=\"建立mapper-xml\"><a href=\"#建立mapper-xml\" class=\"headerlink\" title=\"建立mapper.xml\"></a>建立mapper.xml</h3><p><img src=\"http://ww1.sinaimg.cn/mw690/005SWPzyjw1f9h38tw21sj307y01u3yl.jpg\" alt=\"mapper.xml的位置\"></p>\n<h4 id=\"目标的样子-1\"><a href=\"#目标的样子-1\" class=\"headerlink\" title=\"目标的样子\"></a>目标的样子</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;</div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE mapper PUBLIC </div><div class=\"line\">\"-//mybatis.org//DTD Mapper 3.0//EN\" </div><div class=\"line\">\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">\"cn.itcast.mybatis.mapper.CityMapper\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">sql</span> <span class=\"attr\">id</span>=<span class=\"string\">\"query_user_where\"</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">\"value!=null\"</span>&gt;</span></div><div class=\"line\">\t\t\t\t\tand Name like '%$&#123;value&#125;%'</div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">sql</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"findCityById\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"int\"</span> </div><div class=\"line\">\t<span class=\"attr\">resultType</span>=<span class=\"string\">\"City\"</span> &gt;</span></div><div class=\"line\">\t\tselect * from city where ID = #&#123;id &#125;</div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"findCityByName\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"java.lang.String\"</span> </div><div class=\"line\">\t<span class=\"attr\">resultType</span>=<span class=\"string\">\"City\"</span>&gt;</span> \t</div><div class=\"line\">\t\tselect * from city </div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">where</span>&gt;</span> </div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">refid</span>=<span class=\"string\">\"query_user_where\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">where</span>&gt;</span> </div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"findCityByHashMap\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"hashmap\"</span> <span class=\"attr\">resultType</span>=<span class=\"string\">\"City\"</span>&gt;</span></div><div class=\"line\">\t\tselect * from city where ID = #&#123;ID&#125; and Name like '%$&#123;Name&#125;%'</div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">\"insertCity\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"City\"</span> &gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">selectKey</span> <span class=\"attr\">keyProperty</span>=<span class=\"string\">\"ID\"</span> <span class=\"attr\">order</span>=<span class=\"string\">\"AFTER\"</span> <span class=\"attr\">resultType</span>=<span class=\"string\">\"java.lang.Integer\"</span>&gt;</span></div><div class=\"line\">\t\t\tSELECT LAST_INSERT_ID()</div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">selectKey</span>&gt;</span></div><div class=\"line\">\t\tinsert into city(Name, CountryCode, District, Population) </div><div class=\"line\">\t\tvalue(#&#123;Name&#125;, #&#123;CountryCode&#125;, #&#123;District&#125;, #&#123;Population&#125;)</div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">delete</span> <span class=\"attr\">id</span>=<span class=\"string\">\"deleteCity\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"java.lang.Integer\"</span>&gt;</span></div><div class=\"line\">\t\tdelete from city where ID = #&#123;id&#125;</div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">delete</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">update</span> <span class=\"attr\">id</span>=<span class=\"string\">\"updateCity\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"City\"</span>&gt;</span></div><div class=\"line\">\t\tupdate city set Name=#&#123;Name&#125;, CountryCode=#&#123;CountryCode&#125;,</div><div class=\"line\">\t\t District=#&#123;District&#125;, Population=#&#123;Population&#125; where ID=#&#123;ID&#125;</div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">update</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"findCityById\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"int\"</span> </div><div class=\"line\">\t<span class=\"attr\">resultType</span>=<span class=\"string\">\"City\"</span> &gt;</span></div><div class=\"line\">\t\tselect * from city where ID = #&#123;id &#125;</div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div></pre></td></tr></table></figure>\n<ul>\n<li><p>select: 表明当前是查询语句</p>\n</li>\n<li><p>id : 语句的标识符,与之后mapper.java的方法名相对应</p>\n</li>\n<li><p>parameterType : 指定可接受的参数类型可以是map,po,或者简单类型</p>\n</li>\n<li><p>resultType : 返回的参数类型,可以是map,po,或者简单类型</p>\n</li>\n</ul>\n<p>#{}表示一个占位符号，通过#{}可以实现preparedStatement向占位符中设置值，自动进行java类型和jdbc类型转换，#{}可以有效防止sql注入。 #{}可以接收简单类型值或pojo属性值。 如果parameterType传输单个简单类型值，#{}括号中可以是value或其它名称。<br>${}表示拼接sql串，通过${}可以将parameterType 传入的内容拼接在sql中且不进行jdbc类型转换， ${}可以接收简单类型值或pojo属性值，如果parameterType传输单个简单类型值，${}括号中只能是value。</p>\n<p>例</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"findCityByHashMap\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"hashmap\"</span> <span class=\"attr\">resultType</span>=<span class=\"string\">\"City\"</span>&gt;</span></div><div class=\"line\">\t\tselect * from city where ID = #&#123;ID&#125; and Name like '%$&#123;Name&#125;%'</div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>此时ID与Name代表的就是map中的不同元素</p>\n<h3 id=\"sql片段\"><a href=\"#sql片段\" class=\"headerlink\" title=\"sql片段\"></a>sql片段</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">sql</span> <span class=\"attr\">id</span>=<span class=\"string\">\"query_user_where\"</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">\"value!=null\"</span>&gt;</span></div><div class=\"line\">                                        and Name like '%$&#123;value&#125;%'</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">sql</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"findCityByName\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"java.lang.String\"</span> </div><div class=\"line\">\t<span class=\"attr\">resultType</span>=<span class=\"string\">\"City\"</span>&gt;</span> \t</div><div class=\"line\">\t\tselect * from city </div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">where</span>&gt;</span> </div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">refid</span>=<span class=\"string\">\"query_user_where\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">where</span>&gt;</span> </div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>sql中能封装sql语句,其他的语句能够通过引用id来使用<br>定义sql片段<br>id：sql片段的唯一标识<br>经验：是基于单表来定义sql片段，这样话这个sql片段可重用性才高<br>在sql片段中不要包含where<br>使用where之后第一个and自动去除<br>引用sql片段的Id，如果refid指定的id不在本mapper文件中，需要前边加namespace<br>if 中的 test 相当于判断语句,先执行判断</p>\n<h3 id=\"添加\"><a href=\"#添加\" class=\"headerlink\" title=\"添加\"></a>添加</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">\"insertCity\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"City\"</span> &gt;</span></div><div class=\"line\">\t\tinsert into city(Name, CountryCode, District, Population) </div><div class=\"line\">\t\tvalue(#&#123;Name&#125;, #&#123;CountryCode&#125;, #&#123;District&#125;, #&#123;Population&#125;)</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>…感觉没什么好讲的,就是普通的sql语句,如果此时写上”resultType = Intege”, 当插入成功的时候就返回1,失败的时候就返回0</p>\n<p>但是如果数据库设计主键是自增的,那么如何得知插入后对应的主键是多少<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">\"insertCity\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"City\"</span> &gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">selectKey</span> <span class=\"attr\">keyProperty</span>=<span class=\"string\">\"ID\"</span> <span class=\"attr\">order</span>=<span class=\"string\">\"AFTER\"</span> <span class=\"attr\">resultType</span>=<span class=\"string\">\"java.lang.Integer\"</span>&gt;</span></div><div class=\"line\">\t\t\tSELECT LAST_INSERT_ID()</div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">selectKey</span>&gt;</span></div><div class=\"line\">insert into city(Name, CountryCode, District, Population) </div><div class=\"line\">\t\tvalue(#&#123;Name&#125;, #&#123;CountryCode&#125;, #&#123;District&#125;, #&#123;Population&#125;)</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>keyProperty:返回的主键存储在pojo中的哪个属性<br>order：selectKey的执行顺序，是相对与insert语句来说，由于mysql的自增原理执行完insert语句之后才将主键生成，所以这里selectKey的执行顺序为after<br>resultType:返回的主键是什么类型<br>LAST_INSERT_ID():是mysql的函数，返回auto_increment自增列新记录id值。</p>\n<p>如果使用uuid实现主键<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">\"insertCity\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"City\"</span> &gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">selectKey</span> <span class=\"attr\">keyProperty</span>=<span class=\"string\">\"ID\"</span> <span class=\"attr\">order</span>=<span class=\"string\">\"BEFORE\"</span> <span class=\"attr\">resultType</span>=<span class=\"string\">\"java.lang.String\"</span>&gt;</span></div><div class=\"line\">                        SELECT uuid()</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">selectKey</span>&gt;</span></div><div class=\"line\">insert into city(Name, CountryCode, District, Population)</div><div class=\"line\">                value(#&#123;Name&#125;, #&#123;CountryCode&#125;, #&#123;District&#125;, #&#123;Population&#125;)</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>以上两种方法均建立在数据库是mysql的基础上</p>\n<h3 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">delete</span> <span class=\"attr\">id</span>=<span class=\"string\">\"deleteCity\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"java.lang.Integer\"</span>&gt;</span></div><div class=\"line\">\t\tdelete from city where ID = #&#123;id&#125;</div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">delete</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>…感觉还是相当简单,,,极易看懂</p>\n<h3 id=\"修改\"><a href=\"#修改\" class=\"headerlink\" title=\"修改\"></a>修改</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">update</span> <span class=\"attr\">id</span>=<span class=\"string\">\"updateCity\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"City\"</span>&gt;</span></div><div class=\"line\">\t\tupdate city set Name=#&#123;Name&#125;, CountryCode=#&#123;CountryCode&#125;,</div><div class=\"line\">\t\t District=#&#123;District&#125;, Population=#&#123;Population&#125; where ID=#&#123;ID&#125;</div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">update</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>与mysql语法没什么区别</p>\n<h3 id=\"编写mapper-java\"><a href=\"#编写mapper-java\" class=\"headerlink\" title=\"编写mapper.java\"></a>编写mapper.java</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//mapper接口,相当于dao接口， 用户管理</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">CityMapper</span> </span>&#123;</div><div class=\"line\">\t<span class=\"comment\">//根据ID查询城市的信息</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> City <span class=\"title\">findCityById</span><span class=\"params\">(<span class=\"keyword\">int</span> ID)</span> <span class=\"keyword\">throws</span> Exception</span>;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">//根据姓名查询城市信息</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> List&lt;City&gt; <span class=\"title\">findCityByName</span><span class=\"params\">(String Name)</span><span class=\"keyword\">throws</span> Exception</span>;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">//添加城市信息</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">insertCity</span><span class=\"params\">(City city)</span><span class=\"keyword\">throws</span> Exception</span>;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">//删除城市信息</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">deleteCity</span><span class=\"params\">(<span class=\"keyword\">int</span> ID)</span> <span class=\"keyword\">throws</span> Exception</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//修改城市信息</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateCity</span><span class=\"params\">(City city)</span></span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>函数名对应的就是xml文件中的id</p>\n<p>返回值对应的是resultType</p>\n<p>参数对应的是parammeterType</p>\n<p>如果返回值或者参数不止一个,对应的就使用数组传递或者接收;如果只有一个,就使用本来类型进行传递或者接收</p>\n<p>写到这里就能进行程序的测试了</p>\n<h3 id=\"sqlMapConfig-xml中引入\"><a href=\"#sqlMapConfig-xml中引入\" class=\"headerlink\" title=\"sqlMapConfig.xml中引入\"></a>sqlMapConfig.xml中引入</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dataSource</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">environment</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">environments</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mappers</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">resource</span>=<span class=\"string\">\"sqlmap/City.xml\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">\"cn.itcast.mybatis.mapper\"</span>/&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">mappers</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>通过mapper接口加载映射文件<br>遵循一些规范：需要将mapper接口类名和mapper.xml映射文件名称保持一致，<br>且在一个目录中 </p>\n<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><p>在package exployer中选中mapper.java,右键new(新建) -&gt; other(其他)<br><img src=\"http://ww2.sinaimg.cn/mw690/005SWPzyjw1f9hbyv6vu4j30g009n0tf.jpg\" alt=\"新建测试代码\"></p>\n<p><img src=\"http://ww3.sinaimg.cn/mw690/005SWPzyjw1f9hc3e8v2gj30k10jwq6o.jpg\" alt=\"设置测试代码位置以及开始方法\"></p>\n<p><img src=\"http://ww3.sinaimg.cn/mw690/005SWPzyjw1f9hc3izq9uj30jh0jvgny.jpg\" alt=\"设置测试方法\"></p>\n<p><img src=\"http://ww4.sinaimg.cn/mw690/005SWPzyjw1f9hc3y6w7cj30dn0bzgn4.jpg\" alt=\"生成测试代码\"></p>\n<p>重写setUp方法,定义全局变量sqlSessionFactory<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CityMapperTest</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">private</span> SqlSessionFactory sqlSessionFactory;</div><div class=\"line\">\t<span class=\"meta\">@Before</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUp</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">//mybatis配置文件</span></div><div class=\"line\">\t\t\t\tString resource = <span class=\"string\">\"SqlMapConfig.xml\"</span>;</div><div class=\"line\">\t\t\t\t<span class=\"comment\">//得到配置文件流</span></div><div class=\"line\">\t\t\t\tInputStream inputStream=Resources.getResourceAsStream(resource);</div><div class=\"line\">\t\t\t\t<span class=\"comment\">//创建会话工厂，传入mybatis的配置文件信息</span></div><div class=\"line\">\t\t\t\t<span class=\"keyword\">this</span>.sqlSessionFactory = <span class=\"keyword\">new</span> SqlSessionFactoryBuilder().</div><div class=\"line\">\t\t\t\t\t\t\t\tbuild(inputStream);</div><div class=\"line\">\t&#125;</div></pre></td></tr></table></figure></p>\n<p>sqlSessionFactory是一个工厂方法,能用于创建数据库会话,数据库会话中能够得到mapper对象</p>\n<h4 id=\"查询-1\"><a href=\"#查询-1\" class=\"headerlink\" title=\"查询\"></a>查询</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Test</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testFindCityById</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\tSqlSession sqlSession = sqlSessionFactory.openSession();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">//创建CityMapper对象，mybatis自动生成mapper代理对象</span></div><div class=\"line\">\t\tCityMapper cityMapper = sqlSession.getMapper(CityMapper.class);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">//调用CityMapper方法</span></div><div class=\"line\">\t\tCity city = cityMapper.findCityById(<span class=\"number\">1</span>);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tsqlSession.close();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tSystem.out.println(city);</div><div class=\"line\">\t&#125;</div></pre></td></tr></table></figure>\n<p>最后要关闭sqlsession会话<br>此时返回的是一个po</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Test</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testFindCityByName</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tSqlSession sqlSession = sqlSessionFactory.openSession();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">//创建CityMapper对象，mybatis自动生成mapper代理对象</span></div><div class=\"line\">\t\tCityMapper cityMapper = sqlSession.getMapper(CityMapper.class);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">//调用CityMapper方法</span></div><div class=\"line\">\t\tList&lt;City&gt; list = cityMapper.findCityByName(<span class=\"string\">\"KIK\"</span>);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tsqlSession.close();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tSystem.out.println(list);</div><div class=\"line\">\t&#125;</div></pre></td></tr></table></figure>\n<p>此时返回的是一个list</p>\n<h5 id=\"selectOne和selectList\"><a href=\"#selectOne和selectList\" class=\"headerlink\" title=\"selectOne和selectList\"></a>selectOne和selectList</h5><p>动态代理对象调用sqlSession.selectOne()和sqlSession.selectList()是根据mapper接口方法的返回值决定，如果返回list则调用selectList方法，如果返回单个对象则调用selectOne方法</p>\n<h4 id=\"添加-1\"><a href=\"#添加-1\" class=\"headerlink\" title=\"添加\"></a>添加</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Test</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testInsertCity</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\tSqlSession sqlSession = sqlSessionFactory.openSession();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tCity city = <span class=\"keyword\">new</span> City();</div><div class=\"line\">\t\tcity.setCountryCode(<span class=\"string\">\"HHH\"</span>);</div><div class=\"line\">\t\tcity.setName(<span class=\"string\">\"WHH\"</span>);</div><div class=\"line\">\t\tcity.setDistrict(<span class=\"string\">\"KQS\"</span>);</div><div class=\"line\">\t\tcity.setPopulation(<span class=\"number\">13</span>);</div><div class=\"line\">\t\t<span class=\"comment\">//创建CityMapper对象，mybatis自动生成mapper代理对象</span></div><div class=\"line\">\t\tCityMapper cityMapper = sqlSession.getMapper(CityMapper.class);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">//调用CityMapper方法</span></div><div class=\"line\">\t\tcityMapper.insertCity(city);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tsqlSession.close();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tSystem.out.println();</div><div class=\"line\">\t&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"删除-1\"><a href=\"#删除-1\" class=\"headerlink\" title=\"删除\"></a>删除</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Test</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testDeleteCity</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\tSqlSession sqlSession = sqlSessionFactory.openSession();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">//创建CityMapper对象，mybatis自动生成mapper代理对象</span></div><div class=\"line\">\t\tCityMapper cityMapper = sqlSession.getMapper(CityMapper.class);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">//调用CityMapper方法</span></div><div class=\"line\">\t\tcityMapper.deleteCity(<span class=\"number\">4084</span>);;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tsqlSession.close();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tSystem.out.println();</div><div class=\"line\">\t&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"修改-1\"><a href=\"#修改-1\" class=\"headerlink\" title=\"修改\"></a>修改</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Test</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUpdateCity</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\tSqlSession sqlSession = sqlSessionFactory.openSession();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">//创建CityMapper对象，mybatis自动生成mapper代理对象</span></div><div class=\"line\">\t\tCityMapper cityMapper = sqlSession.getMapper(CityMapper.class);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">//调用CityMapper方法</span></div><div class=\"line\">\t\tCity city2 = <span class=\"keyword\">new</span> City();</div><div class=\"line\">\t\tcity2.setCountryCode(<span class=\"string\">\"HHH\"</span>);</div><div class=\"line\">\t\tcity2.setName(<span class=\"string\">\"WHH\"</span>);</div><div class=\"line\">\t\tcity2.setDistrict(<span class=\"string\">\"KQS\"</span>);</div><div class=\"line\">\t\tcity2.setPopulation(<span class=\"number\">13</span>);</div><div class=\"line\">\t\tcity2.setID(<span class=\"number\">1</span>);</div><div class=\"line\">\t\tcityMapper.updateCity(city2);</div><div class=\"line\">\t\tsqlSession.close();</div><div class=\"line\">\t\t</div><div class=\"line\">\t&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"自动生成-mabatis逆向工程\"><a href=\"#自动生成-mabatis逆向工程\" class=\"headerlink\" title=\"自动生成(mabatis逆向工程)\"></a>自动生成(mabatis逆向工程)</h3><p>当你懒得写mapper的时候…..<br>mapper.xml与mapper.java都可以自动生成…..</p>\n<p><img src=\"http://ww3.sinaimg.cn/mw690/005SWPzyjw1f9hcvjjfi7j308h0893zm.jpg\" alt=\"自动生成mapper的java工程结构\"></p>\n<p>修改generatorConfig.xml </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE generatorConfiguration</div><div class=\"line\">  PUBLIC \"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\"</div><div class=\"line\">  \"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\"&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">generatorConfiguration</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">context</span> <span class=\"attr\">id</span>=<span class=\"string\">\"testTables\"</span> <span class=\"attr\">targetRuntime</span>=<span class=\"string\">\"MyBatis3\"</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">commentGenerator</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"comment\">&lt;!-- 是否去除自动生成的注释 true：是 ： false:否 --&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"suppressAllComments\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">commentGenerator</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!--数据库连接的信息：驱动类、连接地址、用户名、密码 --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">jdbcConnection</span> <span class=\"attr\">driverClass</span>=<span class=\"string\">\"com.mysql.jdbc.Driver\"</span></div><div class=\"line\">\t\t\t<span class=\"attr\">connectionURL</span>=<span class=\"string\">\"jdbc:mysql://localhost:3306/world\"</span> <span class=\"attr\">userId</span>=<span class=\"string\">\"root\"</span></div><div class=\"line\">\t\t\t<span class=\"attr\">password</span>=<span class=\"string\">\"123\"</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">jdbcConnection</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- &lt;jdbcConnection driverClass=\"oracle.jdbc.OracleDriver\"</div><div class=\"line\">\t\t\tconnectionURL=\"jdbc:oracle:thin:@127.0.0.1:1521:yycg\" </div><div class=\"line\">\t\t\tuserId=\"yycg\"</div><div class=\"line\">\t\t\tpassword=\"yycg\"&gt;</div><div class=\"line\">\t\t&lt;/jdbcConnection&gt; --&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和 </div><div class=\"line\">\t\t\tNUMERIC 类型解析为java.math.BigDecimal --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">javaTypeResolver</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"forceBigDecimals\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">javaTypeResolver</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- targetProject:生成PO类的位置 --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">javaModelGenerator</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">\"po\"</span></div><div class=\"line\">\t\t\t<span class=\"attr\">targetProject</span>=<span class=\"string\">\"./src\"</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"comment\">&lt;!-- enableSubPackages:是否让schema作为包的后缀 --&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"enableSubPackages\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span></div><div class=\"line\">\t\t\t<span class=\"comment\">&lt;!-- 从数据库返回的值被清理前后的空格 --&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"trimStrings\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">javaModelGenerator</span>&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- targetProject:mapper映射文件生成的位置 --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">sqlMapGenerator</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">\"mapper\"</span> </div><div class=\"line\">\t\t\t<span class=\"attr\">targetProject</span>=<span class=\"string\">\"./src\"</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"comment\">&lt;!-- enableSubPackages:是否让schema作为包的后缀 --&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"enableSubPackages\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">sqlMapGenerator</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- targetPackage：mapper接口生成的位置 --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">javaClientGenerator</span> <span class=\"attr\">type</span>=<span class=\"string\">\"XMLMAPPER\"</span></div><div class=\"line\">\t\t\t<span class=\"attr\">targetPackage</span>=<span class=\"string\">\"mapper\"</span> </div><div class=\"line\">\t\t\t<span class=\"attr\">targetProject</span>=<span class=\"string\">\"./src\"</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"comment\">&lt;!-- enableSubPackages:是否让schema作为包的后缀 --&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"enableSubPackages\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">javaClientGenerator</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 指定数据库表 --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">tableName</span>=<span class=\"string\">\"city\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- &lt;table schema=\"\" tableName=\"sys_user\"&gt;&lt;/table&gt;</div><div class=\"line\">\t\t&lt;table schema=\"\" tableName=\"sys_role\"&gt;&lt;/table&gt;</div><div class=\"line\">\t\t&lt;table schema=\"\" tableName=\"sys_permission\"&gt;&lt;/table&gt;</div><div class=\"line\">\t\t&lt;table schema=\"\" tableName=\"sys_user_role\"&gt;&lt;/table&gt;</div><div class=\"line\">\t\t&lt;table schema=\"\" tableName=\"sys_role_permission\"&gt;&lt;/table&gt; --&gt;</span></div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 有些表的字段需要指定java类型</div><div class=\"line\">\t\t &lt;table schema=\"\" tableName=\"\"&gt;</div><div class=\"line\">\t\t\t&lt;columnOverride column=\"\" javaType=\"\" /&gt;</div><div class=\"line\">\t\t&lt;/table&gt; --&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">context</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">generatorConfiguration</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>生成之后记得点击刷新,生成的mapper.xml与mapper.java就会显示在项目目录下了<br>./src只针对linux系统,目录之间是/<br>windows是.\\src,目录之间是\\</p>\n<p><img src=\"http://ww2.sinaimg.cn/mw690/005SWPzyjw1f9hdaxga61j309e0brdhn.jpg\" alt=\"生成之后的mapper.xml与mapper.java\"></p>\n<p>然后就可以复制黏贴了,注意,在哪里生成的必须贴在同样的相对目录下面,比如在./src下生成的,也必须拷贝到./src下,而不能在./src/map下</p>\n<p>使用例子<br>查询<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">SignExample example = <span class=\"keyword\">new</span> SignExample();</div><div class=\"line\">SignExample.Criteria criteria = example.createCriteria();</div><div class=\"line\">criteria.andSigPerIdEqualTo(sigPerId);</div><div class=\"line\"><span class=\"keyword\">return</span> (Sign) mapper.selectByExample(example);</div></pre></td></tr></table></figure></p>\n<p>计算<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">SignExample example = <span class=\"keyword\">new</span> SignExample();</div><div class=\"line\">SignExample.Criteria criteria = example.createCriteria();</div><div class=\"line\">criteria.andSigAcIdEqualTo(acId);</div><div class=\"line\"><span class=\"keyword\">return</span> mapper.countByExample(example);</div></pre></td></tr></table></figure></p>\n<p>更新<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">return</span> mapper.updateByPrimaryKeySelective(Sign);</div></pre></td></tr></table></figure></p>\n<p>删除<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mapper.deleteByPrimaryKey(sign.getSigId());</div></pre></td></tr></table></figure></p>\n<p>添加<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">return</span> mapper.insertSelective(Sign);</div></pre></td></tr></table></figure></p>\n<p>但是遇到联表查询的情况,仍然需要自己编写mapper</p>\n<h3 id=\"resultMap\"><a href=\"#resultMap\" class=\"headerlink\" title=\"resultMap\"></a>resultMap</h3><p>resultType可以指定pojo将查询结果映射为pojo，但需要pojo的属性名和sql查询的列名一致方可映射成功。<br>    如果sql查询字段名和pojo的属性名不一致，可以通过resultMap将字段名和属性名作一个对应关系 ，resultMap实质上还需要将查询结果映射到pojo对象中。<br>    resultMap可以实现将查询结果映射为复杂类型的pojo，比如在查询结果映射对象中包括pojo和list实现一对一查询和一对多查询。</p>\n<p>mapper.xml中定义<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">\"BaseResultMap\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"po.City\"</span> &gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">column</span>=<span class=\"string\">\"ID\"</span> <span class=\"attr\">property</span>=<span class=\"string\">\"id\"</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">\"INTEGER\"</span> /&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">\"Name\"</span> <span class=\"attr\">property</span>=<span class=\"string\">\"name\"</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">\"CHAR\"</span> /&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">\"CountryCode\"</span> <span class=\"attr\">property</span>=<span class=\"string\">\"countrycode\"</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">\"CHAR\"</span> /&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">\"District\"</span> <span class=\"attr\">property</span>=<span class=\"string\">\"district\"</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">\"CHAR\"</span> /&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">\"Population\"</span> <span class=\"attr\">property</span>=<span class=\"string\">\"population\"</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">\"INTEGER\"</span> /&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>column 对应的是数据库查询结果的属性, property对应的是po中的属性</p>\n<p>参考文档:<a href=\"http://og7tyqvd1.bkt.clouddn.com/mybatis-mrt-2.2.docx\">http://og7tyqvd1.bkt.clouddn.com/mybatis-mrt-2.2.docx</a></p>\n<p>mybatis逆向工程下载地址:<a href=\"http://og7tyqvd1.bkt.clouddn.com/generatorSqlmapCustom.zip\">http://og7tyqvd1.bkt.clouddn.com/generatorSqlmapCustom.zip</a></p>"},{"title":"生态文明概论笔记","date":"2016-10-09T10:17:08.000Z","_content":"话说上次上这门课是在一年前，当时的自己因为项目的事情没能准时来考试，这次还不小心把昨天的第一节课给忘了。。。。今天还是从第二节课开始的。。。\n\n<!-- more -->\n\n# 第二节课\n\n{% blockquote %}\n话说助教都还是同一个人。。。。\n2016生态文明概论QQ群：338902830\n\n## 自然资源的破坏加速了浩劫\n\n石油、天然气等能源有可能在未来一百年内枯竭\n煤炭可能坚持一千年\n工业建立在这些化石燃料的基础上\n\n## 新能源的开发\n\n### 概念：太阳能、风能、地热能、水利能等区别于化石燃料的能源\n\n#### 特点\n\n* 不稳定\n* 有限制（时间、地理）\n\n## 环境污染\n\n### 例子\n\n重工业导致的雾霾、水污染\n。。。。又在宣扬哈尔滨环境好了\n原因\n* 土地好（黑土地），盐碱地、湿地（哈大齐这一段田地）\n* 没有造成特别严重污染的工业\n* 树多（花大钱种的树），话说树木移植不就是必须得带土么。。。。你真的是专家吗。。。\n{% endblockquote %}\n\n# 第三节课\n\n{% blockquote %}\n当代人生面对的环境与健康的十大问题\n党的十七大，提出了生态文明建设的发展目标\n党的十八大，对生态文明做了战略的部署，把生态文明做了新的时代的标志\n“开创中国特色社会主义生态文明的新时代”\n“把生态融入经济政治社会文化当中，形成五位一体的战略格局”\n1949-2049:达到西方中等发达国家的水平\n20世纪60年代，《寂静的春天》标志着世界环境保护的到来\n《我们共同的未来》，可持续发展就是我们的未来\n{% endblockquote %}\n3. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/生态文明概论笔记.md","raw":"---\ntitle: 生态文明概论笔记\ndate: 2016-10-09 18:17:08\ntags: 人文社科\ncategories:  \n - 笔记\n - 课堂记录\n---\n话说上次上这门课是在一年前，当时的自己因为项目的事情没能准时来考试，这次还不小心把昨天的第一节课给忘了。。。。今天还是从第二节课开始的。。。\n\n<!-- more -->\n\n# 第二节课\n\n{% blockquote %}\n话说助教都还是同一个人。。。。\n2016生态文明概论QQ群：338902830\n\n## 自然资源的破坏加速了浩劫\n\n石油、天然气等能源有可能在未来一百年内枯竭\n煤炭可能坚持一千年\n工业建立在这些化石燃料的基础上\n\n## 新能源的开发\n\n### 概念：太阳能、风能、地热能、水利能等区别于化石燃料的能源\n\n#### 特点\n\n* 不稳定\n* 有限制（时间、地理）\n\n## 环境污染\n\n### 例子\n\n重工业导致的雾霾、水污染\n。。。。又在宣扬哈尔滨环境好了\n原因\n* 土地好（黑土地），盐碱地、湿地（哈大齐这一段田地）\n* 没有造成特别严重污染的工业\n* 树多（花大钱种的树），话说树木移植不就是必须得带土么。。。。你真的是专家吗。。。\n{% endblockquote %}\n\n# 第三节课\n\n{% blockquote %}\n当代人生面对的环境与健康的十大问题\n党的十七大，提出了生态文明建设的发展目标\n党的十八大，对生态文明做了战略的部署，把生态文明做了新的时代的标志\n“开创中国特色社会主义生态文明的新时代”\n“把生态融入经济政治社会文化当中，形成五位一体的战略格局”\n1949-2049:达到西方中等发达国家的水平\n20世纪60年代，《寂静的春天》标志着世界环境保护的到来\n《我们共同的未来》，可持续发展就是我们的未来\n{% endblockquote %}\n3. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"生态文明概论笔记","published":1,"updated":"2016-11-07T02:20:00.702Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civ9mvsdg000paz99zm70qyj4","content":"<p>话说上次上这门课是在一年前，当时的自己因为项目的事情没能准时来考试，这次还不小心把昨天的第一节课给忘了。。。。今天还是从第二节课开始的。。。</p>\n<a id=\"more\"></a>\n<h1 id=\"第二节课\"><a href=\"#第二节课\" class=\"headerlink\" title=\"第二节课\"></a>第二节课</h1><blockquote><p>话说助教都还是同一个人。。。。<br>2016生态文明概论QQ群：338902830</p>\n<h2 id=\"自然资源的破坏加速了浩劫\"><a href=\"#自然资源的破坏加速了浩劫\" class=\"headerlink\" title=\"自然资源的破坏加速了浩劫\"></a>自然资源的破坏加速了浩劫</h2><p>石油、天然气等能源有可能在未来一百年内枯竭<br>煤炭可能坚持一千年<br>工业建立在这些化石燃料的基础上</p>\n<h2 id=\"新能源的开发\"><a href=\"#新能源的开发\" class=\"headerlink\" title=\"新能源的开发\"></a>新能源的开发</h2><h3 id=\"概念：太阳能、风能、地热能、水利能等区别于化石燃料的能源\"><a href=\"#概念：太阳能、风能、地热能、水利能等区别于化石燃料的能源\" class=\"headerlink\" title=\"概念：太阳能、风能、地热能、水利能等区别于化石燃料的能源\"></a>概念：太阳能、风能、地热能、水利能等区别于化石燃料的能源</h3><h4 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h4><ul>\n<li>不稳定</li>\n<li>有限制（时间、地理）</li>\n</ul>\n<h2 id=\"环境污染\"><a href=\"#环境污染\" class=\"headerlink\" title=\"环境污染\"></a>环境污染</h2><h3 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h3><p>重工业导致的雾霾、水污染<br>。。。。又在宣扬哈尔滨环境好了<br>原因</p>\n<ul>\n<li>土地好（黑土地），盐碱地、湿地（哈大齐这一段田地）</li>\n<li>没有造成特别严重污染的工业</li>\n<li>树多（花大钱种的树），话说树木移植不就是必须得带土么。。。。你真的是专家吗。。。</li>\n</ul>\n</blockquote>\n<h1 id=\"第三节课\"><a href=\"#第三节课\" class=\"headerlink\" title=\"第三节课\"></a>第三节课</h1><blockquote><p>当代人生面对的环境与健康的十大问题<br>党的十七大，提出了生态文明建设的发展目标<br>党的十八大，对生态文明做了战略的部署，把生态文明做了新的时代的标志<br>“开创中国特色社会主义生态文明的新时代”<br>“把生态融入经济政治社会文化当中，形成五位一体的战略格局”<br>1949-2049:达到西方中等发达国家的水平<br>20世纪60年代，《寂静的春天》标志着世界环境保护的到来<br>《我们共同的未来》，可持续发展就是我们的未来</p>\n</blockquote>\n<ol>\n<li></li>\n</ol>\n","excerpt":"<p>话说上次上这门课是在一年前，当时的自己因为项目的事情没能准时来考试，这次还不小心把昨天的第一节课给忘了。。。。今天还是从第二节课开始的。。。</p>","more":"<h1 id=\"第二节课\"><a href=\"#第二节课\" class=\"headerlink\" title=\"第二节课\"></a>第二节课</h1><blockquote><p>话说助教都还是同一个人。。。。<br>2016生态文明概论QQ群：338902830</p>\n<h2 id=\"自然资源的破坏加速了浩劫\"><a href=\"#自然资源的破坏加速了浩劫\" class=\"headerlink\" title=\"自然资源的破坏加速了浩劫\"></a>自然资源的破坏加速了浩劫</h2><p>石油、天然气等能源有可能在未来一百年内枯竭<br>煤炭可能坚持一千年<br>工业建立在这些化石燃料的基础上</p>\n<h2 id=\"新能源的开发\"><a href=\"#新能源的开发\" class=\"headerlink\" title=\"新能源的开发\"></a>新能源的开发</h2><h3 id=\"概念：太阳能、风能、地热能、水利能等区别于化石燃料的能源\"><a href=\"#概念：太阳能、风能、地热能、水利能等区别于化石燃料的能源\" class=\"headerlink\" title=\"概念：太阳能、风能、地热能、水利能等区别于化石燃料的能源\"></a>概念：太阳能、风能、地热能、水利能等区别于化石燃料的能源</h3><h4 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h4><ul>\n<li>不稳定</li>\n<li>有限制（时间、地理）</li>\n</ul>\n<h2 id=\"环境污染\"><a href=\"#环境污染\" class=\"headerlink\" title=\"环境污染\"></a>环境污染</h2><h3 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h3><p>重工业导致的雾霾、水污染<br>。。。。又在宣扬哈尔滨环境好了<br>原因</p>\n<ul>\n<li>土地好（黑土地），盐碱地、湿地（哈大齐这一段田地）</li>\n<li>没有造成特别严重污染的工业</li>\n<li>树多（花大钱种的树），话说树木移植不就是必须得带土么。。。。你真的是专家吗。。。</li>\n</ul>\n</blockquote>\n<h1 id=\"第三节课\"><a href=\"#第三节课\" class=\"headerlink\" title=\"第三节课\"></a>第三节课</h1><blockquote><p>当代人生面对的环境与健康的十大问题<br>党的十七大，提出了生态文明建设的发展目标<br>党的十八大，对生态文明做了战略的部署，把生态文明做了新的时代的标志<br>“开创中国特色社会主义生态文明的新时代”<br>“把生态融入经济政治社会文化当中，形成五位一体的战略格局”<br>1949-2049:达到西方中等发达国家的水平<br>20世纪60年代，《寂静的春天》标志着世界环境保护的到来<br>《我们共同的未来》，可持续发展就是我们的未来</p>\n</blockquote>\n<ol>\n<li></li>\n</ol>"},{"title":"编译原理学习（一）","date":"2016-10-11T13:04:00.000Z","_content":"\n绝对会是最麻烦的科目\n\n<!-- more -->\n\n# 2.1 基本概念\n\n## 字母表 (Alphabet)\n\n### 概念\n\n字母表∑是一个有穷符号集合。符号的典型例子包括字母、数字和标点符号。\n\n例\n\n{% blockquote %}\n* 二进制字母表：{0,1}\n* ASCII\n* Unicode\n{% endblockquote %}\n\n### 字母表上的运算\n\n#### 乘积(product)\n\n∑1∑2 ={ab|a ∈ ∑1, b ∈ ∑2}\n\n例\n\n{% blockquote %}\n {0, 1} {a, b} ={0a, 0b, 1a, 1b}\n{% endblockquote %}\n\n#### 幂(power)\n\n##### 概念\n\n长度为n的符号串构成的集合\n\n##### 运算\n\n∑^0 ={ε}\n\n∑^n =∑^(n-1) × ∑ , n≥1\n\n例\n\n{% blockquote %}\n{0, 1}^3 ={0, 1} {0, 1} {0, 1}={000, 001, 010, 011, 100, 101, 110, 111}\n\n{% endblockquote %}\n\n#### 正闭包(positive closure)\n\n##### 概念\n\n长度正数的符号串构成的集合\n\n##### 运算\n\n∑+ = (∑) ∪ (∑^2) ∪ (∑^3) ∪ …\n\n例\n\n{% blockquote %}\n{a, b, c, d}+ = {a, b, c, d, aa, ab, ac, ad, ba, bb, bc, bd, …, aaa, aab, aac, aad, aba, abb, abc, …}\n{% endblockquote %}\n\n#### 克林闭包(Kleene closure)\n\n##### 概念\n\n任意符号串（长度可以为零）构成的集合\n\n##### 运算\n\n∑^* = ∑^0 ∪ ∑+ = ∑^0 ∪ ∑ ∪ ∑^2 ∪ ∑^3 ∪ …\n\n例\n\n{% blockquote %}\n{a, b, c, d}* = {ε, a, b, c, d, aa, ab, ac, ad, ba, bb, bc, bd, …, aaa, aab, aac, aad, aba, abb, abc, …}\n{% endblockquote %}\n\n# 2.2 文法的定义\n\n# 2.3 语言的定义\n\n# 2.4 文法的分类\n\n# 2.4 CFG的语法分析树\n","source":"_posts/编译原理学习（一）.md","raw":"---\ntitle: 编译原理学习（一）\ndate: 2016-10-11 21:04:00\ntags: \n - 底层\n - 编译原理\ncategories: \n - 笔记\n - 追课\n---\n\n绝对会是最麻烦的科目\n\n<!-- more -->\n\n# 2.1 基本概念\n\n## 字母表 (Alphabet)\n\n### 概念\n\n字母表∑是一个有穷符号集合。符号的典型例子包括字母、数字和标点符号。\n\n例\n\n{% blockquote %}\n* 二进制字母表：{0,1}\n* ASCII\n* Unicode\n{% endblockquote %}\n\n### 字母表上的运算\n\n#### 乘积(product)\n\n∑1∑2 ={ab|a ∈ ∑1, b ∈ ∑2}\n\n例\n\n{% blockquote %}\n {0, 1} {a, b} ={0a, 0b, 1a, 1b}\n{% endblockquote %}\n\n#### 幂(power)\n\n##### 概念\n\n长度为n的符号串构成的集合\n\n##### 运算\n\n∑^0 ={ε}\n\n∑^n =∑^(n-1) × ∑ , n≥1\n\n例\n\n{% blockquote %}\n{0, 1}^3 ={0, 1} {0, 1} {0, 1}={000, 001, 010, 011, 100, 101, 110, 111}\n\n{% endblockquote %}\n\n#### 正闭包(positive closure)\n\n##### 概念\n\n长度正数的符号串构成的集合\n\n##### 运算\n\n∑+ = (∑) ∪ (∑^2) ∪ (∑^3) ∪ …\n\n例\n\n{% blockquote %}\n{a, b, c, d}+ = {a, b, c, d, aa, ab, ac, ad, ba, bb, bc, bd, …, aaa, aab, aac, aad, aba, abb, abc, …}\n{% endblockquote %}\n\n#### 克林闭包(Kleene closure)\n\n##### 概念\n\n任意符号串（长度可以为零）构成的集合\n\n##### 运算\n\n∑^* = ∑^0 ∪ ∑+ = ∑^0 ∪ ∑ ∪ ∑^2 ∪ ∑^3 ∪ …\n\n例\n\n{% blockquote %}\n{a, b, c, d}* = {ε, a, b, c, d, aa, ab, ac, ad, ba, bb, bc, bd, …, aaa, aab, aac, aad, aba, abb, abc, …}\n{% endblockquote %}\n\n# 2.2 文法的定义\n\n# 2.3 语言的定义\n\n# 2.4 文法的分类\n\n# 2.4 CFG的语法分析树\n","slug":"编译原理学习（一）","published":1,"updated":"2016-10-11T13:40:14.952Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civ9mvsdm000qaz99qo5v4b98","content":"<p>绝对会是最麻烦的科目</p>\n<a id=\"more\"></a>\n<h1 id=\"2-1-基本概念\"><a href=\"#2-1-基本概念\" class=\"headerlink\" title=\"2.1 基本概念\"></a>2.1 基本概念</h1><h2 id=\"字母表-Alphabet\"><a href=\"#字母表-Alphabet\" class=\"headerlink\" title=\"字母表 (Alphabet)\"></a>字母表 (Alphabet)</h2><h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><p>字母表∑是一个有穷符号集合。符号的典型例子包括字母、数字和标点符号。</p>\n<p>例</p>\n<blockquote><ul>\n<li>二进制字母表：{0,1}</li>\n<li>ASCII</li>\n<li>Unicode</li>\n</ul>\n</blockquote>\n<h3 id=\"字母表上的运算\"><a href=\"#字母表上的运算\" class=\"headerlink\" title=\"字母表上的运算\"></a>字母表上的运算</h3><h4 id=\"乘积-product\"><a href=\"#乘积-product\" class=\"headerlink\" title=\"乘积(product)\"></a>乘积(product)</h4><p>∑1∑2 ={ab|a ∈ ∑1, b ∈ ∑2}</p>\n<p>例</p>\n<blockquote><p>{0, 1} {a, b} ={0a, 0b, 1a, 1b}</p>\n</blockquote>\n<h4 id=\"幂-power\"><a href=\"#幂-power\" class=\"headerlink\" title=\"幂(power)\"></a>幂(power)</h4><h5 id=\"概念-1\"><a href=\"#概念-1\" class=\"headerlink\" title=\"概念\"></a>概念</h5><p>长度为n的符号串构成的集合</p>\n<h5 id=\"运算\"><a href=\"#运算\" class=\"headerlink\" title=\"运算\"></a>运算</h5><p>∑^0 ={ε}</p>\n<p>∑^n =∑^(n-1) × ∑ , n≥1</p>\n<p>例</p>\n<blockquote><p>{0, 1}^3 ={0, 1} {0, 1} {0, 1}={000, 001, 010, 011, 100, 101, 110, 111}</p>\n</blockquote>\n<h4 id=\"正闭包-positive-closure\"><a href=\"#正闭包-positive-closure\" class=\"headerlink\" title=\"正闭包(positive closure)\"></a>正闭包(positive closure)</h4><h5 id=\"概念-2\"><a href=\"#概念-2\" class=\"headerlink\" title=\"概念\"></a>概念</h5><p>长度正数的符号串构成的集合</p>\n<h5 id=\"运算-1\"><a href=\"#运算-1\" class=\"headerlink\" title=\"运算\"></a>运算</h5><p>∑+ = (∑) ∪ (∑^2) ∪ (∑^3) ∪ …</p>\n<p>例</p>\n<blockquote><p>{a, b, c, d}+ = {a, b, c, d, aa, ab, ac, ad, ba, bb, bc, bd, …, aaa, aab, aac, aad, aba, abb, abc, …}</p>\n</blockquote>\n<h4 id=\"克林闭包-Kleene-closure\"><a href=\"#克林闭包-Kleene-closure\" class=\"headerlink\" title=\"克林闭包(Kleene closure)\"></a>克林闭包(Kleene closure)</h4><h5 id=\"概念-3\"><a href=\"#概念-3\" class=\"headerlink\" title=\"概念\"></a>概念</h5><p>任意符号串（长度可以为零）构成的集合</p>\n<h5 id=\"运算-2\"><a href=\"#运算-2\" class=\"headerlink\" title=\"运算\"></a>运算</h5><p>∑^* = ∑^0 ∪ ∑+ = ∑^0 ∪ ∑ ∪ ∑^2 ∪ ∑^3 ∪ …</p>\n<p>例</p>\n<blockquote><p>{a, b, c, d}* = {ε, a, b, c, d, aa, ab, ac, ad, ba, bb, bc, bd, …, aaa, aab, aac, aad, aba, abb, abc, …}</p>\n</blockquote>\n<h1 id=\"2-2-文法的定义\"><a href=\"#2-2-文法的定义\" class=\"headerlink\" title=\"2.2 文法的定义\"></a>2.2 文法的定义</h1><h1 id=\"2-3-语言的定义\"><a href=\"#2-3-语言的定义\" class=\"headerlink\" title=\"2.3 语言的定义\"></a>2.3 语言的定义</h1><h1 id=\"2-4-文法的分类\"><a href=\"#2-4-文法的分类\" class=\"headerlink\" title=\"2.4 文法的分类\"></a>2.4 文法的分类</h1><h1 id=\"2-4-CFG的语法分析树\"><a href=\"#2-4-CFG的语法分析树\" class=\"headerlink\" title=\"2.4 CFG的语法分析树\"></a>2.4 CFG的语法分析树</h1>","excerpt":"<p>绝对会是最麻烦的科目</p>","more":"<h1 id=\"2-1-基本概念\"><a href=\"#2-1-基本概念\" class=\"headerlink\" title=\"2.1 基本概念\"></a>2.1 基本概念</h1><h2 id=\"字母表-Alphabet\"><a href=\"#字母表-Alphabet\" class=\"headerlink\" title=\"字母表 (Alphabet)\"></a>字母表 (Alphabet)</h2><h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><p>字母表∑是一个有穷符号集合。符号的典型例子包括字母、数字和标点符号。</p>\n<p>例</p>\n<blockquote><ul>\n<li>二进制字母表：{0,1}</li>\n<li>ASCII</li>\n<li>Unicode</li>\n</ul>\n</blockquote>\n<h3 id=\"字母表上的运算\"><a href=\"#字母表上的运算\" class=\"headerlink\" title=\"字母表上的运算\"></a>字母表上的运算</h3><h4 id=\"乘积-product\"><a href=\"#乘积-product\" class=\"headerlink\" title=\"乘积(product)\"></a>乘积(product)</h4><p>∑1∑2 ={ab|a ∈ ∑1, b ∈ ∑2}</p>\n<p>例</p>\n<blockquote><p>{0, 1} {a, b} ={0a, 0b, 1a, 1b}</p>\n</blockquote>\n<h4 id=\"幂-power\"><a href=\"#幂-power\" class=\"headerlink\" title=\"幂(power)\"></a>幂(power)</h4><h5 id=\"概念-1\"><a href=\"#概念-1\" class=\"headerlink\" title=\"概念\"></a>概念</h5><p>长度为n的符号串构成的集合</p>\n<h5 id=\"运算\"><a href=\"#运算\" class=\"headerlink\" title=\"运算\"></a>运算</h5><p>∑^0 ={ε}</p>\n<p>∑^n =∑^(n-1) × ∑ , n≥1</p>\n<p>例</p>\n<blockquote><p>{0, 1}^3 ={0, 1} {0, 1} {0, 1}={000, 001, 010, 011, 100, 101, 110, 111}</p>\n</blockquote>\n<h4 id=\"正闭包-positive-closure\"><a href=\"#正闭包-positive-closure\" class=\"headerlink\" title=\"正闭包(positive closure)\"></a>正闭包(positive closure)</h4><h5 id=\"概念-2\"><a href=\"#概念-2\" class=\"headerlink\" title=\"概念\"></a>概念</h5><p>长度正数的符号串构成的集合</p>\n<h5 id=\"运算-1\"><a href=\"#运算-1\" class=\"headerlink\" title=\"运算\"></a>运算</h5><p>∑+ = (∑) ∪ (∑^2) ∪ (∑^3) ∪ …</p>\n<p>例</p>\n<blockquote><p>{a, b, c, d}+ = {a, b, c, d, aa, ab, ac, ad, ba, bb, bc, bd, …, aaa, aab, aac, aad, aba, abb, abc, …}</p>\n</blockquote>\n<h4 id=\"克林闭包-Kleene-closure\"><a href=\"#克林闭包-Kleene-closure\" class=\"headerlink\" title=\"克林闭包(Kleene closure)\"></a>克林闭包(Kleene closure)</h4><h5 id=\"概念-3\"><a href=\"#概念-3\" class=\"headerlink\" title=\"概念\"></a>概念</h5><p>任意符号串（长度可以为零）构成的集合</p>\n<h5 id=\"运算-2\"><a href=\"#运算-2\" class=\"headerlink\" title=\"运算\"></a>运算</h5><p>∑^* = ∑^0 ∪ ∑+ = ∑^0 ∪ ∑ ∪ ∑^2 ∪ ∑^3 ∪ …</p>\n<p>例</p>\n<blockquote><p>{a, b, c, d}* = {ε, a, b, c, d, aa, ab, ac, ad, ba, bb, bc, bd, …, aaa, aab, aac, aad, aba, abb, abc, …}</p>\n</blockquote>\n<h1 id=\"2-2-文法的定义\"><a href=\"#2-2-文法的定义\" class=\"headerlink\" title=\"2.2 文法的定义\"></a>2.2 文法的定义</h1><h1 id=\"2-3-语言的定义\"><a href=\"#2-3-语言的定义\" class=\"headerlink\" title=\"2.3 语言的定义\"></a>2.3 语言的定义</h1><h1 id=\"2-4-文法的分类\"><a href=\"#2-4-文法的分类\" class=\"headerlink\" title=\"2.4 文法的分类\"></a>2.4 文法的分类</h1><h1 id=\"2-4-CFG的语法分析树\"><a href=\"#2-4-CFG的语法分析树\" class=\"headerlink\" title=\"2.4 CFG的语法分析树\"></a>2.4 CFG的语法分析树</h1>"},{"title":"软件体系与设计","date":"2016-10-10T03:01:25.000Z","_content":"# 创建型软件设计模式\n\n <!-- more -->\n\n## 前言\n\n### 意义\n{% blockquote %}\n编写创建对象的代码时，往往需要设置一些条件语句来判定创建哪各类的对象。这些判定条件、条件语句往往使得客户类（使用这些代码的类）变得过于臃肿，难以维护。因此，有必要将创建对象的责任委托给某个特殊的类。创建型软件设计模式就是解决对象创建机制的设计模式。该类设计模式试图根据具体的请况，以适当方式创建对象。\n{% endblockquote %}\n\n### 目标\n\n{% blockquote %}\n将一个系统与其对象的创建、组合、表示分离开来，其目的是在那个对象被创建、谁负责创建对象、怎样创建对象何时创建对象方面增强灵活性。\n{% endblockquote %}\n\n### 主要任务\n\n为客户程序创建对象，而不是由客户程序直接初始化对象。这样，可以大量减少客户程序中对象创建的代码量。\n\n### 主导思想\n\n{% blockquote %}\n1. 封装了系统使用的具体类的知识\n2. 隐藏这些具体类的实例被创建与结合的细节\n{% endblockquote %}\n\n## 工厂方法与抽象工厂模式\n\n### 概念\n\n{% blockquote %}\n将创建对象的方法从ClientGUI类中分离出来，由另一个类来封装对象的创建工作。该设计将类的选择和对象的创建封装在一个方法（即工厂方法）中，而将这个方法封装在一个独立的类（即工厂类）里面。\n{% endblockquote %}\n\n### 作用\n\n{% blockquote %}\n1. 根据需要，在AutoInsurance类层次结构中选择合适的子类\n2. 创建该类的对象\n3. 将该对象以超类AutoInsurance的类型返回给客户程序ClientGUI。\n{% endblockquote %}\n\n### 优点\n\n{% blockquote %}\n1. 使用工厂方法访问并且初始化合适的类的对象，简化了应用程序，应用程序本身不再含有大量的条件语句判定何时选取哪个类。\n2. 工厂方法实现了一些特殊的初始某个类的机制，尤其是层次结构不同的类需要不同的初始化方法的时候。工厂方法隐藏了这些创建对象的不同方法的细节，使得应用程序无需处理这些细节。\n3. 工厂方法返回一个父类的对象，客户程序不必知道这个被初始化的类的存在。因为工厂方法知道哪个类的对象被创建了，但是返回给应用程序的对象是所考虑的类的层次结构的父类，所以应用程序不知道哪个具体的类的对象被创建了\n{% endblockquote %}\n\n### 简单工厂方法模式\n\n#### 例子\n\n关键代码\n\n##### 图形界面\n\n```\nif (type.equals(BODYINJURE)){option=\"bodyInjure\";}\nelse if (type.equals(COLLISION)){option=\"collision\"}\n……\n```\n##### 工厂类工厂方法\n\n```\nif (option.compareTo(\"bodyInsure\") == 0){policy=new BodyInjur();}\nelse if (option.compareTo(\"collision\") == 0){policy=new Collision();}\n……\n```\n##### 产品类接口及其实现类\n\n```\npublic interface AutoInsurance{\n\tabstract String getInsurInfo();\n}\npublic class BodyInsur implements AutoInsurance{\n\tprivate String description;\n\tpublic String getInsurInfo();\n}\n```\n\n#### 优点\n","source":"_posts/软件体系与设计.md","raw":"---\ntitle: 软件体系与设计\ndate: 2016-10-10 11:01:25\ntags: \n - 软件体系与设计\n - 复习\ncategories: 笔记\n---\n# 创建型软件设计模式\n\n <!-- more -->\n\n## 前言\n\n### 意义\n{% blockquote %}\n编写创建对象的代码时，往往需要设置一些条件语句来判定创建哪各类的对象。这些判定条件、条件语句往往使得客户类（使用这些代码的类）变得过于臃肿，难以维护。因此，有必要将创建对象的责任委托给某个特殊的类。创建型软件设计模式就是解决对象创建机制的设计模式。该类设计模式试图根据具体的请况，以适当方式创建对象。\n{% endblockquote %}\n\n### 目标\n\n{% blockquote %}\n将一个系统与其对象的创建、组合、表示分离开来，其目的是在那个对象被创建、谁负责创建对象、怎样创建对象何时创建对象方面增强灵活性。\n{% endblockquote %}\n\n### 主要任务\n\n为客户程序创建对象，而不是由客户程序直接初始化对象。这样，可以大量减少客户程序中对象创建的代码量。\n\n### 主导思想\n\n{% blockquote %}\n1. 封装了系统使用的具体类的知识\n2. 隐藏这些具体类的实例被创建与结合的细节\n{% endblockquote %}\n\n## 工厂方法与抽象工厂模式\n\n### 概念\n\n{% blockquote %}\n将创建对象的方法从ClientGUI类中分离出来，由另一个类来封装对象的创建工作。该设计将类的选择和对象的创建封装在一个方法（即工厂方法）中，而将这个方法封装在一个独立的类（即工厂类）里面。\n{% endblockquote %}\n\n### 作用\n\n{% blockquote %}\n1. 根据需要，在AutoInsurance类层次结构中选择合适的子类\n2. 创建该类的对象\n3. 将该对象以超类AutoInsurance的类型返回给客户程序ClientGUI。\n{% endblockquote %}\n\n### 优点\n\n{% blockquote %}\n1. 使用工厂方法访问并且初始化合适的类的对象，简化了应用程序，应用程序本身不再含有大量的条件语句判定何时选取哪个类。\n2. 工厂方法实现了一些特殊的初始某个类的机制，尤其是层次结构不同的类需要不同的初始化方法的时候。工厂方法隐藏了这些创建对象的不同方法的细节，使得应用程序无需处理这些细节。\n3. 工厂方法返回一个父类的对象，客户程序不必知道这个被初始化的类的存在。因为工厂方法知道哪个类的对象被创建了，但是返回给应用程序的对象是所考虑的类的层次结构的父类，所以应用程序不知道哪个具体的类的对象被创建了\n{% endblockquote %}\n\n### 简单工厂方法模式\n\n#### 例子\n\n关键代码\n\n##### 图形界面\n\n```\nif (type.equals(BODYINJURE)){option=\"bodyInjure\";}\nelse if (type.equals(COLLISION)){option=\"collision\"}\n……\n```\n##### 工厂类工厂方法\n\n```\nif (option.compareTo(\"bodyInsure\") == 0){policy=new BodyInjur();}\nelse if (option.compareTo(\"collision\") == 0){policy=new Collision();}\n……\n```\n##### 产品类接口及其实现类\n\n```\npublic interface AutoInsurance{\n\tabstract String getInsurInfo();\n}\npublic class BodyInsur implements AutoInsurance{\n\tprivate String description;\n\tpublic String getInsurInfo();\n}\n```\n\n#### 优点\n","slug":"软件体系与设计","published":1,"updated":"2016-10-11T10:07:31.725Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civ9mvsdq000taz99gtddulha","content":"<h1 id=\"创建型软件设计模式\"><a href=\"#创建型软件设计模式\" class=\"headerlink\" title=\"创建型软件设计模式\"></a>创建型软件设计模式</h1> <a id=\"more\"></a>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><h3 id=\"意义\"><a href=\"#意义\" class=\"headerlink\" title=\"意义\"></a>意义</h3><blockquote><p>编写创建对象的代码时，往往需要设置一些条件语句来判定创建哪各类的对象。这些判定条件、条件语句往往使得客户类（使用这些代码的类）变得过于臃肿，难以维护。因此，有必要将创建对象的责任委托给某个特殊的类。创建型软件设计模式就是解决对象创建机制的设计模式。该类设计模式试图根据具体的请况，以适当方式创建对象。</p>\n</blockquote>\n<h3 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h3><blockquote><p>将一个系统与其对象的创建、组合、表示分离开来，其目的是在那个对象被创建、谁负责创建对象、怎样创建对象何时创建对象方面增强灵活性。</p>\n</blockquote>\n<h3 id=\"主要任务\"><a href=\"#主要任务\" class=\"headerlink\" title=\"主要任务\"></a>主要任务</h3><p>为客户程序创建对象，而不是由客户程序直接初始化对象。这样，可以大量减少客户程序中对象创建的代码量。</p>\n<h3 id=\"主导思想\"><a href=\"#主导思想\" class=\"headerlink\" title=\"主导思想\"></a>主导思想</h3><blockquote><ol>\n<li>封装了系统使用的具体类的知识</li>\n<li>隐藏这些具体类的实例被创建与结合的细节</li>\n</ol>\n</blockquote>\n<h2 id=\"工厂方法与抽象工厂模式\"><a href=\"#工厂方法与抽象工厂模式\" class=\"headerlink\" title=\"工厂方法与抽象工厂模式\"></a>工厂方法与抽象工厂模式</h2><h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><blockquote><p>将创建对象的方法从ClientGUI类中分离出来，由另一个类来封装对象的创建工作。该设计将类的选择和对象的创建封装在一个方法（即工厂方法）中，而将这个方法封装在一个独立的类（即工厂类）里面。</p>\n</blockquote>\n<h3 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h3><blockquote><ol>\n<li>根据需要，在AutoInsurance类层次结构中选择合适的子类</li>\n<li>创建该类的对象</li>\n<li>将该对象以超类AutoInsurance的类型返回给客户程序ClientGUI。</li>\n</ol>\n</blockquote>\n<h3 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h3><blockquote><ol>\n<li>使用工厂方法访问并且初始化合适的类的对象，简化了应用程序，应用程序本身不再含有大量的条件语句判定何时选取哪个类。</li>\n<li>工厂方法实现了一些特殊的初始某个类的机制，尤其是层次结构不同的类需要不同的初始化方法的时候。工厂方法隐藏了这些创建对象的不同方法的细节，使得应用程序无需处理这些细节。</li>\n<li>工厂方法返回一个父类的对象，客户程序不必知道这个被初始化的类的存在。因为工厂方法知道哪个类的对象被创建了，但是返回给应用程序的对象是所考虑的类的层次结构的父类，所以应用程序不知道哪个具体的类的对象被创建了</li>\n</ol>\n</blockquote>\n<h3 id=\"简单工厂方法模式\"><a href=\"#简单工厂方法模式\" class=\"headerlink\" title=\"简单工厂方法模式\"></a>简单工厂方法模式</h3><h4 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h4><p>关键代码</p>\n<h5 id=\"图形界面\"><a href=\"#图形界面\" class=\"headerlink\" title=\"图形界面\"></a>图形界面</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">if (type.equals(BODYINJURE))&#123;option=&quot;bodyInjure&quot;;&#125;</div><div class=\"line\">else if (type.equals(COLLISION))&#123;option=&quot;collision&quot;&#125;</div><div class=\"line\">……</div></pre></td></tr></table></figure>\n<h5 id=\"工厂类工厂方法\"><a href=\"#工厂类工厂方法\" class=\"headerlink\" title=\"工厂类工厂方法\"></a>工厂类工厂方法</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">if (option.compareTo(&quot;bodyInsure&quot;) == 0)&#123;policy=new BodyInjur();&#125;</div><div class=\"line\">else if (option.compareTo(&quot;collision&quot;) == 0)&#123;policy=new Collision();&#125;</div><div class=\"line\">……</div></pre></td></tr></table></figure>\n<h5 id=\"产品类接口及其实现类\"><a href=\"#产品类接口及其实现类\" class=\"headerlink\" title=\"产品类接口及其实现类\"></a>产品类接口及其实现类</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">public interface AutoInsurance&#123;</div><div class=\"line\">\tabstract String getInsurInfo();</div><div class=\"line\">&#125;</div><div class=\"line\">public class BodyInsur implements AutoInsurance&#123;</div><div class=\"line\">\tprivate String description;</div><div class=\"line\">\tpublic String getInsurInfo();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"优点-1\"><a href=\"#优点-1\" class=\"headerlink\" title=\"优点\"></a>优点</h4>","excerpt":"<h1 id=\"创建型软件设计模式\"><a href=\"#创建型软件设计模式\" class=\"headerlink\" title=\"创建型软件设计模式\"></a>创建型软件设计模式</h1>","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><h3 id=\"意义\"><a href=\"#意义\" class=\"headerlink\" title=\"意义\"></a>意义</h3><blockquote><p>编写创建对象的代码时，往往需要设置一些条件语句来判定创建哪各类的对象。这些判定条件、条件语句往往使得客户类（使用这些代码的类）变得过于臃肿，难以维护。因此，有必要将创建对象的责任委托给某个特殊的类。创建型软件设计模式就是解决对象创建机制的设计模式。该类设计模式试图根据具体的请况，以适当方式创建对象。</p>\n</blockquote>\n<h3 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h3><blockquote><p>将一个系统与其对象的创建、组合、表示分离开来，其目的是在那个对象被创建、谁负责创建对象、怎样创建对象何时创建对象方面增强灵活性。</p>\n</blockquote>\n<h3 id=\"主要任务\"><a href=\"#主要任务\" class=\"headerlink\" title=\"主要任务\"></a>主要任务</h3><p>为客户程序创建对象，而不是由客户程序直接初始化对象。这样，可以大量减少客户程序中对象创建的代码量。</p>\n<h3 id=\"主导思想\"><a href=\"#主导思想\" class=\"headerlink\" title=\"主导思想\"></a>主导思想</h3><blockquote><ol>\n<li>封装了系统使用的具体类的知识</li>\n<li>隐藏这些具体类的实例被创建与结合的细节</li>\n</ol>\n</blockquote>\n<h2 id=\"工厂方法与抽象工厂模式\"><a href=\"#工厂方法与抽象工厂模式\" class=\"headerlink\" title=\"工厂方法与抽象工厂模式\"></a>工厂方法与抽象工厂模式</h2><h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><blockquote><p>将创建对象的方法从ClientGUI类中分离出来，由另一个类来封装对象的创建工作。该设计将类的选择和对象的创建封装在一个方法（即工厂方法）中，而将这个方法封装在一个独立的类（即工厂类）里面。</p>\n</blockquote>\n<h3 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h3><blockquote><ol>\n<li>根据需要，在AutoInsurance类层次结构中选择合适的子类</li>\n<li>创建该类的对象</li>\n<li>将该对象以超类AutoInsurance的类型返回给客户程序ClientGUI。</li>\n</ol>\n</blockquote>\n<h3 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h3><blockquote><ol>\n<li>使用工厂方法访问并且初始化合适的类的对象，简化了应用程序，应用程序本身不再含有大量的条件语句判定何时选取哪个类。</li>\n<li>工厂方法实现了一些特殊的初始某个类的机制，尤其是层次结构不同的类需要不同的初始化方法的时候。工厂方法隐藏了这些创建对象的不同方法的细节，使得应用程序无需处理这些细节。</li>\n<li>工厂方法返回一个父类的对象，客户程序不必知道这个被初始化的类的存在。因为工厂方法知道哪个类的对象被创建了，但是返回给应用程序的对象是所考虑的类的层次结构的父类，所以应用程序不知道哪个具体的类的对象被创建了</li>\n</ol>\n</blockquote>\n<h3 id=\"简单工厂方法模式\"><a href=\"#简单工厂方法模式\" class=\"headerlink\" title=\"简单工厂方法模式\"></a>简单工厂方法模式</h3><h4 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h4><p>关键代码</p>\n<h5 id=\"图形界面\"><a href=\"#图形界面\" class=\"headerlink\" title=\"图形界面\"></a>图形界面</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">if (type.equals(BODYINJURE))&#123;option=&quot;bodyInjure&quot;;&#125;</div><div class=\"line\">else if (type.equals(COLLISION))&#123;option=&quot;collision&quot;&#125;</div><div class=\"line\">……</div></pre></td></tr></table></figure>\n<h5 id=\"工厂类工厂方法\"><a href=\"#工厂类工厂方法\" class=\"headerlink\" title=\"工厂类工厂方法\"></a>工厂类工厂方法</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">if (option.compareTo(&quot;bodyInsure&quot;) == 0)&#123;policy=new BodyInjur();&#125;</div><div class=\"line\">else if (option.compareTo(&quot;collision&quot;) == 0)&#123;policy=new Collision();&#125;</div><div class=\"line\">……</div></pre></td></tr></table></figure>\n<h5 id=\"产品类接口及其实现类\"><a href=\"#产品类接口及其实现类\" class=\"headerlink\" title=\"产品类接口及其实现类\"></a>产品类接口及其实现类</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">public interface AutoInsurance&#123;</div><div class=\"line\">\tabstract String getInsurInfo();</div><div class=\"line\">&#125;</div><div class=\"line\">public class BodyInsur implements AutoInsurance&#123;</div><div class=\"line\">\tprivate String description;</div><div class=\"line\">\tpublic String getInsurInfo();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"优点-1\"><a href=\"#优点-1\" class=\"headerlink\" title=\"优点\"></a>优点</h4>"},{"title":"一味的追求经济增长会是什么结果","date":"2016-10-12T02:43:45.000Z","_content":"人文社科大作业\n<!-- more -->\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;本人选读的书目是《增长的极限》，美国的德内拉•梅多斯，乔根•兰德斯，丹尼斯•梅多斯著，2004版，为什么强调是2004版呢，因为增长的极限事实上有三种版本，分别是1972年版、1992年版以及我所阅读的2004版。1972年版已经提出增长可能导致的后果，后面两个版本是作者在之后完善自己的观点以及更新数据之后完成的著作。\n\n\n\n# 过冲\n\n## 过冲\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;第一章的名字很拗口，过冲，作者在第一句话也已经做出了解释，意思是走过头了，意外而不是有意的超出了界限。这样的例子在现实生活中比比皆是，跑道上冲的过快而至于后继无力甚至昏倒，抬升重物过快导致手臂脱臼等等。但这些与作者想要讨论的有什么关系呢？\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;接下来作者讨论了过冲的充要条件，即以下三种\n\n{% blockquote %}\n* 增长、加速或快速的变化\n* 有某种形式的界限或阻碍，超出这种界限或阻碍，运动中的系统就会变得不安全\n* 在感知和反应上存在滞后或失误，无法努力将系统控制在界限之内\n{% endblockquote %}\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;过冲，第一个原因是增长，第二个是界限，第三个，迟钝。如果将第一个增长用在经济上，即经济增长中，会不会符合这三个条件，导致经济“过冲”呢?像我们国家建国之后曾经为了发展而发起了“大跃进”运动，但是从结果上来看，虽然调用大量的人力物力，但是效果并不显著，在那期间破坏了生态环境，间接导致了之后的三年困难时期。那么，如果这是过冲的话，进行分析第一个条件，已经知道了是经济增长，第二个条件，界限是什么，“人民日益增长的物质和文化需求通落后的社会生产力不相符”，那么想必是当时的社会生产力的限制，第三个条件，想必是决策者没能正确分析局势。这三个条件导致了当时的增长过冲，经济停滞。\n联想结束，回到书中，作者提到了另一个术语\n\n## 生态足迹\n\n{% blockquote %}\n“生态足迹”这个术语的流行始于马克斯•瓦克纳格尔及其同事在1997年为地球理事会所做的一项研究，用于指代地球上的人类需求和地球所能容纳的容量之间的关系，具体表现为一个国家可用以供其人口消费并吸收所产生废弃物的土地的数量。\n{% endblockquote %}\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有点类似放牧，要有多大的草原能够满足一群羊在其中自由生活。这不单单指的是有多大的草原能容纳这一群羊，人类使用了资源之后资源在短时间内不会再生，就像羊吃了草之后草在短时间内不会长回来，要等到第二年才能恢复原样，类比于人类社会，事实上人类生存需要使用的土地面积大于人类居住所占用的土地面积。《地球生存报告》显示，从２０世纪８０年代后期起，人们每年消耗的资源已经超过了这个星球当年的资源再生量。换句话说，整个社会的生态足迹相对于地球所能提供的容量来说已经出现过冲。\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;毋庸置疑，这是极其危险的，将人类比作羊群的话，我们就是在一片并不足够养育我们的草原上随意放牧的羊群，这样导致的结果往往是草原变成沙漠，资源最终枯竭并无法再生。\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但如果现在注意到这一点，也存在挽回的机会，像我国的计划生育，遏制了中国人口的增长趋势，长远角度上来看使我国的资源更好的得到分配。反视印度，过多的人口导致国内贫富差距不断拉大，经济也为之滞后。因此，如果早意识到这一点，防患于未然，倒也能防止严重的后果。当今世界的环境问题一步步恶化，只要人类早早做出正确的决策，也未必不能很好的解决。\n\n# 驱动力：指数型增长\n\n## 指数型增长\n\n{% blockquote %}\n过冲的首要原因是增长、加速和快速的变化。在一个多世纪的时间里，地球系统的许多物理特征都在迅速的发生变化。例如，人口、粮食生产、工业生产、资源消耗以及污染都在不断增长，并且常常是以越来越快的速度增长。这些增长是以数学上所说的“指数型增长”的方式进行的。\n{% endblockquote %}\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最开始，某某地出现了雾霾，初时感觉很诧异，觉得这是件稀奇的事情，各种媒体不断报道这件事情，这个地方的政府也说要好好治理环境。但是到现在，纵观全国，雾霾不知什么时候已被人习以为常，就连没有重工业所在的哈尔滨，每年的冬天也是乌烟瘴气，对于一个城市来说，没有雾霾这件事情本身已经变成了一件稀奇的事情。\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;工业产值的增长固然给了世界人民以便利，但同时也是双刃剑，它带给了这个世界以创伤。\n\n## 世界人口增长\n\n{% blockquote %}\n在１６５０年时，人类的人口数量大约为５亿左右，其年增长率约为０．３％，按照这速度大约要２４０年才会翻一番。\n到１９００年时，人口数量达到１６亿，年增长率在０．７％～０．８％之间，大约需要１００年才会翻一番。\n到１９６５年时，人类的人口数量达到３３亿，年增长率已经提高到２％，只需要３６年就会翻一番。\n{% endblockquote %}\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是书中给出的数据，这何止是指数型，增长率也在不断的增长，因为工业与科技的发展，医疗卫生条件的改善，死亡率越来越低。与之前的死亡率平衡的出生率实质上就过大了，所以才使得增长率太高，导致人口膨胀，随之出现一系列问题。\n\n{% blockquote %}\n１９６５年以后，死亡率继续下降，但平均出生率下降的甚至更快，在人口从３３亿增加到２０００年的刚刚超过６０亿的同时，人口的年增长率也从２％下降到１．２％。\n{% endblockquote %}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;感觉很奇怪，但看了作者的解释之后，其实也能理解。工业科技带给我们的除了生活水平的提高，相应的还有文化观念的变化，如下\n\n{% blockquote %}\n全世界每个妇女所生育的孩子数量从２０世纪５０年代的平均５个下降到２０世纪九十年代的平均２．７个\n{% endblockquote %}\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;人口增长并没有像数学计算那么简单，人类的生活水平提高的同时，观念也在提高。\n\n## 世界工业增长\n\n{% blockquote %}\n１９３０年到２０００年，世界工业产出的货币价值增长了１４倍\n{% endblockquote %}\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;工业造成的价值越多，按理说人民生活水平应该越高才对，但事实上却不是，由于之前提到的人口增长的问题，人民生活水平并没有同样增长１４倍，而是比这更少，更出乎意料的是，这些多出来的生产价值并没有被平均的分配，至少不是公平的分配。现实中，社会中存在这一条贫富差距的沟壑，富者享有更多的劳动成果，贫者只能沦为给富者打下手的地步。\n\n## 人越多越穷，越穷人越多？\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这里我对作者的观点就不太理解了，对于这一块作者给出的观点是富有的人更能在社会经济增长的时候获取自己的利益，相对的，贫穷的人在经济增长的时候却会沦为被压榨的对象，由此贫富差距就越拉越大。但是至少从我身边的例子来说，就有不少随着社会进步脱贫致富的人，增长本身应当是没有错的，如果出现了贫富差距越拉越大的情况，错在决策者不能很好的把握市场形势，政府不能很好的监管。类似于科学进步，科学本身是无罪的，罪在使用科学的人。\n\n# 极限：源与汇\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个星球的资源开采一定是有极限的，上小学的时候，课文中就常有世界的煤矿、石油即将被开采完的担忧。这是必然的，直到现在，虽然每年都有许许多多新型能源被不断开发，但是支撑我们工业的主要能源依然是石油等化石燃料。这些能源迟早会有枯竭的一天，到时候使用什么？核能？前苏联和日本的惨剧相信我们都看到了。太阳能？风能？稳定性以及并入电网还是一个世界难题。水力发电貌似是一个比较好的选择，事实上，从小出生在大山之中的我，也对这些水电站习以为常，但是水力发电太过依赖地形，而且一个不慎就会对自然环境造成极大的伤害，就如现在三峡下游自然环境在三峡大坝建立之后急剧恶化一样。\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n","source":"_posts/读后感——增长的极限.md","raw":"---\ntitle: 一味的追求经济增长会是什么结果\ndate: 2016-10-12 10:43:45\ntags:\n - 人文社科\n - 读书笔记\ncategories:\n - 作业\n---\n人文社科大作业\n<!-- more -->\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;本人选读的书目是《增长的极限》，美国的德内拉•梅多斯，乔根•兰德斯，丹尼斯•梅多斯著，2004版，为什么强调是2004版呢，因为增长的极限事实上有三种版本，分别是1972年版、1992年版以及我所阅读的2004版。1972年版已经提出增长可能导致的后果，后面两个版本是作者在之后完善自己的观点以及更新数据之后完成的著作。\n\n\n\n# 过冲\n\n## 过冲\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;第一章的名字很拗口，过冲，作者在第一句话也已经做出了解释，意思是走过头了，意外而不是有意的超出了界限。这样的例子在现实生活中比比皆是，跑道上冲的过快而至于后继无力甚至昏倒，抬升重物过快导致手臂脱臼等等。但这些与作者想要讨论的有什么关系呢？\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;接下来作者讨论了过冲的充要条件，即以下三种\n\n{% blockquote %}\n* 增长、加速或快速的变化\n* 有某种形式的界限或阻碍，超出这种界限或阻碍，运动中的系统就会变得不安全\n* 在感知和反应上存在滞后或失误，无法努力将系统控制在界限之内\n{% endblockquote %}\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;过冲，第一个原因是增长，第二个是界限，第三个，迟钝。如果将第一个增长用在经济上，即经济增长中，会不会符合这三个条件，导致经济“过冲”呢?像我们国家建国之后曾经为了发展而发起了“大跃进”运动，但是从结果上来看，虽然调用大量的人力物力，但是效果并不显著，在那期间破坏了生态环境，间接导致了之后的三年困难时期。那么，如果这是过冲的话，进行分析第一个条件，已经知道了是经济增长，第二个条件，界限是什么，“人民日益增长的物质和文化需求通落后的社会生产力不相符”，那么想必是当时的社会生产力的限制，第三个条件，想必是决策者没能正确分析局势。这三个条件导致了当时的增长过冲，经济停滞。\n联想结束，回到书中，作者提到了另一个术语\n\n## 生态足迹\n\n{% blockquote %}\n“生态足迹”这个术语的流行始于马克斯•瓦克纳格尔及其同事在1997年为地球理事会所做的一项研究，用于指代地球上的人类需求和地球所能容纳的容量之间的关系，具体表现为一个国家可用以供其人口消费并吸收所产生废弃物的土地的数量。\n{% endblockquote %}\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有点类似放牧，要有多大的草原能够满足一群羊在其中自由生活。这不单单指的是有多大的草原能容纳这一群羊，人类使用了资源之后资源在短时间内不会再生，就像羊吃了草之后草在短时间内不会长回来，要等到第二年才能恢复原样，类比于人类社会，事实上人类生存需要使用的土地面积大于人类居住所占用的土地面积。《地球生存报告》显示，从２０世纪８０年代后期起，人们每年消耗的资源已经超过了这个星球当年的资源再生量。换句话说，整个社会的生态足迹相对于地球所能提供的容量来说已经出现过冲。\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;毋庸置疑，这是极其危险的，将人类比作羊群的话，我们就是在一片并不足够养育我们的草原上随意放牧的羊群，这样导致的结果往往是草原变成沙漠，资源最终枯竭并无法再生。\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但如果现在注意到这一点，也存在挽回的机会，像我国的计划生育，遏制了中国人口的增长趋势，长远角度上来看使我国的资源更好的得到分配。反视印度，过多的人口导致国内贫富差距不断拉大，经济也为之滞后。因此，如果早意识到这一点，防患于未然，倒也能防止严重的后果。当今世界的环境问题一步步恶化，只要人类早早做出正确的决策，也未必不能很好的解决。\n\n# 驱动力：指数型增长\n\n## 指数型增长\n\n{% blockquote %}\n过冲的首要原因是增长、加速和快速的变化。在一个多世纪的时间里，地球系统的许多物理特征都在迅速的发生变化。例如，人口、粮食生产、工业生产、资源消耗以及污染都在不断增长，并且常常是以越来越快的速度增长。这些增长是以数学上所说的“指数型增长”的方式进行的。\n{% endblockquote %}\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最开始，某某地出现了雾霾，初时感觉很诧异，觉得这是件稀奇的事情，各种媒体不断报道这件事情，这个地方的政府也说要好好治理环境。但是到现在，纵观全国，雾霾不知什么时候已被人习以为常，就连没有重工业所在的哈尔滨，每年的冬天也是乌烟瘴气，对于一个城市来说，没有雾霾这件事情本身已经变成了一件稀奇的事情。\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;工业产值的增长固然给了世界人民以便利，但同时也是双刃剑，它带给了这个世界以创伤。\n\n## 世界人口增长\n\n{% blockquote %}\n在１６５０年时，人类的人口数量大约为５亿左右，其年增长率约为０．３％，按照这速度大约要２４０年才会翻一番。\n到１９００年时，人口数量达到１６亿，年增长率在０．７％～０．８％之间，大约需要１００年才会翻一番。\n到１９６５年时，人类的人口数量达到３３亿，年增长率已经提高到２％，只需要３６年就会翻一番。\n{% endblockquote %}\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是书中给出的数据，这何止是指数型，增长率也在不断的增长，因为工业与科技的发展，医疗卫生条件的改善，死亡率越来越低。与之前的死亡率平衡的出生率实质上就过大了，所以才使得增长率太高，导致人口膨胀，随之出现一系列问题。\n\n{% blockquote %}\n１９６５年以后，死亡率继续下降，但平均出生率下降的甚至更快，在人口从３３亿增加到２０００年的刚刚超过６０亿的同时，人口的年增长率也从２％下降到１．２％。\n{% endblockquote %}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;感觉很奇怪，但看了作者的解释之后，其实也能理解。工业科技带给我们的除了生活水平的提高，相应的还有文化观念的变化，如下\n\n{% blockquote %}\n全世界每个妇女所生育的孩子数量从２０世纪５０年代的平均５个下降到２０世纪九十年代的平均２．７个\n{% endblockquote %}\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;人口增长并没有像数学计算那么简单，人类的生活水平提高的同时，观念也在提高。\n\n## 世界工业增长\n\n{% blockquote %}\n１９３０年到２０００年，世界工业产出的货币价值增长了１４倍\n{% endblockquote %}\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;工业造成的价值越多，按理说人民生活水平应该越高才对，但事实上却不是，由于之前提到的人口增长的问题，人民生活水平并没有同样增长１４倍，而是比这更少，更出乎意料的是，这些多出来的生产价值并没有被平均的分配，至少不是公平的分配。现实中，社会中存在这一条贫富差距的沟壑，富者享有更多的劳动成果，贫者只能沦为给富者打下手的地步。\n\n## 人越多越穷，越穷人越多？\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这里我对作者的观点就不太理解了，对于这一块作者给出的观点是富有的人更能在社会经济增长的时候获取自己的利益，相对的，贫穷的人在经济增长的时候却会沦为被压榨的对象，由此贫富差距就越拉越大。但是至少从我身边的例子来说，就有不少随着社会进步脱贫致富的人，增长本身应当是没有错的，如果出现了贫富差距越拉越大的情况，错在决策者不能很好的把握市场形势，政府不能很好的监管。类似于科学进步，科学本身是无罪的，罪在使用科学的人。\n\n# 极限：源与汇\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个星球的资源开采一定是有极限的，上小学的时候，课文中就常有世界的煤矿、石油即将被开采完的担忧。这是必然的，直到现在，虽然每年都有许许多多新型能源被不断开发，但是支撑我们工业的主要能源依然是石油等化石燃料。这些能源迟早会有枯竭的一天，到时候使用什么？核能？前苏联和日本的惨剧相信我们都看到了。太阳能？风能？稳定性以及并入电网还是一个世界难题。水力发电貌似是一个比较好的选择，事实上，从小出生在大山之中的我，也对这些水电站习以为常，但是水力发电太过依赖地形，而且一个不慎就会对自然环境造成极大的伤害，就如现在三峡下游自然环境在三峡大坝建立之后急剧恶化一样。\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n","slug":"读后感——增长的极限","published":1,"updated":"2016-11-07T02:20:43.786Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civ9mvsds000vaz99mty4plvf","content":"<p>人文社科大作业<br><a id=\"more\"></a></p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;本人选读的书目是《增长的极限》，美国的德内拉•梅多斯，乔根•兰德斯，丹尼斯•梅多斯著，2004版，为什么强调是2004版呢，因为增长的极限事实上有三种版本，分别是1972年版、1992年版以及我所阅读的2004版。1972年版已经提出增长可能导致的后果，后面两个版本是作者在之后完善自己的观点以及更新数据之后完成的著作。</p>\n<h1 id=\"过冲\"><a href=\"#过冲\" class=\"headerlink\" title=\"过冲\"></a>过冲</h1><h2 id=\"过冲-1\"><a href=\"#过冲-1\" class=\"headerlink\" title=\"过冲\"></a>过冲</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;第一章的名字很拗口，过冲，作者在第一句话也已经做出了解释，意思是走过头了，意外而不是有意的超出了界限。这样的例子在现实生活中比比皆是，跑道上冲的过快而至于后继无力甚至昏倒，抬升重物过快导致手臂脱臼等等。但这些与作者想要讨论的有什么关系呢？</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;接下来作者讨论了过冲的充要条件，即以下三种</p>\n<blockquote><ul>\n<li>增长、加速或快速的变化</li>\n<li>有某种形式的界限或阻碍，超出这种界限或阻碍，运动中的系统就会变得不安全</li>\n<li>在感知和反应上存在滞后或失误，无法努力将系统控制在界限之内</li>\n</ul>\n</blockquote>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;过冲，第一个原因是增长，第二个是界限，第三个，迟钝。如果将第一个增长用在经济上，即经济增长中，会不会符合这三个条件，导致经济“过冲”呢?像我们国家建国之后曾经为了发展而发起了“大跃进”运动，但是从结果上来看，虽然调用大量的人力物力，但是效果并不显著，在那期间破坏了生态环境，间接导致了之后的三年困难时期。那么，如果这是过冲的话，进行分析第一个条件，已经知道了是经济增长，第二个条件，界限是什么，“人民日益增长的物质和文化需求通落后的社会生产力不相符”，那么想必是当时的社会生产力的限制，第三个条件，想必是决策者没能正确分析局势。这三个条件导致了当时的增长过冲，经济停滞。<br>联想结束，回到书中，作者提到了另一个术语</p>\n<h2 id=\"生态足迹\"><a href=\"#生态足迹\" class=\"headerlink\" title=\"生态足迹\"></a>生态足迹</h2><blockquote><p>“生态足迹”这个术语的流行始于马克斯•瓦克纳格尔及其同事在1997年为地球理事会所做的一项研究，用于指代地球上的人类需求和地球所能容纳的容量之间的关系，具体表现为一个国家可用以供其人口消费并吸收所产生废弃物的土地的数量。</p>\n</blockquote>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有点类似放牧，要有多大的草原能够满足一群羊在其中自由生活。这不单单指的是有多大的草原能容纳这一群羊，人类使用了资源之后资源在短时间内不会再生，就像羊吃了草之后草在短时间内不会长回来，要等到第二年才能恢复原样，类比于人类社会，事实上人类生存需要使用的土地面积大于人类居住所占用的土地面积。《地球生存报告》显示，从２０世纪８０年代后期起，人们每年消耗的资源已经超过了这个星球当年的资源再生量。换句话说，整个社会的生态足迹相对于地球所能提供的容量来说已经出现过冲。<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;毋庸置疑，这是极其危险的，将人类比作羊群的话，我们就是在一片并不足够养育我们的草原上随意放牧的羊群，这样导致的结果往往是草原变成沙漠，资源最终枯竭并无法再生。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但如果现在注意到这一点，也存在挽回的机会，像我国的计划生育，遏制了中国人口的增长趋势，长远角度上来看使我国的资源更好的得到分配。反视印度，过多的人口导致国内贫富差距不断拉大，经济也为之滞后。因此，如果早意识到这一点，防患于未然，倒也能防止严重的后果。当今世界的环境问题一步步恶化，只要人类早早做出正确的决策，也未必不能很好的解决。</p>\n<h1 id=\"驱动力：指数型增长\"><a href=\"#驱动力：指数型增长\" class=\"headerlink\" title=\"驱动力：指数型增长\"></a>驱动力：指数型增长</h1><h2 id=\"指数型增长\"><a href=\"#指数型增长\" class=\"headerlink\" title=\"指数型增长\"></a>指数型增长</h2><blockquote><p>过冲的首要原因是增长、加速和快速的变化。在一个多世纪的时间里，地球系统的许多物理特征都在迅速的发生变化。例如，人口、粮食生产、工业生产、资源消耗以及污染都在不断增长，并且常常是以越来越快的速度增长。这些增长是以数学上所说的“指数型增长”的方式进行的。</p>\n</blockquote>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最开始，某某地出现了雾霾，初时感觉很诧异，觉得这是件稀奇的事情，各种媒体不断报道这件事情，这个地方的政府也说要好好治理环境。但是到现在，纵观全国，雾霾不知什么时候已被人习以为常，就连没有重工业所在的哈尔滨，每年的冬天也是乌烟瘴气，对于一个城市来说，没有雾霾这件事情本身已经变成了一件稀奇的事情。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;工业产值的增长固然给了世界人民以便利，但同时也是双刃剑，它带给了这个世界以创伤。</p>\n<h2 id=\"世界人口增长\"><a href=\"#世界人口增长\" class=\"headerlink\" title=\"世界人口增长\"></a>世界人口增长</h2><blockquote><p>在１６５０年时，人类的人口数量大约为５亿左右，其年增长率约为０．３％，按照这速度大约要２４０年才会翻一番。<br>到１９００年时，人口数量达到１６亿，年增长率在０．７％～０．８％之间，大约需要１００年才会翻一番。<br>到１９６５年时，人类的人口数量达到３３亿，年增长率已经提高到２％，只需要３６年就会翻一番。</p>\n</blockquote>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是书中给出的数据，这何止是指数型，增长率也在不断的增长，因为工业与科技的发展，医疗卫生条件的改善，死亡率越来越低。与之前的死亡率平衡的出生率实质上就过大了，所以才使得增长率太高，导致人口膨胀，随之出现一系列问题。</p>\n<blockquote><p>１９６５年以后，死亡率继续下降，但平均出生率下降的甚至更快，在人口从３３亿增加到２０００年的刚刚超过６０亿的同时，人口的年增长率也从２％下降到１．２％。</p>\n</blockquote>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;感觉很奇怪，但看了作者的解释之后，其实也能理解。工业科技带给我们的除了生活水平的提高，相应的还有文化观念的变化，如下</p>\n<blockquote><p>全世界每个妇女所生育的孩子数量从２０世纪５０年代的平均５个下降到２０世纪九十年代的平均２．７个</p>\n</blockquote>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;人口增长并没有像数学计算那么简单，人类的生活水平提高的同时，观念也在提高。</p>\n<h2 id=\"世界工业增长\"><a href=\"#世界工业增长\" class=\"headerlink\" title=\"世界工业增长\"></a>世界工业增长</h2><blockquote><p>１９３０年到２０００年，世界工业产出的货币价值增长了１４倍</p>\n</blockquote>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;工业造成的价值越多，按理说人民生活水平应该越高才对，但事实上却不是，由于之前提到的人口增长的问题，人民生活水平并没有同样增长１４倍，而是比这更少，更出乎意料的是，这些多出来的生产价值并没有被平均的分配，至少不是公平的分配。现实中，社会中存在这一条贫富差距的沟壑，富者享有更多的劳动成果，贫者只能沦为给富者打下手的地步。</p>\n<h2 id=\"人越多越穷，越穷人越多？\"><a href=\"#人越多越穷，越穷人越多？\" class=\"headerlink\" title=\"人越多越穷，越穷人越多？\"></a>人越多越穷，越穷人越多？</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这里我对作者的观点就不太理解了，对于这一块作者给出的观点是富有的人更能在社会经济增长的时候获取自己的利益，相对的，贫穷的人在经济增长的时候却会沦为被压榨的对象，由此贫富差距就越拉越大。但是至少从我身边的例子来说，就有不少随着社会进步脱贫致富的人，增长本身应当是没有错的，如果出现了贫富差距越拉越大的情况，错在决策者不能很好的把握市场形势，政府不能很好的监管。类似于科学进步，科学本身是无罪的，罪在使用科学的人。</p>\n<h1 id=\"极限：源与汇\"><a href=\"#极限：源与汇\" class=\"headerlink\" title=\"极限：源与汇\"></a>极限：源与汇</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个星球的资源开采一定是有极限的，上小学的时候，课文中就常有世界的煤矿、石油即将被开采完的担忧。这是必然的，直到现在，虽然每年都有许许多多新型能源被不断开发，但是支撑我们工业的主要能源依然是石油等化石燃料。这些能源迟早会有枯竭的一天，到时候使用什么？核能？前苏联和日本的惨剧相信我们都看到了。太阳能？风能？稳定性以及并入电网还是一个世界难题。水力发电貌似是一个比较好的选择，事实上，从小出生在大山之中的我，也对这些水电站习以为常，但是水力发电太过依赖地形，而且一个不慎就会对自然环境造成极大的伤害，就如现在三峡下游自然环境在三峡大坝建立之后急剧恶化一样。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\n","excerpt":"<p>人文社科大作业<br>","more":"</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;本人选读的书目是《增长的极限》，美国的德内拉•梅多斯，乔根•兰德斯，丹尼斯•梅多斯著，2004版，为什么强调是2004版呢，因为增长的极限事实上有三种版本，分别是1972年版、1992年版以及我所阅读的2004版。1972年版已经提出增长可能导致的后果，后面两个版本是作者在之后完善自己的观点以及更新数据之后完成的著作。</p>\n<h1 id=\"过冲\"><a href=\"#过冲\" class=\"headerlink\" title=\"过冲\"></a>过冲</h1><h2 id=\"过冲-1\"><a href=\"#过冲-1\" class=\"headerlink\" title=\"过冲\"></a>过冲</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;第一章的名字很拗口，过冲，作者在第一句话也已经做出了解释，意思是走过头了，意外而不是有意的超出了界限。这样的例子在现实生活中比比皆是，跑道上冲的过快而至于后继无力甚至昏倒，抬升重物过快导致手臂脱臼等等。但这些与作者想要讨论的有什么关系呢？</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;接下来作者讨论了过冲的充要条件，即以下三种</p>\n<blockquote><ul>\n<li>增长、加速或快速的变化</li>\n<li>有某种形式的界限或阻碍，超出这种界限或阻碍，运动中的系统就会变得不安全</li>\n<li>在感知和反应上存在滞后或失误，无法努力将系统控制在界限之内</li>\n</ul>\n</blockquote>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;过冲，第一个原因是增长，第二个是界限，第三个，迟钝。如果将第一个增长用在经济上，即经济增长中，会不会符合这三个条件，导致经济“过冲”呢?像我们国家建国之后曾经为了发展而发起了“大跃进”运动，但是从结果上来看，虽然调用大量的人力物力，但是效果并不显著，在那期间破坏了生态环境，间接导致了之后的三年困难时期。那么，如果这是过冲的话，进行分析第一个条件，已经知道了是经济增长，第二个条件，界限是什么，“人民日益增长的物质和文化需求通落后的社会生产力不相符”，那么想必是当时的社会生产力的限制，第三个条件，想必是决策者没能正确分析局势。这三个条件导致了当时的增长过冲，经济停滞。<br>联想结束，回到书中，作者提到了另一个术语</p>\n<h2 id=\"生态足迹\"><a href=\"#生态足迹\" class=\"headerlink\" title=\"生态足迹\"></a>生态足迹</h2><blockquote><p>“生态足迹”这个术语的流行始于马克斯•瓦克纳格尔及其同事在1997年为地球理事会所做的一项研究，用于指代地球上的人类需求和地球所能容纳的容量之间的关系，具体表现为一个国家可用以供其人口消费并吸收所产生废弃物的土地的数量。</p>\n</blockquote>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有点类似放牧，要有多大的草原能够满足一群羊在其中自由生活。这不单单指的是有多大的草原能容纳这一群羊，人类使用了资源之后资源在短时间内不会再生，就像羊吃了草之后草在短时间内不会长回来，要等到第二年才能恢复原样，类比于人类社会，事实上人类生存需要使用的土地面积大于人类居住所占用的土地面积。《地球生存报告》显示，从２０世纪８０年代后期起，人们每年消耗的资源已经超过了这个星球当年的资源再生量。换句话说，整个社会的生态足迹相对于地球所能提供的容量来说已经出现过冲。<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;毋庸置疑，这是极其危险的，将人类比作羊群的话，我们就是在一片并不足够养育我们的草原上随意放牧的羊群，这样导致的结果往往是草原变成沙漠，资源最终枯竭并无法再生。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但如果现在注意到这一点，也存在挽回的机会，像我国的计划生育，遏制了中国人口的增长趋势，长远角度上来看使我国的资源更好的得到分配。反视印度，过多的人口导致国内贫富差距不断拉大，经济也为之滞后。因此，如果早意识到这一点，防患于未然，倒也能防止严重的后果。当今世界的环境问题一步步恶化，只要人类早早做出正确的决策，也未必不能很好的解决。</p>\n<h1 id=\"驱动力：指数型增长\"><a href=\"#驱动力：指数型增长\" class=\"headerlink\" title=\"驱动力：指数型增长\"></a>驱动力：指数型增长</h1><h2 id=\"指数型增长\"><a href=\"#指数型增长\" class=\"headerlink\" title=\"指数型增长\"></a>指数型增长</h2><blockquote><p>过冲的首要原因是增长、加速和快速的变化。在一个多世纪的时间里，地球系统的许多物理特征都在迅速的发生变化。例如，人口、粮食生产、工业生产、资源消耗以及污染都在不断增长，并且常常是以越来越快的速度增长。这些增长是以数学上所说的“指数型增长”的方式进行的。</p>\n</blockquote>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最开始，某某地出现了雾霾，初时感觉很诧异，觉得这是件稀奇的事情，各种媒体不断报道这件事情，这个地方的政府也说要好好治理环境。但是到现在，纵观全国，雾霾不知什么时候已被人习以为常，就连没有重工业所在的哈尔滨，每年的冬天也是乌烟瘴气，对于一个城市来说，没有雾霾这件事情本身已经变成了一件稀奇的事情。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;工业产值的增长固然给了世界人民以便利，但同时也是双刃剑，它带给了这个世界以创伤。</p>\n<h2 id=\"世界人口增长\"><a href=\"#世界人口增长\" class=\"headerlink\" title=\"世界人口增长\"></a>世界人口增长</h2><blockquote><p>在１６５０年时，人类的人口数量大约为５亿左右，其年增长率约为０．３％，按照这速度大约要２４０年才会翻一番。<br>到１９００年时，人口数量达到１６亿，年增长率在０．７％～０．８％之间，大约需要１００年才会翻一番。<br>到１９６５年时，人类的人口数量达到３３亿，年增长率已经提高到２％，只需要３６年就会翻一番。</p>\n</blockquote>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是书中给出的数据，这何止是指数型，增长率也在不断的增长，因为工业与科技的发展，医疗卫生条件的改善，死亡率越来越低。与之前的死亡率平衡的出生率实质上就过大了，所以才使得增长率太高，导致人口膨胀，随之出现一系列问题。</p>\n<blockquote><p>１９６５年以后，死亡率继续下降，但平均出生率下降的甚至更快，在人口从３３亿增加到２０００年的刚刚超过６０亿的同时，人口的年增长率也从２％下降到１．２％。</p>\n</blockquote>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;感觉很奇怪，但看了作者的解释之后，其实也能理解。工业科技带给我们的除了生活水平的提高，相应的还有文化观念的变化，如下</p>\n<blockquote><p>全世界每个妇女所生育的孩子数量从２０世纪５０年代的平均５个下降到２０世纪九十年代的平均２．７个</p>\n</blockquote>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;人口增长并没有像数学计算那么简单，人类的生活水平提高的同时，观念也在提高。</p>\n<h2 id=\"世界工业增长\"><a href=\"#世界工业增长\" class=\"headerlink\" title=\"世界工业增长\"></a>世界工业增长</h2><blockquote><p>１９３０年到２０００年，世界工业产出的货币价值增长了１４倍</p>\n</blockquote>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;工业造成的价值越多，按理说人民生活水平应该越高才对，但事实上却不是，由于之前提到的人口增长的问题，人民生活水平并没有同样增长１４倍，而是比这更少，更出乎意料的是，这些多出来的生产价值并没有被平均的分配，至少不是公平的分配。现实中，社会中存在这一条贫富差距的沟壑，富者享有更多的劳动成果，贫者只能沦为给富者打下手的地步。</p>\n<h2 id=\"人越多越穷，越穷人越多？\"><a href=\"#人越多越穷，越穷人越多？\" class=\"headerlink\" title=\"人越多越穷，越穷人越多？\"></a>人越多越穷，越穷人越多？</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这里我对作者的观点就不太理解了，对于这一块作者给出的观点是富有的人更能在社会经济增长的时候获取自己的利益，相对的，贫穷的人在经济增长的时候却会沦为被压榨的对象，由此贫富差距就越拉越大。但是至少从我身边的例子来说，就有不少随着社会进步脱贫致富的人，增长本身应当是没有错的，如果出现了贫富差距越拉越大的情况，错在决策者不能很好的把握市场形势，政府不能很好的监管。类似于科学进步，科学本身是无罪的，罪在使用科学的人。</p>\n<h1 id=\"极限：源与汇\"><a href=\"#极限：源与汇\" class=\"headerlink\" title=\"极限：源与汇\"></a>极限：源与汇</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个星球的资源开采一定是有极限的，上小学的时候，课文中就常有世界的煤矿、石油即将被开采完的担忧。这是必然的，直到现在，虽然每年都有许许多多新型能源被不断开发，但是支撑我们工业的主要能源依然是石油等化石燃料。这些能源迟早会有枯竭的一天，到时候使用什么？核能？前苏联和日本的惨剧相信我们都看到了。太阳能？风能？稳定性以及并入电网还是一个世界难题。水力发电貌似是一个比较好的选择，事实上，从小出生在大山之中的我，也对这些水电站习以为常，但是水力发电太过依赖地形，而且一个不慎就会对自然环境造成极大的伤害，就如现在三峡下游自然环境在三峡大坝建立之后急剧恶化一样。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"civ9mvsci0003az990c554zi2","category_id":"civ9mvscp0005az99rgh9rxpd","_id":"civ9mvsdc000laz991c5el2ak"},{"post_id":"civ9mvscw0009az99p4gepy2q","category_id":"civ9mvsdf000naz997e3r4dys","_id":"civ9mvsdt000waz9980b8htp2"},{"post_id":"civ9mvsdq000taz99gtddulha","category_id":"civ9mvscp0005az99rgh9rxpd","_id":"civ9mvsdw0010az990zqezqef"},{"post_id":"civ9mvscc0001az99r7ow6snp","category_id":"civ9mvscp0005az99rgh9rxpd","_id":"civ9mvsdx0012az99a918hl81"},{"post_id":"civ9mvscc0001az99r7ow6snp","category_id":"civ9mvsdp000raz99vvjcxzx3","_id":"civ9mvsdy0014az997tbdq2t2"},{"post_id":"civ9mvscy000aaz99gz90uzhq","category_id":"civ9mvsdf000naz997e3r4dys","_id":"civ9mvsdy0016az99qht1ikja"},{"post_id":"civ9mvsd2000eaz99ogz83azy","category_id":"civ9mvscp0005az99rgh9rxpd","_id":"civ9mvse2001aaz990npae9a1"},{"post_id":"civ9mvsd2000eaz99ogz83azy","category_id":"civ9mvsdx0011az990wt6p37f","_id":"civ9mvse3001caz998za952ki"},{"post_id":"civ9mvsd5000gaz99pyyl6ad9","category_id":"civ9mvscp0005az99rgh9rxpd","_id":"civ9mvse5001eaz99e9ay8kf2"},{"post_id":"civ9mvsd5000gaz99pyyl6ad9","category_id":"civ9mvsdy0017az99ia4e7lh5","_id":"civ9mvse6001gaz99mb7hqei8"},{"post_id":"civ9mvsdb000jaz99pjlxda6c","category_id":"civ9mvscp0005az99rgh9rxpd","_id":"civ9mvse6001iaz99hd1wz2fg"},{"post_id":"civ9mvsdb000jaz99pjlxda6c","category_id":"civ9mvse3001baz993o6sx1tr","_id":"civ9mvsec001kaz990ruym722"},{"post_id":"civ9mvscs0007az99h3cp82oc","category_id":"civ9mvscp0005az99rgh9rxpd","_id":"civ9mvsed001naz99e4o0z0xq"},{"post_id":"civ9mvscs0007az99h3cp82oc","category_id":"civ9mvse5001faz99nfxt7hhw","_id":"civ9mvsed001qaz99fzw865o1"},{"post_id":"civ9mvsdd000maz99feslnx2m","category_id":"civ9mvsdf000naz997e3r4dys","_id":"civ9mvsef001taz9917bcpxn0"},{"post_id":"civ9mvsdg000paz99zm70qyj4","category_id":"civ9mvscp0005az99rgh9rxpd","_id":"civ9mvsej001yaz99piusmvx9"},{"post_id":"civ9mvsdg000paz99zm70qyj4","category_id":"civ9mvsed001oaz99m523mhme","_id":"civ9mvsek0021az99gu8hfwj1"},{"post_id":"civ9mvsdm000qaz99qo5v4b98","category_id":"civ9mvscp0005az99rgh9rxpd","_id":"civ9mvsek0023az995qa2j8i4"},{"post_id":"civ9mvsdm000qaz99qo5v4b98","category_id":"civ9mvsdy0017az99ia4e7lh5","_id":"civ9mvsel0024az99h32og36r"},{"post_id":"civ9mvsds000vaz99mty4plvf","category_id":"civ9mvsek001zaz99fpt2zwqq","_id":"civ9mvsel0026az99eo4rczpa"}],"PostTag":[{"post_id":"civ9mvscc0001az99r7ow6snp","tag_id":"civ9mvscr0006az990ewuhsnc","_id":"civ9mvsd2000daz999lsef85r"},{"post_id":"civ9mvscy000aaz99gz90uzhq","tag_id":"civ9mvscr0006az990ewuhsnc","_id":"civ9mvsd4000faz99gq4txfxl"},{"post_id":"civ9mvsci0003az990c554zi2","tag_id":"civ9mvsd0000caz991qnxpsdi","_id":"civ9mvsdc000kaz99x50iz1uj"},{"post_id":"civ9mvscs0007az99h3cp82oc","tag_id":"civ9mvsd8000iaz99mwgsemxp","_id":"civ9mvsds000uaz993gunwgyb"},{"post_id":"civ9mvscs0007az99h3cp82oc","tag_id":"civ9mvsdg000oaz9936bo94me","_id":"civ9mvsdt000yaz9914pj4qvs"},{"post_id":"civ9mvscw0009az99p4gepy2q","tag_id":"civ9mvsdq000saz99mhzh1a5b","_id":"civ9mvsdy0015az998kje7put"},{"post_id":"civ9mvscw0009az99p4gepy2q","tag_id":"civ9mvsdv000zaz99x8ajzot6","_id":"civ9mvse00018az99owzn1z94"},{"post_id":"civ9mvsd2000eaz99ogz83azy","tag_id":"civ9mvsdy0013az99pbm0noo8","_id":"civ9mvsed001maz997kjt8bv7"},{"post_id":"civ9mvsd2000eaz99ogz83azy","tag_id":"civ9mvse00019az990gcpj4ix","_id":"civ9mvsed001paz99tssgs9ej"},{"post_id":"civ9mvsd2000eaz99ogz83azy","tag_id":"civ9mvse4001daz99lseqfq1u","_id":"civ9mvsef001saz99wbugqs2s"},{"post_id":"civ9mvsd2000eaz99ogz83azy","tag_id":"civ9mvse6001haz99esxmkzdp","_id":"civ9mvseh001vaz99svh645aj"},{"post_id":"civ9mvsd5000gaz99pyyl6ad9","tag_id":"civ9mvsec001laz99qguac2f8","_id":"civ9mvsej001xaz99n2jfoc47"},{"post_id":"civ9mvsdb000jaz99pjlxda6c","tag_id":"civ9mvsee001raz99atzcr4li","_id":"civ9mvsek0020az99ig4y0yp6"},{"post_id":"civ9mvsdd000maz99feslnx2m","tag_id":"civ9mvsdy0013az99pbm0noo8","_id":"civ9mvsel0028az99uulgrri4"},{"post_id":"civ9mvsdd000maz99feslnx2m","tag_id":"civ9mvsek0022az99cz4v10f2","_id":"civ9mvsel0029az99oxs5dca5"},{"post_id":"civ9mvsdd000maz99feslnx2m","tag_id":"civ9mvsel0025az99dgk28fpy","_id":"civ9mvsem002baz996tpzpozh"},{"post_id":"civ9mvsdg000paz99zm70qyj4","tag_id":"civ9mvsel0027az99zgroudmq","_id":"civ9mvsem002caz99bbk5chdl"},{"post_id":"civ9mvsdm000qaz99qo5v4b98","tag_id":"civ9mvsem002aaz99qp8ua674","_id":"civ9mvseo002faz99yjsoryc4"},{"post_id":"civ9mvsdm000qaz99qo5v4b98","tag_id":"civ9mvsem002daz99hc9g04do","_id":"civ9mvseo002gaz99ictuoip8"},{"post_id":"civ9mvsdq000taz99gtddulha","tag_id":"civ9mvsem002eaz99frlizkaz","_id":"civ9mvsep002jaz99dij7gqzw"},{"post_id":"civ9mvsdq000taz99gtddulha","tag_id":"civ9mvseo002haz99d00mt6kg","_id":"civ9mvseq002kaz99aro3ya3x"},{"post_id":"civ9mvsds000vaz99mty4plvf","tag_id":"civ9mvsel0027az99zgroudmq","_id":"civ9mvser002maz990yhqzpti"},{"post_id":"civ9mvsds000vaz99mty4plvf","tag_id":"civ9mvseq002laz99bcwuqg30","_id":"civ9mvser002naz99yhmccttp"}],"Tag":[{"name":"Hexo","_id":"civ9mvscr0006az990ewuhsnc"},{"name":"草稿","_id":"civ9mvsd0000caz991qnxpsdi"},{"name":"游戏","_id":"civ9mvsd8000iaz99mwgsemxp"},{"name":"生活","_id":"civ9mvsdg000oaz9936bo94me"},{"name":"linux","_id":"civ9mvsdq000saz99mhzh1a5b"},{"name":"git","_id":"civ9mvsdv000zaz99x8ajzot6"},{"name":"Java","_id":"civ9mvsdy0013az99pbm0noo8"},{"name":"类型转换","_id":"civ9mvse00019az990gcpj4ix"},{"name":"整数","_id":"civ9mvse4001daz99lseqfq1u"},{"name":"字符串","_id":"civ9mvse6001haz99esxmkzdp"},{"name":"计算机网络","_id":"civ9mvsec001laz99qguac2f8"},{"name":"数据库","_id":"civ9mvsee001raz99atzcr4li"},{"name":"mysql","_id":"civ9mvsek0022az99cz4v10f2"},{"name":"mybatis","_id":"civ9mvsel0025az99dgk28fpy"},{"name":"人文社科","_id":"civ9mvsel0027az99zgroudmq"},{"name":"底层","_id":"civ9mvsem002aaz99qp8ua674"},{"name":"编译原理","_id":"civ9mvsem002daz99hc9g04do"},{"name":"软件体系与设计","_id":"civ9mvsem002eaz99frlizkaz"},{"name":"复习","_id":"civ9mvseo002haz99d00mt6kg"},{"name":"读书笔记","_id":"civ9mvseq002laz99bcwuqg30"}]}}