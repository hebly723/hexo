<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.ChecksMapper" >
  <resultMap id="BaseResultMap" type="po.Checks" >
    <id column="CHE_ID" property="cheId" jdbcType="VARCHAR" />
    <result column="CHE_YEAR" property="cheYear" jdbcType="INTEGER" />
    <result column="TAS_REC_NUM" property="tasRecNum" jdbcType="INTEGER" />
    <result column="TAS_EXE_NUM" property="tasExeNum" jdbcType="INTEGER" />
    <result column="APP_NUM" property="appNum" jdbcType="INTEGER" />
    <result column="APP_HAN_NUM" property="appHanNum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    CHE_ID, CHE_YEAR, TAS_REC_NUM, TAS_EXE_NUM, APP_NUM, APP_HAN_NUM
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="po.ChecksExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from checks
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from checks
    where CHE_ID = #{cheId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from checks
    where CHE_ID = #{cheId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="po.ChecksExample" >
    delete from checks
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="po.Checks" >
    insert into checks (CHE_ID, CHE_YEAR, TAS_REC_NUM, 
      TAS_EXE_NUM, APP_NUM, APP_HAN_NUM
      )
    values (#{cheId,jdbcType=VARCHAR}, #{cheYear,jdbcType=INTEGER}, #{tasRecNum,jdbcType=INTEGER}, 
      #{tasExeNum,jdbcType=INTEGER}, #{appNum,jdbcType=INTEGER}, #{appHanNum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="po.Checks" >
    insert into checks
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cheId != null" >
        CHE_ID,
      </if>
      <if test="cheYear != null" >
        CHE_YEAR,
      </if>
      <if test="tasRecNum != null" >
        TAS_REC_NUM,
      </if>
      <if test="tasExeNum != null" >
        TAS_EXE_NUM,
      </if>
      <if test="appNum != null" >
        APP_NUM,
      </if>
      <if test="appHanNum != null" >
        APP_HAN_NUM,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cheId != null" >
        #{cheId,jdbcType=VARCHAR},
      </if>
      <if test="cheYear != null" >
        #{cheYear,jdbcType=INTEGER},
      </if>
      <if test="tasRecNum != null" >
        #{tasRecNum,jdbcType=INTEGER},
      </if>
      <if test="tasExeNum != null" >
        #{tasExeNum,jdbcType=INTEGER},
      </if>
      <if test="appNum != null" >
        #{appNum,jdbcType=INTEGER},
      </if>
      <if test="appHanNum != null" >
        #{appHanNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="po.ChecksExample" resultType="java.lang.Integer" >
    select count(*) from checks
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update checks
    <set >
      <if test="record.cheId != null" >
        CHE_ID = #{record.cheId,jdbcType=VARCHAR},
      </if>
      <if test="record.cheYear != null" >
        CHE_YEAR = #{record.cheYear,jdbcType=INTEGER},
      </if>
      <if test="record.tasRecNum != null" >
        TAS_REC_NUM = #{record.tasRecNum,jdbcType=INTEGER},
      </if>
      <if test="record.tasExeNum != null" >
        TAS_EXE_NUM = #{record.tasExeNum,jdbcType=INTEGER},
      </if>
      <if test="record.appNum != null" >
        APP_NUM = #{record.appNum,jdbcType=INTEGER},
      </if>
      <if test="record.appHanNum != null" >
        APP_HAN_NUM = #{record.appHanNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update checks
    set CHE_ID = #{record.cheId,jdbcType=VARCHAR},
      CHE_YEAR = #{record.cheYear,jdbcType=INTEGER},
      TAS_REC_NUM = #{record.tasRecNum,jdbcType=INTEGER},
      TAS_EXE_NUM = #{record.tasExeNum,jdbcType=INTEGER},
      APP_NUM = #{record.appNum,jdbcType=INTEGER},
      APP_HAN_NUM = #{record.appHanNum,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="po.Checks" >
    update checks
    <set >
      <if test="cheYear != null" >
        CHE_YEAR = #{cheYear,jdbcType=INTEGER},
      </if>
      <if test="tasRecNum != null" >
        TAS_REC_NUM = #{tasRecNum,jdbcType=INTEGER},
      </if>
      <if test="tasExeNum != null" >
        TAS_EXE_NUM = #{tasExeNum,jdbcType=INTEGER},
      </if>
      <if test="appNum != null" >
        APP_NUM = #{appNum,jdbcType=INTEGER},
      </if>
      <if test="appHanNum != null" >
        APP_HAN_NUM = #{appHanNum,jdbcType=INTEGER},
      </if>
    </set>
    where CHE_ID = #{cheId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="po.Checks" >
    update checks
    set CHE_YEAR = #{cheYear,jdbcType=INTEGER},
      TAS_REC_NUM = #{tasRecNum,jdbcType=INTEGER},
      TAS_EXE_NUM = #{tasExeNum,jdbcType=INTEGER},
      APP_NUM = #{appNum,jdbcType=INTEGER},
      APP_HAN_NUM = #{appHanNum,jdbcType=INTEGER}
    where CHE_ID = #{cheId,jdbcType=VARCHAR}
  </update>
</mapper>